(window.webpackJsonp=window.webpackJsonp||[]).push([[1],[function(e,t,n){"use strict";e.exports=n(28)},function(e,t,n){"use strict";var r=n(15),o=Object.prototype.toString;function i(e){return"[object Array]"===o.call(e)}function a(e){return void 0===e}function l(e){return null!==e&&"object"==typeof e}function u(e){return"[object Function]"===o.call(e)}function c(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===o.call(e)},isBuffer:function(e){return null!==e&&!a(e)&&null!==e.constructor&&!a(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:l,isUndefined:a,isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:u,isStream:function(e){return l(e)&&u(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:c,merge:function e(){var t={};function n(n,r){"object"==typeof t[r]&&"object"==typeof n?t[r]=e(t[r],n):t[r]=n}for(var r=0,o=arguments.length;r<o;r++)c(arguments[r],n);return t},deepMerge:function e(){var t={};function n(n,r){"object"==typeof t[r]&&"object"==typeof n?t[r]=e(t[r],n):t[r]="object"==typeof n?e({},n):n}for(var r=0,o=arguments.length;r<o;r++)c(arguments[r],n);return t},extend:function(e,t,n){return c(t,(function(t,o){e[o]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(e,t,n){"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}n.d(t,"a",(function(){return r}))},function(e,t,n){e.exports=n(29)()},function(e,t,n){"use strict";e.exports=n(33)},function(e,t,n){"use strict";var r=n(4),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var l=u(t),m=u(n),v=0;v<a.length;++v){var g=a[v];if(!(i[g]||r&&r[g]||m&&m[g]||l&&l[g])){var y=d(n,g);try{c(t,g,y)}catch(e){}}}}return t}},,function(e,t){var n,r,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function l(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var u,c=[],s=!1,f=-1;function d(){s&&u&&(s=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!s){var e=l(d);s=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,s=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function m(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new h(e,t)),1!==c.length||s||l(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){"use strict";n.r(t),function(e){n.d(t,"ServerStyleSheet",(function(){return je})),n.d(t,"StyleSheetConsumer",(function(){return Y})),n.d(t,"StyleSheetContext",(function(){return G})),n.d(t,"StyleSheetManager",(function(){return ne})),n.d(t,"ThemeConsumer",(function(){return Pe})),n.d(t,"ThemeContext",(function(){return Ce})),n.d(t,"ThemeProvider",(function(){return _e})),n.d(t,"__PRIVATE__",(function(){return De})),n.d(t,"createGlobalStyle",(function(){return ze})),n.d(t,"css",(function(){return se})),n.d(t,"isStyledComponent",(function(){return w})),n.d(t,"keyframes",(function(){return Me})),n.d(t,"useTheme",(function(){return Fe})),n.d(t,"version",(function(){return Ue})),n.d(t,"withTheme",(function(){return Le}));var r=n(4),o=n(0),i=n.n(o),a=n(24),l=n.n(a),u=n(25),c=n(26),s=n(12),f=n(5),d=n.n(f);function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var h=function(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n},m=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!Object(r.typeOf)(e)},v=Object.freeze([]),g=Object.freeze({});function y(e){return"function"==typeof e}function b(e){return e.displayName||e.name||"Component"}function w(e){return e&&"string"==typeof e.styledComponentId}var k=void 0!==e&&(e.env.REACT_APP_SC_ATTR||e.env.SC_ATTR)||"data-styled",x="undefined"!=typeof window&&"HTMLElement"in window,S="boolean"==typeof SC_DISABLE_SPEEDY&&SC_DISABLE_SPEEDY||void 0!==e&&(e.env.REACT_APP_SC_DISABLE_SPEEDY||e.env.SC_DISABLE_SPEEDY)||!1,E={},T=function(){return n.nc};function C(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/utils/errors.md#"+e+" for more information."+(n.length>0?" Additional arguments: "+n.join(", "):""))}var P=function(e){var t=document.head,n=e||t,r=document.createElement("style"),o=function(e){for(var t=e.childNodes,n=t.length;n>=0;n--){var r=t[n];if(r&&1===r.nodeType&&r.hasAttribute(k))return r}}(n),i=void 0!==o?o.nextSibling:null;r.setAttribute(k,"active"),r.setAttribute("data-styled-version","5.1.1");var a=T();return a&&r.setAttribute("nonce",a),n.insertBefore(r,i),r},_=function(){function e(e){var t=this.element=P(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var o=t[n];if(o.ownerNode===e)return o}C(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),O=function(){function e(e){var t=this.element=P(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t),r=this.nodes[e];return this.element.insertBefore(n,r||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),R=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),A=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,o=r;e>=o;)(o<<=1)<0&&C(16,""+e);this.groupSizes=new Uint32Array(o),this.groupSizes.set(n),this.length=o;for(var i=r;i<o;i++)this.groupSizes[i]=0}for(var a=this.indexOfGroup(e+1),l=0,u=t.length;l<u;l++)this.tag.insertRule(a,t[l])&&(this.groupSizes[e]++,a++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var o=n;o<r;o++)this.tag.deleteRule(n)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),o=r+n,i=r;i<o;i++)t+=this.tag.getRule(i)+"/*!sc*/\n";return t},e}(),N=new Map,I=new Map,z=1,M=function(e){if(N.has(e))return N.get(e);var t=z++;return N.set(e,t),I.set(t,e),t},j=function(e){return I.get(e)},L=function(e,t){t>=z&&(z=t+1),N.set(e,t),I.set(t,e)},F="style["+k+'][data-styled-version="5.1.1"]',D=new RegExp("^"+k+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),U=function(e,t,n){for(var r,o=n.split(","),i=0,a=o.length;i<a;i++)(r=o[i])&&e.registerName(t,r)},$=function(e,t){for(var n=t.innerHTML.split("/*!sc*/\n"),r=[],o=0,i=n.length;o<i;o++){var a=n[o].trim();if(a){var l=a.match(D);if(l){var u=0|parseInt(l[1],10),c=l[2];0!==u&&(L(c,u),U(e,c,l[3]),e.getTag().insertRules(u,r)),r.length=0}else r.push(a)}}},B=x,H={isServer:!x,useCSSOMInjection:!S},V=function(){function e(e,t,n){void 0===e&&(e=H),void 0===t&&(t={}),this.options=p({},H,{},e),this.gs=t,this.names=new Map(n),!this.options.isServer&&x&&B&&(B=!1,function(e){for(var t=document.querySelectorAll(F),n=0,r=t.length;n<r;n++){var o=t[n];o&&"active"!==o.getAttribute(k)&&($(e,o),o.parentNode&&o.parentNode.removeChild(o))}}(this))}e.registerId=function(e){return M(e)};var t=e.prototype;return t.reconstructWithOptions=function(t){return new e(p({},this.options,{},t),this.gs,this.names)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(t=this.options,n=t.isServer,r=t.useCSSOMInjection,o=t.target,e=n?new R(o):r?new _(o):new O(o),new A(e)));var e,t,n,r,o},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(M(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},t.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(M(e),n)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(M(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),n=t.length,r="",o=0;o<n;o++){var i=j(o);if(void 0!==i){var a=e.names.get(i),l=t.getGroup(o);if(void 0!==a&&0!==l.length){var u=k+".g"+o+'[id="'+i+'"]',c="";void 0!==a&&a.forEach((function(e){e.length>0&&(c+=e+",")})),r+=""+l+u+'{content:"'+c+'"}/*!sc*/\n'}}}return r}(this)},e}(),W=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},q=function(e){return W(5381,e)};var Q=/^\s*\/\/.*$/gm;function K(e){var t,n,r,o=void 0===e?g:e,i=o.options,a=void 0===i?g:i,l=o.plugins,c=void 0===l?v:l,s=new u.a(a),f=[],d=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,o,i,a,l,u,c,s,f){switch(n){case 1:if(0===s&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===c)return r+"/*|*/";break;case 3:switch(c){case 102:case 112:return e(o[0]+r),"";default:return r+(0===f?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}((function(e){f.push(e)})),p=function(e,r,o){return r>0&&-1!==o.slice(0,r).indexOf(n)&&o.slice(r-n.length,r)!==n?"."+t:e};function h(e,o,i,a){void 0===a&&(a="&");var l=e.replace(Q,""),u=o&&i?i+" "+o+" { "+l+" }":l;return t=a,n=o,r=new RegExp("\\"+n+"\\b","g"),s(i||!o?"":o,u)}return s.use([].concat(c,[function(e,t,o){2===e&&o.length&&o[0].lastIndexOf(n)>0&&(o[0]=o[0].replace(r,p))},d,function(e){if(-2===e){var t=f;return f=[],t}}])),h.hash=c.length?c.reduce((function(e,t){return t.name||C(15),W(e,t.name)}),5381).toString():"",h}var G=i.a.createContext(),Y=G.Consumer,X=i.a.createContext(),J=(X.Consumer,new V),Z=K();function ee(){return Object(o.useContext)(G)||J}function te(){return Object(o.useContext)(X)||Z}function ne(e){var t=Object(o.useState)(e.stylisPlugins),n=t[0],r=t[1],a=ee(),u=Object(o.useMemo)((function(){var t=a;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target})),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target]),c=Object(o.useMemo)((function(){return K({options:{prefix:!e.disableVendorPrefixes},plugins:n})}),[e.disableVendorPrefixes,n]);return Object(o.useEffect)((function(){l()(n,e.stylisPlugins)||r(e.stylisPlugins)}),[e.stylisPlugins]),i.a.createElement(G.Provider,{value:u},i.a.createElement(X.Provider,{value:c},e.children))}var re=function(){function e(e,t){var n=this;this.inject=function(e){e.hasNameForId(n.id,n.name)||e.insertRules(n.id,n.name,Z.apply(void 0,n.stringifyArgs))},this.toString=function(){return C(12,String(n.name))},this.name=e,this.id="sc-keyframes-"+e,this.stringifyArgs=t}return e.prototype.getName=function(){return this.name},e}(),oe=/([A-Z])/g,ie=/^ms-/;function ae(e){return e.replace(oe,"-$1").toLowerCase().replace(ie,"-ms-")}var le=function(e){return null==e||!1===e||""===e},ue=function e(t,n){var r=[];return Object.keys(t).forEach((function(n){if(!le(t[n])){if(m(t[n]))return r.push.apply(r,e(t[n],n)),r;if(y(t[n]))return r.push(ae(n)+":",t[n],";"),r;r.push(ae(n)+": "+(o=n,(null==(i=t[n])||"boolean"==typeof i||""===i?"":"number"!=typeof i||0===i||o in c.a?String(i).trim():i+"px")+";"))}var o,i;return r})),n?[n+" {"].concat(r,["}"]):r};function ce(e,t,n){if(Array.isArray(e)){for(var r,o=[],i=0,a=e.length;i<a;i+=1)""!==(r=ce(e[i],t,n))&&(Array.isArray(r)?o.push.apply(o,r):o.push(r));return o}return le(e)?"":w(e)?"."+e.styledComponentId:y(e)?"function"!=typeof(l=e)||l.prototype&&l.prototype.isReactComponent||!t?e:ce(e(t),t,n):e instanceof re?n?(e.inject(n),e.getName()):e:m(e)?ue(e):e.toString();var l}function se(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return y(e)||m(e)?ce(h(v,[e].concat(n))):0===n.length&&1===e.length&&"string"==typeof e[0]?e:ce(h(e,n))}var fe=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},de=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function pe(e,t,n){var r=e[n];fe(t)&&fe(r)?he(r,t):e[n]=t}function he(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(var o=0,i=n;o<i.length;o++){var a=i[o];if(fe(a))for(var l in a)de(l)&&pe(e,a[l],l)}return e}var me=/(a)(d)/gi,ve=function(e){return String.fromCharCode(e+(e>25?39:97))};function ge(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0)n=ve(t%52)+n;return(ve(t%52)+n).replace(me,"$1-$2")}function ye(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(y(n)&&!w(n))return!1}return!0}var be=function(){function e(e,t){this.rules=e,this.staticRulesId="",this.isStatic=ye(e),this.componentId=t,this.baseHash=q(t),V.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.componentId;if(this.isStatic&&!n.hash){if(this.staticRulesId&&t.hasNameForId(r,this.staticRulesId))return this.staticRulesId;var o=ce(this.rules,e,t).join(""),i=ge(W(this.baseHash,o.length)>>>0);if(!t.hasNameForId(r,i)){var a=n(o,"."+i,void 0,r);t.insertRules(r,i,a)}return this.staticRulesId=i,i}for(var l=this.rules.length,u=W(this.baseHash,n.hash),c="",s=0;s<l;s++){var f=this.rules[s];if("string"==typeof f)c+=f;else{var d=ce(f,e,t),p=Array.isArray(d)?d.join(""):d;u=W(u,p+s),c+=p}}var h=ge(u>>>0);if(!t.hasNameForId(r,h)){var m=n(c,"."+h,void 0,r);t.insertRules(r,h,m)}return h},e}(),we=(new Set,function(e,t,n){return void 0===n&&(n=g),e.theme!==n.theme&&e.theme||t||n.theme}),ke=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,xe=/(^-|-$)/g;function Se(e){return e.replace(ke,"-").replace(xe,"")}function Ee(e){return"string"==typeof e&&!0}var Te=function(e){return ge(q(e)>>>0)};var Ce=i.a.createContext(),Pe=Ce.Consumer;function _e(e){var t=Object(o.useContext)(Ce),n=Object(o.useMemo)((function(){return function(e,t){return e?y(e)?e(t):Array.isArray(e)||"object"!=typeof e?C(8):t?p({},t,{},e):e:C(14)}(e.theme,t)}),[e.theme,t]);return e.children?i.a.createElement(Ce.Provider,{value:n},e.children):null}var Oe={};function Re(e,t,n){var r=e.attrs,i=e.componentStyle,a=e.defaultProps,l=e.foldedComponentIds,u=e.shouldForwardProp,c=e.styledComponentId,f=e.target;Object(o.useDebugValue)(c);var d=function(e,t,n){void 0===e&&(e=g);var r=p({},t,{theme:e}),o={};return n.forEach((function(e){var t,n,i,a=e;for(t in y(a)&&(a=a(r)),a)r[t]=o[t]="className"===t?(n=o[t],i=a[t],n&&i?n+" "+i:n||i):a[t]})),[r,o]}(we(t,Object(o.useContext)(Ce),a)||g,t,r),h=d[0],m=d[1],v=function(e,t,n,r){var i=ee(),a=te(),l=e.isStatic&&!t?e.generateAndInjectStyles(g,i,a):e.generateAndInjectStyles(n,i,a);return Object(o.useDebugValue)(l),l}(i,r.length>0,h),b=n,w=m.$as||t.$as||m.as||t.as||f,k=Ee(w),x=m!==t?p({},t,{},m):t,S=u||k&&s.a,E={};for(var T in x)"$"!==T[0]&&"as"!==T&&("forwardedAs"===T?E.as=x[T]:S&&!S(T,s.a)||(E[T]=x[T]));return t.style&&m.style!==t.style&&(E.style=p({},t.style,{},m.style)),E.className=Array.prototype.concat(l,c,v!==c?v:null,t.className,m.className).filter(Boolean).join(" "),E.ref=b,Object(o.createElement)(w,E)}function Ae(e,t,n){var r=w(e),o=!Ee(e),a=t.displayName,l=void 0===a?function(e){return Ee(e)?"styled."+e:"Styled("+b(e)+")"}(e):a,u=t.componentId,c=void 0===u?function(e,t){var n="string"!=typeof e?"sc":Se(e);Oe[n]=(Oe[n]||0)+1;var r=n+"-"+Te(n+Oe[n]);return t?t+"-"+r:r}(t.displayName,t.parentComponentId):u,s=t.attrs,f=void 0===s?v:s,h=t.displayName&&t.componentId?Se(t.displayName)+"-"+t.componentId:t.componentId||c,m=r&&e.attrs?Array.prototype.concat(e.attrs,f).filter(Boolean):f,g=t.shouldForwardProp;r&&e.shouldForwardProp&&(g=g?function(n,r){return e.shouldForwardProp(n,r)&&t.shouldForwardProp(n,r)}:e.shouldForwardProp);var y,k=new be(r?e.componentStyle.rules.concat(n):n,h),x=function(e,t){return Re(y,e,t)};return x.displayName=l,(y=i.a.forwardRef(x)).attrs=m,y.componentStyle=k,y.displayName=l,y.shouldForwardProp=g,y.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):v,y.styledComponentId=h,y.target=r?e.target:e,y.withComponent=function(e){var r=t.componentId,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(t,["componentId"]),i=r&&r+"-"+(Ee(e)?e:Se(b(e)));return Ae(e,p({},o,{attrs:m,componentId:i}),n)},Object.defineProperty(y,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=r?he({},e.defaultProps,t):t}}),y.toString=function(){return"."+y.styledComponentId},o&&d()(y,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,self:!0,styledComponentId:!0,target:!0,withComponent:!0}),y}var Ne=function(e){return function e(t,n,o){if(void 0===o&&(o=g),!Object(r.isValidElementType)(n))return C(1,String(n));var i=function(){return t(n,o,se.apply(void 0,arguments))};return i.withConfig=function(r){return e(t,n,p({},o,{},r))},i.attrs=function(r){return e(t,n,p({},o,{attrs:Array.prototype.concat(o.attrs,r).filter(Boolean)}))},i}(Ae,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){Ne[e]=Ne(e)}));var Ie=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=ye(e)}var t=e.prototype;return t.createStyles=function(e,t,n,r){var o=r(ce(this.rules,t,n).join(""),""),i=this.componentId+e;n.insertRules(i,i,o)},t.removeStyles=function(e,t){t.clearRules(this.componentId+e)},t.renderStyles=function(e,t,n,r){V.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r)},e}();function ze(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var a=se.apply(void 0,[e].concat(n)),l="sc-global-"+Te(JSON.stringify(a)),u=new Ie(a,l);function c(e){var t=ee(),n=te(),r=Object(o.useContext)(Ce),i=Object(o.useRef)(null);null===i.current&&(i.current=t.allocateGSInstance(l));var a=i.current;if(u.isStatic)u.renderStyles(a,E,t,n);else{var s=p({},e,{theme:we(e,r,c.defaultProps)});u.renderStyles(a,s,t,n)}return Object(o.useEffect)((function(){return function(){return u.removeStyles(a,t)}}),v),null}return i.a.memo(c)}function Me(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var o=se.apply(void 0,[e].concat(n)).join(""),i=Te(o);return new re(i,[o,i,"@keyframes"])}var je=function(){function e(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString(),n=T();return"<style "+[n&&'nonce="'+n+'"',k+'="true"','data-styled-version="5.1.1"'].filter(Boolean).join(" ")+">"+t+"</style>"},this.getStyleTags=function(){return e.sealed?C(2):e._emitSheetCSS()},this.getStyleElement=function(){var t;if(e.sealed)return C(2);var n=((t={})[k]="",t["data-styled-version"]="5.1.1",t.dangerouslySetInnerHTML={__html:e.instance.toString()},t),r=T();return r&&(n.nonce=r),[i.a.createElement("style",p({},n,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new V({isServer:!0}),this.sealed=!1}var t=e.prototype;return t.collectStyles=function(e){return this.sealed?C(2):i.a.createElement(ne,{sheet:this.instance},e)},t.interleaveWithNodeStream=function(e){return C(3)},e}(),Le=function(e){var t=i.a.forwardRef((function(t,n){var r=Object(o.useContext)(Ce),a=e.defaultProps,l=we(t,r,a);return i.a.createElement(e,p({},t,{theme:l,ref:n}))}));return d()(t,e),t.displayName="WithTheme("+b(e)+")",t},Fe=function(){return Object(o.useContext)(Ce)},De={StyleSheet:V,masterSheet:J},Ue="5.1.1";t.default=Ne}.call(this,n(7))},function(e,t,n){"use strict";n.r(t),n.d(t,"MemoryRouter",(function(){return U})),n.d(t,"Prompt",(function(){return B})),n.d(t,"Redirect",(function(){return q})),n.d(t,"Route",(function(){return Y})),n.d(t,"Router",(function(){return D})),n.d(t,"StaticRouter",(function(){return ne})),n.d(t,"Switch",(function(){return re})),n.d(t,"generatePath",(function(){return W})),n.d(t,"matchPath",(function(){return G})),n.d(t,"useHistory",(function(){return ae})),n.d(t,"useLocation",(function(){return le})),n.d(t,"useParams",(function(){return ue})),n.d(t,"useRouteMatch",(function(){return ce})),n.d(t,"withRouter",(function(){return oe})),n.d(t,"BrowserRouter",(function(){return se})),n.d(t,"HashRouter",(function(){return fe})),n.d(t,"Link",(function(){return ge})),n.d(t,"NavLink",(function(){return we}));var r=n(2),o=n(0),i=n.n(o);n(3);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function l(e){return"/"===e.charAt(0)}function u(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var c=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],i=e&&l(e),a=t&&l(t),c=i||a;if(e&&l(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var s=o[o.length-1];n="."===s||".."===s||""===s}else n=!1;for(var f=0,d=o.length;d>=0;d--){var p=o[d];"."===p?u(o,d):".."===p?(u(o,d),f++):f&&(u(o,d),f--)}if(!c)for(;f--;f)o.unshift("..");!c||""===o[0]||o[0]&&l(o[0])||o.unshift("");var h=o.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h};function s(e){return e.valueOf?e.valueOf():Object.prototype.valueOf.call(e)}var f=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every((function(t,r){return e(t,n[r])}));if("object"==typeof t||"object"==typeof n){var r=s(t),o=s(n);return r!==t||o!==n?e(r,o):Object.keys(Object.assign({},t,n)).every((function(r){return e(t[r],n[r])}))}return!1};var d=function(e,t){if(!e)throw new Error("Invariant failed")};function p(e){return"/"===e.charAt(0)?e:"/"+e}function h(e){return"/"===e.charAt(0)?e.substr(1):e}function m(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function v(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function g(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function y(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=a({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=c(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function b(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var w=!("undefined"==typeof window||!window.document||!window.document.createElement);function k(e,t){t(window.confirm(e))}function x(){try{return window.history.state||{}}catch(e){return{}}}function S(e){void 0===e&&(e={}),w||d(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,l=i.forceRefresh,u=void 0!==l&&l,c=i.getUserConfirmation,s=void 0===c?k:c,f=i.keyLength,h=void 0===f?6:f,S=e.basename?v(p(e.basename)):"";function E(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return S&&(i=m(i,S)),y(i,r,n)}function T(){return Math.random().toString(36).substr(2,h)}var C=b();function P(e){a(D,e),D.length=n.length,C.notifyListeners(D.location,D.action)}function _(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||A(E(e.state))}function O(){A(E(x()))}var R=!1;function A(e){if(R)R=!1,P();else{C.confirmTransitionTo(e,"POP",s,(function(t){t?P({action:"POP",location:e}):function(e){var t=D.location,n=I.indexOf(t.key);-1===n&&(n=0);var r=I.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(R=!0,M(o))}(e)}))}}var N=E(x()),I=[N.key];function z(e){return S+g(e)}function M(e){n.go(e)}var j=0;function L(e){1===(j+=e)&&1===e?(window.addEventListener("popstate",_),o&&window.addEventListener("hashchange",O)):0===j&&(window.removeEventListener("popstate",_),o&&window.removeEventListener("hashchange",O))}var F=!1;var D={length:n.length,action:"POP",location:N,createHref:z,push:function(e,t){var o=y(e,t,T(),D.location);C.confirmTransitionTo(o,"PUSH",s,(function(e){if(e){var t=z(o),i=o.key,a=o.state;if(r)if(n.pushState({key:i,state:a},null,t),u)window.location.href=t;else{var l=I.indexOf(D.location.key),c=I.slice(0,l+1);c.push(o.key),I=c,P({action:"PUSH",location:o})}else window.location.href=t}}))},replace:function(e,t){var o=y(e,t,T(),D.location);C.confirmTransitionTo(o,"REPLACE",s,(function(e){if(e){var t=z(o),i=o.key,a=o.state;if(r)if(n.replaceState({key:i,state:a},null,t),u)window.location.replace(t);else{var l=I.indexOf(D.location.key);-1!==l&&(I[l]=o.key),P({action:"REPLACE",location:o})}else window.location.replace(t)}}))},go:M,goBack:function(){M(-1)},goForward:function(){M(1)},block:function(e){void 0===e&&(e=!1);var t=C.setPrompt(e);return F||(L(1),F=!0),function(){return F&&(F=!1,L(-1)),t()}},listen:function(e){var t=C.appendListener(e);return L(1),function(){L(-1),t()}}};return D}var E={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+h(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:h,decodePath:p},slash:{encodePath:p,decodePath:p}};function T(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function C(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function P(e){window.location.replace(T(window.location.href)+"#"+e)}function _(e){void 0===e&&(e={}),w||d(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?k:r,i=n.hashType,l=void 0===i?"slash":i,u=e.basename?v(p(e.basename)):"",c=E[l],s=c.encodePath,f=c.decodePath;function h(){var e=f(C());return u&&(e=m(e,u)),y(e)}var x=b();function S(e){a(D,e),D.length=t.length,x.notifyListeners(D.location,D.action)}var _=!1,O=null;function R(){var e,t,n=C(),r=s(n);if(n!==r)P(r);else{var i=h(),a=D.location;if(!_&&(t=i,(e=a).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(O===g(i))return;O=null,function(e){if(_)_=!1,S();else{x.confirmTransitionTo(e,"POP",o,(function(t){t?S({action:"POP",location:e}):function(e){var t=D.location,n=z.lastIndexOf(g(t));-1===n&&(n=0);var r=z.lastIndexOf(g(e));-1===r&&(r=0);var o=n-r;o&&(_=!0,M(o))}(e)}))}}(i)}}var A=C(),N=s(A);A!==N&&P(N);var I=h(),z=[g(I)];function M(e){t.go(e)}var j=0;function L(e){1===(j+=e)&&1===e?window.addEventListener("hashchange",R):0===j&&window.removeEventListener("hashchange",R)}var F=!1;var D={length:t.length,action:"POP",location:I,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=T(window.location.href)),n+"#"+s(u+g(e))},push:function(e,t){var n=y(e,void 0,void 0,D.location);x.confirmTransitionTo(n,"PUSH",o,(function(e){if(e){var t=g(n),r=s(u+t);if(C()!==r){O=t,function(e){window.location.hash=e}(r);var o=z.lastIndexOf(g(D.location)),i=z.slice(0,o+1);i.push(t),z=i,S({action:"PUSH",location:n})}else S()}}))},replace:function(e,t){var n=y(e,void 0,void 0,D.location);x.confirmTransitionTo(n,"REPLACE",o,(function(e){if(e){var t=g(n),r=s(u+t);C()!==r&&(O=t,P(r));var o=z.indexOf(g(D.location));-1!==o&&(z[o]=t),S({action:"REPLACE",location:n})}}))},go:M,goBack:function(){M(-1)},goForward:function(){M(1)},block:function(e){void 0===e&&(e=!1);var t=x.setPrompt(e);return F||(L(1),F=!0),function(){return F&&(F=!1,L(-1)),t()}},listen:function(e){var t=x.appendListener(e);return L(1),function(){L(-1),t()}}};return D}function O(e,t,n){return Math.min(Math.max(e,t),n)}function R(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,r=t.initialEntries,o=void 0===r?["/"]:r,i=t.initialIndex,l=void 0===i?0:i,u=t.keyLength,c=void 0===u?6:u,s=b();function f(e){a(w,e),w.length=w.entries.length,s.notifyListeners(w.location,w.action)}function d(){return Math.random().toString(36).substr(2,c)}var p=O(l,0,o.length-1),h=o.map((function(e){return y(e,void 0,"string"==typeof e?d():e.key||d())})),m=g;function v(e){var t=O(w.index+e,0,w.entries.length-1),r=w.entries[t];s.confirmTransitionTo(r,"POP",n,(function(e){e?f({action:"POP",location:r,index:t}):f()}))}var w={length:h.length,action:"POP",location:h[p],index:p,entries:h,createHref:m,push:function(e,t){var r=y(e,t,d(),w.location);s.confirmTransitionTo(r,"PUSH",n,(function(e){if(e){var t=w.index+1,n=w.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),f({action:"PUSH",location:r,index:t,entries:n})}}))},replace:function(e,t){var r=y(e,t,d(),w.location);s.confirmTransitionTo(r,"REPLACE",n,(function(e){e&&(w.entries[w.index]=r,f({action:"REPLACE",location:r}))}))},go:v,goBack:function(){v(-1)},goForward:function(){v(1)},canGo:function(e){var t=w.index+e;return t>=0&&t<w.entries.length},block:function(e){return void 0===e&&(e=!1),s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return w}var A=n(10),N=n(11),I=n.n(N);n(4);function z(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}var M=n(5),j=n.n(M),L=function(e){var t=Object(A.a)();return t.displayName=e,t}("Router-History"),F=function(e){var t=Object(A.a)();return t.displayName=e,t}("Router"),D=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}Object(r.a)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return i.a.createElement(F.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},i.a.createElement(L.Provider,{children:this.props.children||null,value:this.props.history}))},t}(i.a.Component);var U=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=R(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(D,{history:this.history,children:this.props.children})},t}(i.a.Component);var $=function(e){function t(){return e.apply(this,arguments)||this}Object(r.a)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(i.a.Component);function B(e){var t=e.message,n=e.when,r=void 0===n||n;return i.a.createElement(F.Consumer,null,(function(e){if(e||d(!1),!r||e.staticContext)return null;var n=e.history.block;return i.a.createElement($,{onMount:function(e){e.release=n(t)},onUpdate:function(e,r){r.message!==t&&(e.release(),e.release=n(t))},onUnmount:function(e){e.release()},message:t})}))}var H={},V=0;function W(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(H[e])return H[e];var t=I.a.compile(e);return V<1e4&&(H[e]=t,V++),t}(e)(t,{pretty:!0})}function q(e){var t=e.computedMatch,n=e.to,r=e.push,o=void 0!==r&&r;return i.a.createElement(F.Consumer,null,(function(e){e||d(!1);var r=e.history,l=e.staticContext,u=o?r.push:r.replace,c=y(t?"string"==typeof n?W(n,t.params):a({},n,{pathname:W(n.pathname,t.params)}):n);return l?(u(c),null):i.a.createElement($,{onMount:function(){u(c)},onUpdate:function(e,t){var n,r,o=y(t.to);n=o,r=a({},c,{key:o.key}),n.pathname===r.pathname&&n.search===r.search&&n.hash===r.hash&&n.key===r.key&&f(n.state,r.state)||u(c)},to:n})}))}var Q={},K=0;function G(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=Q[n]||(Q[n]={});if(r[e])return r[e];var o=[],i={regexp:I()(e,o,t),keys:o};return K<1e4&&(r[e]=i,K++),i}(n,{end:i,strict:l,sensitive:c}),o=r.regexp,a=r.keys,u=o.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return i&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:a.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var Y=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){var e=this;return i.a.createElement(F.Consumer,null,(function(t){t||d(!1);var n=e.props.location||t.location,r=a({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?G(n.pathname,e.props):t.match}),o=e.props,l=o.children,u=o.component,c=o.render;return Array.isArray(l)&&0===l.length&&(l=null),i.a.createElement(F.Provider,{value:r},r.match?l?"function"==typeof l?l(r):l:u?i.a.createElement(u,r):c?c(r):null:"function"==typeof l?l(r):null)}))},t}(i.a.Component);function X(e){return"/"===e.charAt(0)?e:"/"+e}function J(e,t){if(!e)return t;var n=X(e);return 0!==t.pathname.indexOf(n)?t:a({},t,{pathname:t.pathname.substr(n.length)})}function Z(e){return"string"==typeof e?e:g(e)}function ee(e){return function(){d(!1)}}function te(){}var ne=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).handlePush=function(e){return t.navigateTo(e,"PUSH")},t.handleReplace=function(e){return t.navigateTo(e,"REPLACE")},t.handleListen=function(){return te},t.handleBlock=function(){return te},t}Object(r.a)(t,e);var n=t.prototype;return n.navigateTo=function(e,t){var n=this.props,r=n.basename,o=void 0===r?"":r,i=n.context,l=void 0===i?{}:i;l.action=t,l.location=function(e,t){return e?a({},t,{pathname:X(e)+t.pathname}):t}(o,y(e)),l.url=Z(l.location)},n.render=function(){var e=this.props,t=e.basename,n=void 0===t?"":t,r=e.context,o=void 0===r?{}:r,l=e.location,u=void 0===l?"/":l,c=z(e,["basename","context","location"]),s={createHref:function(e){return X(n+Z(e))},action:"POP",location:J(n,y(u)),push:this.handlePush,replace:this.handleReplace,go:ee(),goBack:ee(),goForward:ee(),listen:this.handleListen,block:this.handleBlock};return i.a.createElement(D,a({},c,{history:s,staticContext:o}))},t}(i.a.Component);var re=function(e){function t(){return e.apply(this,arguments)||this}return Object(r.a)(t,e),t.prototype.render=function(){var e=this;return i.a.createElement(F.Consumer,null,(function(t){t||d(!1);var n,r,o=e.props.location||t.location;return i.a.Children.forEach(e.props.children,(function(e){if(null==r&&i.a.isValidElement(e)){n=e;var l=e.props.path||e.props.from;r=l?G(o.pathname,a({},e.props,{path:l})):t.match}})),r?i.a.cloneElement(n,{location:o,computedMatch:r}):null}))},t}(i.a.Component);function oe(e){var t="withRouter("+(e.displayName||e.name)+")",n=function(t){var n=t.wrappedComponentRef,r=z(t,["wrappedComponentRef"]);return i.a.createElement(F.Consumer,null,(function(t){return t||d(!1),i.a.createElement(e,a({},r,t,{ref:n}))}))};return n.displayName=t,n.WrappedComponent=e,j()(n,e)}var ie=i.a.useContext;function ae(){return ie(L)}function le(){return ie(F).location}function ue(){var e=ie(F).match;return e?e.params:{}}function ce(e){var t=le(),n=ie(F).match;return e?G(t.pathname,e):n}var se=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=S(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(D,{history:this.history,children:this.props.children})},t}(i.a.Component);var fe=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=_(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(D,{history:this.history,children:this.props.children})},t}(i.a.Component);var de=function(e,t){return"function"==typeof e?e(t):e},pe=function(e,t){return"string"==typeof e?y(e,null,null,t):e},he=function(e){return e},me=i.a.forwardRef;void 0===me&&(me=he);var ve=me((function(e,t){var n=e.innerRef,r=e.navigate,o=e.onClick,l=z(e,["innerRef","navigate","onClick"]),u=l.target,c=a({},l,{onClick:function(e){try{o&&o(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||u&&"_self"!==u||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return c.ref=he!==me&&t||n,i.a.createElement("a",c)}));var ge=me((function(e,t){var n=e.component,r=void 0===n?ve:n,o=e.replace,l=e.to,u=e.innerRef,c=z(e,["component","replace","to","innerRef"]);return i.a.createElement(F.Consumer,null,(function(e){e||d(!1);var n=e.history,s=pe(de(l,e.location),e.location),f=s?n.createHref(s):"",p=a({},c,{href:f,navigate:function(){var t=de(l,e.location);(o?n.replace:n.push)(t)}});return he!==me?p.ref=t||u:p.innerRef=u,i.a.createElement(r,p)}))})),ye=function(e){return e},be=i.a.forwardRef;void 0===be&&(be=ye);var we=be((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,o=e.activeClassName,l=void 0===o?"active":o,u=e.activeStyle,c=e.className,s=e.exact,f=e.isActive,p=e.location,h=e.sensitive,m=e.strict,v=e.style,g=e.to,y=e.innerRef,b=z(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return i.a.createElement(F.Consumer,null,(function(e){e||d(!1);var n=p||e.location,o=pe(de(g,n),n),w=o.pathname,k=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),x=k?G(n.pathname,{path:k,exact:s,sensitive:h,strict:m}):null,S=!!(f?f(x,n):x),E=S?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(c,l):c,T=S?a({},v,{},u):v,C=a({"aria-current":S&&r||null,className:E,style:T,to:o},b);return ye!==be?C.ref=t||y:C.innerRef=y,i.a.createElement(ge,C)}))}))},function(e,t,n){"use strict";(function(e){var r=n(0),o=n.n(r),i=n(2),a=n(3),l=n.n(a),u="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==e?e:{};function c(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}var s=o.a.createContext||function(e,t){var n,o,a,s="__create-react-context-"+((u[a="__global_unique_id__"]=(u[a]||0)+1)+"__"),f=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=c(t.props.value),t}Object(i.a)(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[s]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof t?t(r,o):1073741823,0!==(n|=0)&&this.emitter.set(e.value,n))}var i,a},r.render=function(){return this.props.children},n}(r.Component);f.childContextTypes=((n={})[s]=l.a.object.isRequired,n);var d=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}Object(i.a)(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?1073741823:t},r.componentDidMount=function(){this.context[s]&&this.context[s].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},r.componentWillUnmount=function(){this.context[s]&&this.context[s].off(this.onUpdate)},r.getValue=function(){return this.context[s]?this.context[s].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return d.contextTypes=((o={})[s]=l.a.object,o),{Provider:f,Consumer:d}};t.a=s}).call(this,n(31))},function(e,t,n){var r=n(32);e.exports=p,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(l+=e.slice(a,p),a=p+f.length,d)l+=d[1];else{var h=e[a],m=n[2],v=n[3],g=n[4],y=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var k=null!=m&&null!=h&&h!==m,x="+"===b||"*"===b,S="?"===b||"*"===b,E=n[2]||s,T=g||y;r.push({name:v||i++,prefix:m||"",delimiter:E,optional:S,repeat:x,partial:k,asterisk:!!w,pattern:T?c(T):w?".*":"[^"+u(E)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var i="",l=t||{},u=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=l[s.name];if(null==d){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),a+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=a.slice(-h.length)===h;return o||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+a,f(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return d(i(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";var r=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,o=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}((function(e){return r.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91}));t.a=o},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=a(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){l=r(n);for(var f=0;f<l.length;f++)i.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},,function(e,t,n){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t,n){"use strict";var r=n(1);function o(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(r.isURLSearchParams(t))i=t.toString();else{var a=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),a.push(o(t)+"="+o(e))})))})),i=a.join("&")}if(i){var l=e.indexOf("#");-1!==l&&(e=e.slice(0,l)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}},function(e,t,n){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,n){"use strict";(function(t){var r=n(1),o=n(47),i={"Content-Type":"application/x-www-form-urlencoded"};function a(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var l,u={adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==t&&"[object process]"===Object.prototype.toString.call(t))&&(l=n(19)),l),transformRequest:[function(e,t){return o(t,"Accept"),o(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(a(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(a(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};u.headers={common:{Accept:"application/json, text/plain, */*"}},r.forEach(["delete","get","head"],(function(e){u.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){u.headers[e]=r.merge(i)})),e.exports=u}).call(this,n(7))},function(e,t,n){"use strict";var r=n(1),o=n(48),i=n(16),a=n(50),l=n(53),u=n(54),c=n(20);e.exports=function(e){return new Promise((function(t,s){var f=e.data,d=e.headers;r.isFormData(f)&&delete d["Content-Type"];var p=new XMLHttpRequest;if(e.auth){var h=e.auth.username||"",m=e.auth.password||"";d.Authorization="Basic "+btoa(h+":"+m)}var v=a(e.baseURL,e.url);if(p.open(e.method.toUpperCase(),i(v,e.params,e.paramsSerializer),!0),p.timeout=e.timeout,p.onreadystatechange=function(){if(p&&4===p.readyState&&(0!==p.status||p.responseURL&&0===p.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in p?l(p.getAllResponseHeaders()):null,r={data:e.responseType&&"text"!==e.responseType?p.response:p.responseText,status:p.status,statusText:p.statusText,headers:n,config:e,request:p};o(t,s,r),p=null}},p.onabort=function(){p&&(s(c("Request aborted",e,"ECONNABORTED",p)),p=null)},p.onerror=function(){s(c("Network Error",e,null,p)),p=null},p.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),s(c(t,e,"ECONNABORTED",p)),p=null},r.isStandardBrowserEnv()){var g=n(55),y=(e.withCredentials||u(v))&&e.xsrfCookieName?g.read(e.xsrfCookieName):void 0;y&&(d[e.xsrfHeaderName]=y)}if("setRequestHeader"in p&&r.forEach(d,(function(e,t){void 0===f&&"content-type"===t.toLowerCase()?delete d[t]:p.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(p.withCredentials=!!e.withCredentials),e.responseType)try{p.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&p.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&p.upload&&p.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){p&&(p.abort(),s(e),p=null)})),void 0===f&&(f=null),p.send(f)}))}},function(e,t,n){"use strict";var r=n(49);e.exports=function(e,t,n,o,i){var a=new Error(e);return r(a,t,n,o,i)}},function(e,t,n){"use strict";var r=n(1);e.exports=function(e,t){t=t||{};var n={},o=["url","method","params","data"],i=["headers","auth","proxy"],a=["baseURL","url","transformRequest","transformResponse","paramsSerializer","timeout","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","maxContentLength","validateStatus","maxRedirects","httpAgent","httpsAgent","cancelToken","socketPath"];r.forEach(o,(function(e){void 0!==t[e]&&(n[e]=t[e])})),r.forEach(i,(function(o){r.isObject(t[o])?n[o]=r.deepMerge(e[o],t[o]):void 0!==t[o]?n[o]=t[o]:r.isObject(e[o])?n[o]=r.deepMerge(e[o]):void 0!==e[o]&&(n[o]=e[o])})),r.forEach(a,(function(r){void 0!==t[r]?n[r]=t[r]:void 0!==e[r]&&(n[r]=e[r])}));var l=o.concat(i).concat(a),u=Object.keys(t).filter((function(e){return-1===l.indexOf(e)}));return r.forEach(u,(function(r){void 0!==t[r]?n[r]=t[r]:void 0!==e[r]&&(n[r]=e[r])})),n}},function(e,t,n){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},,function(e,t){e.exports=function(e,t,n,r){var o=n?n.call(r,e,t):void 0;if(void 0!==o)return!!o;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var i=Object.keys(e),a=Object.keys(t);if(i.length!==a.length)return!1;for(var l=Object.prototype.hasOwnProperty.bind(t),u=0;u<i.length;u++){var c=i[u];if(!l(c))return!1;var s=e[c],f=t[c];if(!1===(o=n?n.call(r,s,f,c):void 0)||void 0===o&&s!==f)return!1}return!0}},function(e,t,n){"use strict";t.a=function(e){function t(e,t,r){var o=t.trim().split(h);t=o;var i=o.length,a=e.length;switch(a){case 0:case 1:var l=0;for(e=0===a?"":e[0]+" ";l<i;++l)t[l]=n(e,t[l],r).trim();break;default:var u=l=0;for(t=[];l<i;++l)for(var c=0;c<a;++c)t[u++]=n(e[c]+" ",o[l],r).trim()}return t}function n(e,t,n){var r=t.charCodeAt(0);switch(33>r&&(r=(t=t.trim()).charCodeAt(0)),r){case 38:return t.replace(m,"$1"+e.trim());case 58:return e.trim()+t.replace(m,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(m,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function r(e,t,n,i){var a=e+";",l=2*t+3*n+4*i;if(944===l){e=a.indexOf(":",9)+1;var u=a.substring(e,a.length-1).trim();return u=a.substring(0,e).trim()+u+";",1===O||2===O&&o(u,1)?"-webkit-"+u+u:u}if(0===O||2===O&&!o(a,1))return a;switch(l){case 1015:return 97===a.charCodeAt(10)?"-webkit-"+a+a:a;case 951:return 116===a.charCodeAt(3)?"-webkit-"+a+a:a;case 963:return 110===a.charCodeAt(5)?"-webkit-"+a+a:a;case 1009:if(100!==a.charCodeAt(4))break;case 969:case 942:return"-webkit-"+a+a;case 978:return"-webkit-"+a+"-moz-"+a+a;case 1019:case 983:return"-webkit-"+a+"-moz-"+a+"-ms-"+a+a;case 883:if(45===a.charCodeAt(8))return"-webkit-"+a+a;if(0<a.indexOf("image-set(",11))return a.replace(T,"$1-webkit-$2")+a;break;case 932:if(45===a.charCodeAt(4))switch(a.charCodeAt(5)){case 103:return"-webkit-box-"+a.replace("-grow","")+"-webkit-"+a+"-ms-"+a.replace("grow","positive")+a;case 115:return"-webkit-"+a+"-ms-"+a.replace("shrink","negative")+a;case 98:return"-webkit-"+a+"-ms-"+a.replace("basis","preferred-size")+a}return"-webkit-"+a+"-ms-"+a+a;case 964:return"-webkit-"+a+"-ms-flex-"+a+a;case 1023:if(99!==a.charCodeAt(8))break;return"-webkit-box-pack"+(u=a.substring(a.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+a+"-ms-flex-pack"+u+a;case 1005:return d.test(a)?a.replace(f,":-webkit-")+a.replace(f,":-moz-")+a:a;case 1e3:switch(t=(u=a.substring(13).trim()).indexOf("-")+1,u.charCodeAt(0)+u.charCodeAt(t)){case 226:u=a.replace(b,"tb");break;case 232:u=a.replace(b,"tb-rl");break;case 220:u=a.replace(b,"lr");break;default:return a}return"-webkit-"+a+"-ms-"+u+a;case 1017:if(-1===a.indexOf("sticky",9))break;case 975:switch(t=(a=e).length-10,l=(u=(33===a.charCodeAt(t)?a.substring(0,t):a).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|u.charCodeAt(7))){case 203:if(111>u.charCodeAt(8))break;case 115:a=a.replace(u,"-webkit-"+u)+";"+a;break;case 207:case 102:a=a.replace(u,"-webkit-"+(102<l?"inline-":"")+"box")+";"+a.replace(u,"-webkit-"+u)+";"+a.replace(u,"-ms-"+u+"box")+";"+a}return a+";";case 938:if(45===a.charCodeAt(5))switch(a.charCodeAt(6)){case 105:return u=a.replace("-items",""),"-webkit-"+a+"-webkit-box-"+u+"-ms-flex-"+u+a;case 115:return"-webkit-"+a+"-ms-flex-item-"+a.replace(x,"")+a;default:return"-webkit-"+a+"-ms-flex-line-pack"+a.replace("align-content","").replace(x,"")+a}break;case 973:case 989:if(45!==a.charCodeAt(3)||122===a.charCodeAt(4))break;case 931:case 953:if(!0===E.test(e))return 115===(u=e.substring(e.indexOf(":")+1)).charCodeAt(0)?r(e.replace("stretch","fill-available"),t,n,i).replace(":fill-available",":stretch"):a.replace(u,"-webkit-"+u)+a.replace(u,"-moz-"+u.replace("fill-",""))+a;break;case 962:if(a="-webkit-"+a+(102===a.charCodeAt(5)?"-ms-"+a:"")+a,211===n+i&&105===a.charCodeAt(13)&&0<a.indexOf("transform",10))return a.substring(0,a.indexOf(";",27)+1).replace(p,"$1-webkit-$2")+a}return a}function o(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),I(2!==t?r:r.replace(S,"$1"),n,t)}function i(e,t){var n=r(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(k," or ($1)").substring(4):"("+t+")"}function a(e,t,n,r,o,i,a,l,c,s){for(var f,d=0,p=t;d<N;++d)switch(f=A[d].call(u,e,p,n,r,o,i,a,l,c,s)){case void 0:case!1:case!0:case null:break;default:p=f}if(p!==t)return p}function l(e){return void 0!==(e=e.prefix)&&(I=null,e?"function"!=typeof e?O=1:(O=2,I=e):O=0),l}function u(e,n){var l=e;if(33>l.charCodeAt(0)&&(l=l.trim()),l=[l],0<N){var u=a(-1,n,l,l,P,C,0,0,0,0);void 0!==u&&"string"==typeof u&&(n=u)}var f=function e(n,l,u,f,d){for(var p,h,m,b,k,x=0,S=0,E=0,T=0,A=0,I=0,M=m=p=0,j=0,L=0,F=0,D=0,U=u.length,$=U-1,B="",H="",V="",W="";j<U;){if(h=u.charCodeAt(j),j===$&&0!==S+T+E+x&&(0!==S&&(h=47===S?10:47),T=E=x=0,U++,$++),0===S+T+E+x){if(j===$&&(0<L&&(B=B.replace(s,"")),0<B.trim().length)){switch(h){case 32:case 9:case 59:case 13:case 10:break;default:B+=u.charAt(j)}h=59}switch(h){case 123:for(p=(B=B.trim()).charCodeAt(0),m=1,D=++j;j<U;){switch(h=u.charCodeAt(j)){case 123:m++;break;case 125:m--;break;case 47:switch(h=u.charCodeAt(j+1)){case 42:case 47:e:{for(M=j+1;M<$;++M)switch(u.charCodeAt(M)){case 47:if(42===h&&42===u.charCodeAt(M-1)&&j+2!==M){j=M+1;break e}break;case 10:if(47===h){j=M+1;break e}}j=M}}break;case 91:h++;case 40:h++;case 34:case 39:for(;j++<$&&u.charCodeAt(j)!==h;);}if(0===m)break;j++}switch(m=u.substring(D,j),0===p&&(p=(B=B.replace(c,"").trim()).charCodeAt(0)),p){case 64:switch(0<L&&(B=B.replace(s,"")),h=B.charCodeAt(1)){case 100:case 109:case 115:case 45:L=l;break;default:L=R}if(D=(m=e(l,L,m,h,d+1)).length,0<N&&(k=a(3,m,L=t(R,B,F),l,P,C,D,h,d,f),B=L.join(""),void 0!==k&&0===(D=(m=k.trim()).length)&&(h=0,m="")),0<D)switch(h){case 115:B=B.replace(w,i);case 100:case 109:case 45:m=B+"{"+m+"}";break;case 107:m=(B=B.replace(v,"$1 $2"))+"{"+m+"}",m=1===O||2===O&&o("@"+m,3)?"@-webkit-"+m+"@"+m:"@"+m;break;default:m=B+m,112===f&&(H+=m,m="")}else m="";break;default:m=e(l,t(l,B,F),m,f,d+1)}V+=m,m=F=L=M=p=0,B="",h=u.charCodeAt(++j);break;case 125:case 59:if(1<(D=(B=(0<L?B.replace(s,""):B).trim()).length))switch(0===M&&(p=B.charCodeAt(0),45===p||96<p&&123>p)&&(D=(B=B.replace(" ",":")).length),0<N&&void 0!==(k=a(1,B,l,n,P,C,H.length,f,d,f))&&0===(D=(B=k.trim()).length)&&(B="\0\0"),p=B.charCodeAt(0),h=B.charCodeAt(1),p){case 0:break;case 64:if(105===h||99===h){W+=B+u.charAt(j);break}default:58!==B.charCodeAt(D-1)&&(H+=r(B,p,h,B.charCodeAt(2)))}F=L=M=p=0,B="",h=u.charCodeAt(++j)}}switch(h){case 13:case 10:47===S?S=0:0===1+p&&107!==f&&0<B.length&&(L=1,B+="\0"),0<N*z&&a(0,B,l,n,P,C,H.length,f,d,f),C=1,P++;break;case 59:case 125:if(0===S+T+E+x){C++;break}default:switch(C++,b=u.charAt(j),h){case 9:case 32:if(0===T+x+S)switch(A){case 44:case 58:case 9:case 32:b="";break;default:32!==h&&(b=" ")}break;case 0:b="\\0";break;case 12:b="\\f";break;case 11:b="\\v";break;case 38:0===T+S+x&&(L=F=1,b="\f"+b);break;case 108:if(0===T+S+x+_&&0<M)switch(j-M){case 2:112===A&&58===u.charCodeAt(j-3)&&(_=A);case 8:111===I&&(_=I)}break;case 58:0===T+S+x&&(M=j);break;case 44:0===S+E+T+x&&(L=1,b+="\r");break;case 34:case 39:0===S&&(T=T===h?0:0===T?h:T);break;case 91:0===T+S+E&&x++;break;case 93:0===T+S+E&&x--;break;case 41:0===T+S+x&&E--;break;case 40:if(0===T+S+x){if(0===p)switch(2*A+3*I){case 533:break;default:p=1}E++}break;case 64:0===S+E+T+x+M+m&&(m=1);break;case 42:case 47:if(!(0<T+x+E))switch(S){case 0:switch(2*h+3*u.charCodeAt(j+1)){case 235:S=47;break;case 220:D=j,S=42}break;case 42:47===h&&42===A&&D+2!==j&&(33===u.charCodeAt(D+2)&&(H+=u.substring(D,j+1)),b="",S=0)}}0===S&&(B+=b)}I=A,A=h,j++}if(0<(D=H.length)){if(L=l,0<N&&(void 0!==(k=a(2,H,L,n,P,C,D,f,d,f))&&0===(H=k).length))return W+H+V;if(H=L.join(",")+"{"+H+"}",0!=O*_){switch(2!==O||o(H,2)||(_=0),_){case 111:H=H.replace(y,":-moz-$1")+H;break;case 112:H=H.replace(g,"::-webkit-input-$1")+H.replace(g,"::-moz-$1")+H.replace(g,":-ms-input-$1")+H}_=0}}return W+H+V}(R,l,n,0,0);return 0<N&&(void 0!==(u=a(-2,f,l,l,P,C,f.length,0,0,0))&&(f=u)),"",_=0,C=P=1,f}var c=/^\0+/g,s=/[\0\r\f]/g,f=/: */g,d=/zoo|gra/,p=/([,: ])(transform)/g,h=/,\r+?/g,m=/([\t\r\n ])*\f?&/g,v=/@(k\w+)\s*(\S*)\s*/,g=/::(place)/g,y=/:(read-only)/g,b=/[svh]\w+-[tblr]{2}/,w=/\(\s*(.*)\s*\)/g,k=/([\s\S]*?);/g,x=/-self|flex-/g,S=/[^]*?(:[rp][el]a[\w-]+)[^]*/,E=/stretch|:\s*\w+\-(?:conte|avail)/,T=/([^-])(image-set\()/,C=1,P=1,_=0,O=1,R=[],A=[],N=0,I=null,z=0;return u.use=function e(t){switch(t){case void 0:case null:N=A.length=0;break;default:if("function"==typeof t)A[N++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else z=0|!!t}return e},u.set=l,void 0!==e&&l(e),u}},function(e,t,n){"use strict";t.a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1}},,function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(13),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,m=o?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var S=x.prototype=new k;S.constructor=x,r(S,w.prototype),S.isPureReactComponent=!0;var E={current:null},T=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)T.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:E.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,R=[];function A(e,t,n,r){if(R.length){var o=R.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>R.length&&R.push(e)}function I(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case a:u=!0}}if(u)return r(o,t,""===n?"."+z(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+z(l=t[c],c);u+=e(l,s,r,o)}else if(null===t||"object"!=typeof t?s=null:s="function"==typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+z(l,c++),r,o);else if("object"===l)throw r=""+t,Error(g(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return u}(e,"",t,n)}function z(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function M(e,t){e.func.call(e.context,t,e.count++)}function j(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?L(e,r,n,(function(e){return e})):null!=e&&(_(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function L(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),I(e,j,t=A(t,i,r,o)),N(t)}var F={current:null};function D(){var e=F.current;if(null===e)throw Error(g(321));return e}var U={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:E,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return L(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,M,t=A(null,null,t,n)),N(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return L(e,t,null,(function(e){return e})),t},only:function(e){if(!_(e))throw Error(g(143));return e}},t.Component=w,t.Fragment=l,t.Profiler=c,t.PureComponent=x,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var o=r({},e.props),a=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=E.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)T.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:a,ref:l,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=P,t.createFactory=function(e){var t=P.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return D().useCallback(e,t)},t.useContext=function(e,t){return D().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return D().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return D().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return D().useLayoutEffect(e,t)},t.useMemo=function(e,t){return D().useMemo(e,t)},t.useReducer=function(e,t,n){return D().useReducer(e,t,n)},t.useRef=function(e){return D().useRef(e)},t.useState=function(e){return D().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";var r=n(30);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.suspense_list"):60120,v=r?Symbol.for("react.memo"):60115,g=r?Symbol.for("react.lazy"):60116,y=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,w=r?Symbol.for("react.responder"):60118,k=r?Symbol.for("react.scope"):60119;function x(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case a:case u:case l:case h:return e;default:switch(e=e&&e.$$typeof){case s:case p:case g:case v:case c:return e;default:return t}}case i:return t}}}function S(e){return x(e)===d}t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=a,t.Lazy=g,t.Memo=v,t.Portal=i,t.Profiler=u,t.StrictMode=l,t.Suspense=h,t.isAsyncMode=function(e){return S(e)||x(e)===f},t.isConcurrentMode=S,t.isContextConsumer=function(e){return x(e)===s},t.isContextProvider=function(e){return x(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return x(e)===p},t.isFragment=function(e){return x(e)===a},t.isLazy=function(e){return x(e)===g},t.isMemo=function(e){return x(e)===v},t.isPortal=function(e){return x(e)===i},t.isProfiler=function(e){return x(e)===u},t.isStrictMode=function(e){return x(e)===l},t.isSuspense=function(e){return x(e)===h},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===u||e===l||e===h||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===v||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p||e.$$typeof===b||e.$$typeof===w||e.$$typeof===k||e.$$typeof===y)},t.typeOf=x},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(35)},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(13),i=n(36);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));function l(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,a,s,f){u=!1,c=null,l.apply(d,arguments)}var h=null,m=null,v=null;function g(e,t,n){var r=e.type||"unknown-event";e.currentTarget=v(n),function(e,t,n,r,o,i,l,d,h){if(p.apply(this,arguments),u){if(!u)throw Error(a(198));var m=c;u=!1,c=null,s||(s=!0,f=m)}}(r,t,void 0,e),e.currentTarget=null}var y=null,b={};function w(){if(y)for(var e in b){var t=b[e],n=y.indexOf(e);if(!(-1<n))throw Error(a(96,e));if(!x[n]){if(!t.extractEvents)throw Error(a(97,e));for(var r in x[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,u=r;if(S.hasOwnProperty(u))throw Error(a(99,u));S[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&k(c[o],l,u);o=!0}else i.registrationName?(k(i.registrationName,l,u),o=!0):o=!1;if(!o)throw Error(a(98,r,e))}}}}function k(e,t,n){if(E[e])throw Error(a(100,e));E[e]=t,T[e]=t.eventTypes[n].dependencies}var x=[],S={},E={},T={};function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(a(102,t));b[t]=r,n=!0}}n&&w()}var P=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),_=null,O=null,R=null;function A(e){if(e=m(e)){if("function"!=typeof _)throw Error(a(280));var t=e.stateNode;t&&(t=h(t),_(e.stateNode,e.type,t))}}function N(e){O?R?R.push(e):R=[e]:O=e}function I(){if(O){var e=O,t=R;if(R=O=null,A(e),t)for(e=0;e<t.length;e++)A(t[e])}}function z(e,t){return e(t)}function M(e,t,n,r,o){return e(t,n,r,o)}function j(){}var L=z,F=!1,D=!1;function U(){null===O&&null===R||(j(),I())}function $(e,t,n){if(D)return e(t,n);D=!0;try{return L(e,t,n)}finally{D=!1,U()}}var B=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,V={},W={};function q(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var Q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){Q[e]=new q(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];Q[t]=new q(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){Q[e]=new q(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){Q[e]=new q(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){Q[e]=new q(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){Q[e]=new q(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){Q[e]=new q(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){Q[e]=new q(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){Q[e]=new q(e,5,!1,e.toLowerCase(),null,!1)}));var K=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(K,G);Q[t]=new q(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(K,G);Q[t]=new q(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(K,G);Q[t]=new q(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){Q[e]=new q(e,1,!1,e.toLowerCase(),null,!1)})),Q.xlinkHref=new q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){Q[e]=new q(e,1,!1,e.toLowerCase(),null,!0)}));var Y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var o=Q.hasOwnProperty(t)?Q[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!H.call(W,e)||!H.call(V,e)&&(B.test(e)?W[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Y.hasOwnProperty("ReactCurrentDispatcher")||(Y.ReactCurrentDispatcher={current:null}),Y.hasOwnProperty("ReactCurrentBatchConfig")||(Y.ReactCurrentBatchConfig={suspense:null});var J=/^(.*)[\\\/]/,Z="function"==typeof Symbol&&Symbol.for,ee=Z?Symbol.for("react.element"):60103,te=Z?Symbol.for("react.portal"):60106,ne=Z?Symbol.for("react.fragment"):60107,re=Z?Symbol.for("react.strict_mode"):60108,oe=Z?Symbol.for("react.profiler"):60114,ie=Z?Symbol.for("react.provider"):60109,ae=Z?Symbol.for("react.context"):60110,le=Z?Symbol.for("react.concurrent_mode"):60111,ue=Z?Symbol.for("react.forward_ref"):60112,ce=Z?Symbol.for("react.suspense"):60113,se=Z?Symbol.for("react.suspense_list"):60120,fe=Z?Symbol.for("react.memo"):60115,de=Z?Symbol.for("react.lazy"):60116,pe=Z?Symbol.for("react.block"):60121,he="function"==typeof Symbol&&Symbol.iterator;function me(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=he&&e[he]||e["@@iterator"])?e:null}function ve(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ae:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ve(e.type);case pe:return ve(e.render);case de:if(e=1===e._status?e._result:null)return ve(e)}return null}function ge(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ve(e.type);n=null,r&&(n=ve(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(J,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ye(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function xe(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Se(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ye(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Ee(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Te(e,t){Ee(e,t);var n=ye(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Pe(e,t.type,n):t.hasOwnProperty("defaultValue")&&Pe(e,t.type,ye(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Pe(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function _e(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ye(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ye(n)}}function Ne(e,t){var n=ye(t.value),r=ye(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var ze="http://www.w3.org/1999/xhtml",Me="http://www.w3.org/2000/svg";function je(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?je(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Fe,De=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Me||"innerHTML"in e)e.innerHTML=t;else{for((Fe=Fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ue(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function $e(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Be={animationend:$e("Animation","AnimationEnd"),animationiteration:$e("Animation","AnimationIteration"),animationstart:$e("Animation","AnimationStart"),transitionend:$e("Transition","TransitionEnd")},He={},Ve={};function We(e){if(He[e])return He[e];if(!Be[e])return e;var t,n=Be[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ve)return He[e]=n[t];return e}P&&(Ve=document.createElement("div").style,"AnimationEvent"in window||(delete Be.animationend.animation,delete Be.animationiteration.animation,delete Be.animationstart.animation),"TransitionEvent"in window||delete Be.transitionend.transition);var qe=We("animationend"),Qe=We("animationiteration"),Ke=We("animationstart"),Ge=We("transitionend"),Ye="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Xe=new("function"==typeof WeakMap?WeakMap:Map);function Je(e){var t=Xe.get(e);return void 0===t&&(t=new Map,Xe.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Ze(e)!==e)throw Error(a(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return tt(o),e;if(i===r)return tt(o),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(a(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function ot(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function at(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)g(e,t[r],n[r]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(it=rt(it,e)),e=it,it=null,e){if(ot(e,at),it)throw Error(a(95));if(s)throw e=f,s=!1,f=null,e}}function ut(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!P)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var st=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>st.length&&st.push(e)}function dt(e,t,n,r){if(st.length){var o=st.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Pn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=ut(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,a=e.eventSystemFlags;0===n&&(a|=64);for(var l=null,u=0;u<x.length;u++){var c=x[u];c&&(c=c.extractEvents(r,t,i,o,a))&&(l=rt(l,c))}lt(l)}}function ht(e,t,n){if(!n.has(e)){switch(e){case"scroll":Kt(t,"scroll",!0);break;case"focus":case"blur":Kt(t,"focus",!0),Kt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&Kt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ye.indexOf(e)&&Qt(e,t)}n.set(e,null)}}var mt,vt,gt,yt=!1,bt=[],wt=null,kt=null,xt=null,St=new Map,Et=new Map,Tt=[],Ct="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Pt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function _t(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Ot(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":kt=null;break;case"mouseover":case"mouseout":xt=null;break;case"pointerover":case"pointerout":St.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Et.delete(t.pointerId)}}function Rt(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=_t(t,n,r,o,i),null!==t&&(null!==(t=_n(t))&&vt(t)),e):(e.eventSystemFlags|=r,e)}function At(e){var t=Pn(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){gt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Nt(e){if(null!==e.blockedOn)return!1;var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=_n(t);return null!==n&&vt(n),e.blockedOn=t,!1}return!0}function It(e,t,n){Nt(e)&&n.delete(t)}function zt(){for(yt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=_n(e.blockedOn))&&mt(e);break}var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==wt&&Nt(wt)&&(wt=null),null!==kt&&Nt(kt)&&(kt=null),null!==xt&&Nt(xt)&&(xt=null),St.forEach(It),Et.forEach(It)}function Mt(e,t){e.blockedOn===t&&(e.blockedOn=null,yt||(yt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,zt)))}function jt(e){function t(t){return Mt(t,e)}if(0<bt.length){Mt(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&Mt(wt,e),null!==kt&&Mt(kt,e),null!==xt&&Mt(xt,e),St.forEach(t),Et.forEach(t),n=0;n<Tt.length;n++)(r=Tt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Tt.length&&null===(n=Tt[0]).blockedOn;)At(n),null===n.blockedOn&&Tt.shift()}var Lt={},Ft=new Map,Dt=new Map,Ut=["abort","abort",qe,"animationEnd",Qe,"animationIteration",Ke,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ge,"transitionEnd","waiting","waiting"];function $t(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Dt.set(r,t),Ft.set(r,i),Lt[o]=i}}$t("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),$t("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),$t(Ut,2);for(var Bt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ht=0;Ht<Bt.length;Ht++)Dt.set(Bt[Ht],0);var Vt=i.unstable_UserBlockingPriority,Wt=i.unstable_runWithPriority,qt=!0;function Qt(e,t){Kt(t,e,!1)}function Kt(e,t,n){var r=Dt.get(t);switch(void 0===r?2:r){case 0:r=Gt.bind(null,t,1,e);break;case 1:r=Yt.bind(null,t,1,e);break;default:r=Xt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Gt(e,t,n,r){F||j();var o=Xt,i=F;F=!0;try{M(o,e,t,n,r)}finally{(F=i)||U()}}function Yt(e,t,n,r){Wt(Vt,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){if(qt)if(0<bt.length&&-1<Ct.indexOf(e))e=_t(null,e,t,n,r),bt.push(e);else{var o=Jt(e,t,n,r);if(null===o)Ot(e,r);else if(-1<Ct.indexOf(e))e=_t(o,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return wt=Rt(wt,e,t,n,r,o),!0;case"dragenter":return kt=Rt(kt,e,t,n,r,o),!0;case"mouseover":return xt=Rt(xt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return St.set(i,Rt(St.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Et.set(i,Rt(Et.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Ot(e,r),e=dt(e,r,null,t);try{$(pt,e)}finally{ft(e)}}}}function Jt(e,t,n,r){if(null!==(n=Pn(n=ut(r)))){var o=Ze(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=et(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=dt(e,r,n,t);try{$(pt,e)}finally{ft(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Zt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var rn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62,""))}}function an(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln=ze;function un(e,t){var n=Je(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=T[t];for(var r=0;r<t.length;r++)ht(t[r],e,n)}function cn(){}function sn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function pn(){for(var e=window,t=sn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=sn((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mn=null,vn=null;function gn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function kn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function xn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Sn=Math.random().toString(36).slice(2),En="__reactInternalInstance$"+Sn,Tn="__reactEventHandlers$"+Sn,Cn="__reactContainere$"+Sn;function Pn(e){var t=e[En];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Cn]||n[En]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=xn(e);null!==e;){if(n=e[En])return n;e=xn(e)}return t}n=(e=n).parentNode}return null}function _n(e){return!(e=e[En]||e[Cn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function On(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function Rn(e){return e[Tn]||null}function An(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Nn(e,t){var n=e.stateNode;if(!n)return null;var r=h(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}function In(e,t,n){(t=Nn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function zn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=An(t);for(t=n.length;0<t--;)In(n[t],"captured",e);for(t=0;t<n.length;t++)In(n[t],"bubbled",e)}}function Mn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Nn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function jn(e){e&&e.dispatchConfig.registrationName&&Mn(e._targetInst,null,e)}function Ln(e){ot(e,zn)}var Fn=null,Dn=null,Un=null;function $n(){if(Un)return Un;var e,t,n=Dn,r=n.length,o="value"in Fn?Fn.value:Fn.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return Un=o.slice(e,1<t?1-t:void 0)}function Bn(){return!0}function Hn(){return!1}function Vn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Bn:Hn,this.isPropagationStopped=Hn,this}function Wn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function qn(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Qn(e){e.eventPool=[],e.getPooled=Wn,e.release=qn}o(Vn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Bn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Bn)},persist:function(){this.isPersistent=Bn},isPersistent:Hn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Hn,this._dispatchInstances=this._dispatchListeners=null}}),Vn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Vn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Qn(n),n},Qn(Vn);var Kn=Vn.extend({data:null}),Gn=Vn.extend({data:null}),Yn=[9,13,27,32],Xn=P&&"CompositionEvent"in window,Jn=null;P&&"documentMode"in document&&(Jn=document.documentMode);var Zn=P&&"TextEvent"in window&&!Jn,er=P&&(!Xn||Jn&&8<Jn&&11>=Jn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function or(e,t){switch(e){case"keyup":return-1!==Yn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ar=!1;var lr={eventTypes:nr,extractEvents:function(e,t,n,r){var o;if(Xn)e:{switch(e){case"compositionstart":var i=nr.compositionStart;break e;case"compositionend":i=nr.compositionEnd;break e;case"compositionupdate":i=nr.compositionUpdate;break e}i=void 0}else ar?or(e,n)&&(i=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=nr.compositionStart);return i?(er&&"ko"!==n.locale&&(ar||i!==nr.compositionStart?i===nr.compositionEnd&&ar&&(o=$n()):(Dn="value"in(Fn=r)?Fn.value:Fn.textContent,ar=!0)),i=Kn.getPooled(i,t,n,r),o?i.data=o:null!==(o=ir(n))&&(i.data=o),Ln(i),o=i):o=null,(e=Zn?function(e,t){switch(e){case"compositionend":return ir(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(ar)return"compositionend"===e||!Xn&&or(e,t)?(e=$n(),Un=Dn=Fn=null,ar=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Gn.getPooled(nr.beforeInput,t,n,r)).data=e,Ln(t)):t=null,null===o?t:null===t?o:[o,t]}},ur={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ur[e.type]:"textarea"===t}var sr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Vn.getPooled(sr.change,e,t,n)).type="change",N(n),Ln(e),e}var dr=null,pr=null;function hr(e){lt(e)}function mr(e){if(ke(On(e)))return e}function vr(e,t){if("change"===e)return t}var gr=!1;function yr(){dr&&(dr.detachEvent("onpropertychange",br),pr=dr=null)}function br(e){if("value"===e.propertyName&&mr(pr))if(e=fr(pr,e,ut(e)),F)lt(e);else{F=!0;try{z(hr,e)}finally{F=!1,U()}}}function wr(e,t,n){"focus"===e?(yr(),pr=n,(dr=t).attachEvent("onpropertychange",br)):"blur"===e&&yr()}function kr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return mr(pr)}function xr(e,t){if("click"===e)return mr(t)}function Sr(e,t){if("input"===e||"change"===e)return mr(t)}P&&(gr=ct("input")&&(!document.documentMode||9<document.documentMode));var Er={eventTypes:sr,_isInputEventSupported:gr,extractEvents:function(e,t,n,r){var o=t?On(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=vr;else if(cr(o))if(gr)a=Sr;else{a=kr;var l=wr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=xr);if(a&&(a=a(e,t)))return fr(a,n,r);l&&l(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Pe(o,"number",o.value)}},Tr=Vn.extend({view:null,detail:null}),Cr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cr[e])&&!!t[e]}function _r(){return Pr}var Or=0,Rr=0,Ar=!1,Nr=!1,Ir=Tr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:_r,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Or;return Or=e.screenX,Ar?"mousemove"===e.type?e.screenX-t:0:(Ar=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Rr;return Rr=e.screenY,Nr?"mousemove"===e.type?e.screenY-t:0:(Nr=!0,0)}}),zr=Ir.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Mr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},jr={eventTypes:Mr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!a&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,a)?(a=t,null!==(t=(t=n.relatedTarget||n.toElement)?Pn(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):a=null;if(a===t)return null;if("mouseout"===e||"mouseover"===e)var l=Ir,u=Mr.mouseLeave,c=Mr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=zr,u=Mr.pointerLeave,c=Mr.pointerEnter,s="pointer");if(e=null==a?i:On(a),i=null==t?i:On(t),(u=l.getPooled(u,a,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=l.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=a)&&s)e:{for(c=s,a=0,e=l=r;e;e=An(e))a++;for(e=0,t=c;t;t=An(t))e++;for(;0<a-e;)l=An(l),a--;for(;0<e-a;)c=An(c),e--;for(;a--;){if(l===c||l===c.alternate)break e;l=An(l),c=An(c)}l=null}else l=null;for(c=l,l=[];r&&r!==c&&(null===(a=r.alternate)||a!==c);)l.push(r),r=An(r);for(r=[];s&&s!==c&&(null===(a=s.alternate)||a!==c);)r.push(s),s=An(s);for(s=0;s<l.length;s++)Mn(l[s],"bubbled",u);for(s=r.length;0<s--;)Mn(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}};var Lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Fr=Object.prototype.hasOwnProperty;function Dr(e,t){if(Lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Fr.call(t,n[r])||!Lr(e[n[r]],t[n[r]]))return!1;return!0}var Ur=P&&"documentMode"in document&&11>=document.documentMode,$r={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Br=null,Hr=null,Vr=null,Wr=!1;function qr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Wr||null==Br||Br!==sn(n)?null:("selectionStart"in(n=Br)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vr&&Dr(Vr,n)?null:(Vr=n,(e=Vn.getPooled($r.select,Hr,e,t)).type="select",e.target=Br,Ln(e),e))}var Qr={eventTypes:$r,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Je(o),i=T.onSelect;for(var a=0;a<i.length;a++)if(!o.has(i[a])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?On(t):window,e){case"focus":(cr(o)||"true"===o.contentEditable)&&(Br=o,Hr=t,Vr=null);break;case"blur":Vr=Hr=Br=null;break;case"mousedown":Wr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Wr=!1,qr(n,r);case"selectionchange":if(Ur)break;case"keydown":case"keyup":return qr(n,r)}return null}},Kr=Vn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Gr=Vn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Yr=Tr.extend({relatedTarget:null});function Xr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Jr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Zr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},eo=Tr.extend({key:function(e){if(e.key){var t=Jr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Xr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Zr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:_r,charCode:function(e){return"keypress"===e.type?Xr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Xr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),to=Ir.extend({dataTransfer:null}),no=Tr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:_r}),ro=Vn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),oo=Ir.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),io={eventTypes:Lt,extractEvents:function(e,t,n,r){var o=Ft.get(e);if(!o)return null;switch(e){case"keypress":if(0===Xr(n))return null;case"keydown":case"keyup":e=eo;break;case"blur":case"focus":e=Yr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Ir;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=to;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=no;break;case qe:case Qe:case Ke:e=Kr;break;case Ge:e=ro;break;case"scroll":e=Tr;break;case"wheel":e=oo;break;case"copy":case"cut":case"paste":e=Gr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=zr;break;default:e=Vn}return Ln(t=e.getPooled(o,t,n,r)),t}};if(y)throw Error(a(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),h=Rn,m=_n,v=On,C({SimpleEventPlugin:io,EnterLeaveEventPlugin:jr,ChangeEventPlugin:Er,SelectEventPlugin:Qr,BeforeInputEventPlugin:lr});var ao=[],lo=-1;function uo(e){0>lo||(e.current=ao[lo],ao[lo]=null,lo--)}function co(e,t){lo++,ao[lo]=e.current,e.current=t}var so={},fo={current:so},po={current:!1},ho=so;function mo(e,t){var n=e.type.contextTypes;if(!n)return so;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function vo(e){return null!=(e=e.childContextTypes)}function go(){uo(po),uo(fo)}function yo(e,t,n){if(fo.current!==so)throw Error(a(168));co(fo,t),co(po,n)}function bo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(a(108,ve(t)||"Unknown",i));return o({},n,{},r)}function wo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||so,ho=fo.current,co(fo,e),co(po,po.current),!0}function ko(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=bo(e,t,ho),r.__reactInternalMemoizedMergedChildContext=e,uo(po),uo(fo),co(fo,e)):uo(po),co(po,n)}var xo=i.unstable_runWithPriority,So=i.unstable_scheduleCallback,Eo=i.unstable_cancelCallback,To=i.unstable_requestPaint,Co=i.unstable_now,Po=i.unstable_getCurrentPriorityLevel,_o=i.unstable_ImmediatePriority,Oo=i.unstable_UserBlockingPriority,Ro=i.unstable_NormalPriority,Ao=i.unstable_LowPriority,No=i.unstable_IdlePriority,Io={},zo=i.unstable_shouldYield,Mo=void 0!==To?To:function(){},jo=null,Lo=null,Fo=!1,Do=Co(),Uo=1e4>Do?Co:function(){return Co()-Do};function $o(){switch(Po()){case _o:return 99;case Oo:return 98;case Ro:return 97;case Ao:return 96;case No:return 95;default:throw Error(a(332))}}function Bo(e){switch(e){case 99:return _o;case 98:return Oo;case 97:return Ro;case 96:return Ao;case 95:return No;default:throw Error(a(332))}}function Ho(e,t){return e=Bo(e),xo(e,t)}function Vo(e,t,n){return e=Bo(e),So(e,t,n)}function Wo(e){return null===jo?(jo=[e],Lo=So(_o,Qo)):jo.push(e),Io}function qo(){if(null!==Lo){var e=Lo;Lo=null,Eo(e)}Qo()}function Qo(){if(!Fo&&null!==jo){Fo=!0;var e=0;try{var t=jo;Ho(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),jo=null}catch(t){throw null!==jo&&(jo=jo.slice(e+1)),So(_o,qo),t}finally{Fo=!1}}}function Ko(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Go(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Yo={current:null},Xo=null,Jo=null,Zo=null;function ei(){Zo=Jo=Xo=null}function ti(e){var t=Yo.current;uo(Yo),e.type._context._currentValue=t}function ni(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ri(e,t){Xo=e,Zo=Jo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Ra=!0),e.firstContext=null)}function oi(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Jo){if(null===Xo)throw Error(a(308));Jo=t,Xo.dependencies={expirationTime:0,firstContext:t,responders:null}}else Jo=Jo.next=t;return e._currentValue}var ii=!1;function ai(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function li(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ui(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function ci(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function si(e,t){var n=e.alternate;null!==n&&li(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function fi(e,t,n,r){var i=e.updateQueue;ii=!1;var a=i.baseQueue,l=i.shared.pending;if(null!==l){if(null!==a){var u=a.next;a.next=l.next,l.next=u}a=l,i.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=l))}if(null!==a){u=a.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var h=u;;){if((l=h.expirationTime)<r){var m={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===p?(d=p=m,f=c):p=p.next=m,l>s&&(s=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),iu(l,h.suspenseConfig);e:{var v=e,g=h;switch(l=t,m=n,g.tag){case 1:if("function"==typeof(v=g.payload)){c=v.call(m,c,l);break e}c=v;break e;case 3:v.effectTag=-4097&v.effectTag|64;case 0:if(null==(l="function"==typeof(v=g.payload)?v.call(m,c,l):v))break e;c=o({},c,l);break e;case 2:ii=!0}}null!==h.callback&&(e.effectTag|=32,null===(l=i.effects)?i.effects=[h]:l.push(h))}if(null===(h=h.next)||h===u){if(null===(l=i.shared.pending))break;h=a.next=l.next,l.next=u,i.baseQueue=a=l,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,au(s),e.expirationTime=s,e.memoizedState=c}}function di(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(a(191,r));r.call(o)}}}var pi=Y.ReactCurrentBatchConfig,hi=(new r.Component).refs;function mi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var vi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=ql(),o=pi.suspense;(o=ui(r=Ql(r,e,o),o)).payload=t,null!=n&&(o.callback=n),ci(e,o),Kl(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=ql(),o=pi.suspense;(o=ui(r=Ql(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),ci(e,o),Kl(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=ql(),r=pi.suspense;(r=ui(n=Ql(n,e,r),r)).tag=2,null!=t&&(r.callback=t),ci(e,r),Kl(e,n)}};function gi(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!Dr(n,r)||!Dr(o,i))}function yi(e,t,n){var r=!1,o=so,i=t.contextType;return"object"==typeof i&&null!==i?i=oi(i):(o=vo(t)?ho:fo.current,i=(r=null!=(r=t.contextTypes))?mo(e,o):so),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=vi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function bi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&vi.enqueueReplaceState(t,t.state,null)}function wi(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=hi,ai(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=oi(i):(i=vo(t)?ho:fo.current,o.context=mo(e,i)),fi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(mi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&vi.enqueueReplaceState(o,o.state,null),fi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var ki=Array.isArray;function xi(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===hi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function Si(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ei(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Cu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Ou(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=xi(e,t,n),r.return=e,r):((r=Pu(n.type,n.key,n.props,null,e.mode,r)).ref=xi(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ru(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=_u(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Ou(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Pu(t.type,t.key,t.props,null,e.mode,n)).ref=xi(e,null,t),n.return=e,n;case te:return(t=Ru(t,e.mode,n)).return=e,t}if(ki(t)||me(t))return(t=_u(t,e.mode,n,null)).return=e,t;Si(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(ki(n)||me(n))return null!==o?null:f(e,t,n,r,null);Si(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(ki(r)||me(r))return f(t,e=e.get(n)||null,r,o,null);Si(t,r)}return null}function m(o,a,l,u){for(var c=null,s=null,f=a,m=a=0,v=null;null!==f&&m<l.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var g=p(o,f,l[m],u);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&t(o,f),a=i(g,a,m),null===s?c=g:s.sibling=g,s=g,f=v}if(m===l.length)return n(o,f),c;if(null===f){for(;m<l.length;m++)null!==(f=d(o,l[m],u))&&(a=i(f,a,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<l.length;m++)null!==(v=h(f,o,m,l[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,l,u,c){var s=me(u);if("function"!=typeof s)throw Error(a(150));if(null==(u=s.call(u)))throw Error(a(151));for(var f=s=null,m=l,v=l=0,g=null,y=u.next();null!==m&&!y.done;v++,y=u.next()){m.index>v?(g=m,m=null):g=m.sibling;var b=p(o,m,y.value,c);if(null===b){null===m&&(m=g);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,v),null===f?s=b:f.sibling=b,f=b,m=g}if(y.done)return n(o,m),s;if(null===m){for(;!y.done;v++,y=u.next())null!==(y=d(o,y.value,c))&&(l=i(y,l,v),null===f?s=y:f.sibling=y,f=y);return s}for(m=r(o,m);!y.done;v++,y=u.next())null!==(y=h(m,o,v,y.value,c))&&(e&&null!==y.alternate&&m.delete(null===y.key?v:y.key),l=i(y,l,v),null===f?s=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}break;default:if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=xi(e,c,i),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=_u(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Pu(i.type,i.key,i.props,null,e.mode,u)).ref=xi(e,r,i),u.return=e,e=u)}return l(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Ru(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Ou(i,e.mode,u)).return=e,e=r),l(e);if(ki(i))return m(e,r,i,u);if(me(i))return v(e,r,i,u);if(s&&Si(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Ti=Ei(!0),Ci=Ei(!1),Pi={},_i={current:Pi},Oi={current:Pi},Ri={current:Pi};function Ai(e){if(e===Pi)throw Error(a(174));return e}function Ni(e,t){switch(co(Ri,t),co(Oi,e),co(_i,Pi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Le(null,"");break;default:t=Le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}uo(_i),co(_i,t)}function Ii(){uo(_i),uo(Oi),uo(Ri)}function zi(e){Ai(Ri.current);var t=Ai(_i.current),n=Le(t,e.type);t!==n&&(co(Oi,e),co(_i,n))}function Mi(e){Oi.current===e&&(uo(_i),uo(Oi))}var ji={current:0};function Li(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Fi(e,t){return{responder:e,props:t}}var Di=Y.ReactCurrentDispatcher,Ui=Y.ReactCurrentBatchConfig,$i=0,Bi=null,Hi=null,Vi=null,Wi=!1;function qi(){throw Error(a(321))}function Qi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Lr(e[n],t[n]))return!1;return!0}function Ki(e,t,n,r,o,i){if($i=i,Bi=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Di.current=null===e||null===e.memoizedState?ga:ya,e=n(r,o),t.expirationTime===$i){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(a(301));i+=1,Vi=Hi=null,t.updateQueue=null,Di.current=ba,e=n(r,o)}while(t.expirationTime===$i)}if(Di.current=va,t=null!==Hi&&null!==Hi.next,$i=0,Vi=Hi=Bi=null,Wi=!1,t)throw Error(a(300));return e}function Gi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Vi?Bi.memoizedState=Vi=e:Vi=Vi.next=e,Vi}function Yi(){if(null===Hi){var e=Bi.alternate;e=null!==e?e.memoizedState:null}else e=Hi.next;var t=null===Vi?Bi.memoizedState:Vi.next;if(null!==t)Vi=t,Hi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Hi=e).memoizedState,baseState:Hi.baseState,baseQueue:Hi.baseQueue,queue:Hi.queue,next:null},null===Vi?Bi.memoizedState=Vi=e:Vi=Vi.next=e}return Vi}function Xi(e,t){return"function"==typeof t?t(e):t}function Ji(e){var t=Yi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=Hi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=l=i=null,c=o;do{var s=c.expirationTime;if(s<$i){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,i=r):u=u.next=f,s>Bi.expirationTime&&(Bi.expirationTime=s,au(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),iu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=l,Lr(r,t.memoizedState)||(Ra=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Zi(e){var t=Yi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);Lr(i,t.memoizedState)||(Ra=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ea(e){var t=Gi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Xi,lastRenderedState:e}).dispatch=ma.bind(null,Bi,e),[t.memoizedState,e]}function ta(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Bi.updateQueue)?(t={lastEffect:null},Bi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function na(){return Yi().memoizedState}function ra(e,t,n,r){var o=Gi();Bi.effectTag|=e,o.memoizedState=ta(1|t,n,void 0,void 0===r?null:r)}function oa(e,t,n,r){var o=Yi();r=void 0===r?null:r;var i=void 0;if(null!==Hi){var a=Hi.memoizedState;if(i=a.destroy,null!==r&&Qi(r,a.deps))return void ta(t,n,i,r)}Bi.effectTag|=e,o.memoizedState=ta(1|t,n,i,r)}function ia(e,t){return ra(516,4,e,t)}function aa(e,t){return oa(516,4,e,t)}function la(e,t){return oa(4,2,e,t)}function ua(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ca(e,t,n){return n=null!=n?n.concat([e]):null,oa(4,2,ua.bind(null,t,e),n)}function sa(){}function fa(e,t){return Gi().memoizedState=[e,void 0===t?null:t],e}function da(e,t){var n=Yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Qi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pa(e,t){var n=Yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Qi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ha(e,t,n){var r=$o();Ho(98>r?98:r,(function(){e(!0)})),Ho(97<r?97:r,(function(){var r=Ui.suspense;Ui.suspense=void 0===t?null:t;try{e(!1),n()}finally{Ui.suspense=r}}))}function ma(e,t,n){var r=ql(),o=pi.suspense;o={expirationTime:r=Ql(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Bi||null!==i&&i===Bi)Wi=!0,o.expirationTime=$i,Bi.expirationTime=$i;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var a=t.lastRenderedState,l=i(a,n);if(o.eagerReducer=i,o.eagerState=l,Lr(l,a))return}catch(e){}Kl(e,r)}}var va={readContext:oi,useCallback:qi,useContext:qi,useEffect:qi,useImperativeHandle:qi,useLayoutEffect:qi,useMemo:qi,useReducer:qi,useRef:qi,useState:qi,useDebugValue:qi,useResponder:qi,useDeferredValue:qi,useTransition:qi},ga={readContext:oi,useCallback:fa,useContext:oi,useEffect:ia,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ra(4,2,ua.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ra(4,2,e,t)},useMemo:function(e,t){var n=Gi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Gi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ma.bind(null,Bi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Gi().memoizedState=e},useState:ea,useDebugValue:sa,useResponder:Fi,useDeferredValue:function(e,t){var n=ea(e),r=n[0],o=n[1];return ia((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ea(!1),n=t[0];return t=t[1],[fa(ha.bind(null,t,e),[t,e]),n]}},ya={readContext:oi,useCallback:da,useContext:oi,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Ji,useRef:na,useState:function(){return Ji(Xi)},useDebugValue:sa,useResponder:Fi,useDeferredValue:function(e,t){var n=Ji(Xi),r=n[0],o=n[1];return aa((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ji(Xi),n=t[0];return t=t[1],[da(ha.bind(null,t,e),[t,e]),n]}},ba={readContext:oi,useCallback:da,useContext:oi,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Zi,useRef:na,useState:function(){return Zi(Xi)},useDebugValue:sa,useResponder:Fi,useDeferredValue:function(e,t){var n=Zi(Xi),r=n[0],o=n[1];return aa((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zi(Xi),n=t[0];return t=t[1],[da(ha.bind(null,t,e),[t,e]),n]}},wa=null,ka=null,xa=!1;function Sa(e,t){var n=Eu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ea(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ta(e){if(xa){var t=ka;if(t){var n=t;if(!Ea(e,t)){if(!(t=kn(n.nextSibling))||!Ea(e,t))return e.effectTag=-1025&e.effectTag|2,xa=!1,void(wa=e);Sa(wa,n)}wa=e,ka=kn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,xa=!1,wa=e}}function Ca(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wa=e}function Pa(e){if(e!==wa)return!1;if(!xa)return Ca(e),xa=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yn(t,e.memoizedProps))for(t=ka;t;)Sa(e,t),t=kn(t.nextSibling);if(Ca(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ka=kn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ka=null}}else ka=wa?kn(e.stateNode.nextSibling):null;return!0}function _a(){ka=wa=null,xa=!1}var Oa=Y.ReactCurrentOwner,Ra=!1;function Aa(e,t,n,r){t.child=null===e?Ci(t,null,n,r):Ti(t,e.child,n,r)}function Na(e,t,n,r,o){n=n.render;var i=t.ref;return ri(t,o),r=Ki(e,t,n,r,i,o),null===e||Ra?(t.effectTag|=1,Aa(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ka(e,t,o))}function Ia(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Tu(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Pu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,za(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:Dr)(o,r)&&e.ref===t.ref)?Ka(e,t,i):(t.effectTag|=1,(e=Cu(a,r)).ref=t.ref,e.return=t,t.child=e)}function za(e,t,n,r,o,i){return null!==e&&Dr(e.memoizedProps,r)&&e.ref===t.ref&&(Ra=!1,o<i)?(t.expirationTime=e.expirationTime,Ka(e,t,i)):ja(e,t,n,r,i)}function Ma(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ja(e,t,n,r,o){var i=vo(n)?ho:fo.current;return i=mo(t,i),ri(t,o),n=Ki(e,t,n,r,i,o),null===e||Ra?(t.effectTag|=1,Aa(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ka(e,t,o))}function La(e,t,n,r,o){if(vo(n)){var i=!0;wo(t)}else i=!1;if(ri(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),yi(t,n,r),wi(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=oi(c):c=mo(t,c=vo(n)?ho:fo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&bi(t,a,r,c),ii=!1;var d=t.memoizedState;a.state=d,fi(t,r,a,o),u=t.memoizedState,l!==r||d!==u||po.current||ii?("function"==typeof s&&(mi(t,n,s,r),u=t.memoizedState),(l=ii||gi(t,n,l,r,d,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,li(e,t),l=t.memoizedProps,a.props=t.type===t.elementType?l:Go(t.type,l),u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=oi(c):c=mo(t,c=vo(n)?ho:fo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&bi(t,a,r,c),ii=!1,u=t.memoizedState,a.state=u,fi(t,r,a,o),d=t.memoizedState,l!==r||u!==d||po.current||ii?("function"==typeof s&&(mi(t,n,s,r),d=t.memoizedState),(s=ii||gi(t,n,l,r,u,d,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),a.props=r,a.state=d,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Fa(e,t,n,r,i,o)}function Fa(e,t,n,r,o,i){Ma(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&ko(t,n,!1),Ka(e,t,i);r=t.stateNode,Oa.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Ti(t,e.child,null,i),t.child=Ti(t,null,l,i)):Aa(e,t,l,i),t.memoizedState=r.state,o&&ko(t,n,!0),t.child}function Da(e){var t=e.stateNode;t.pendingContext?yo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&yo(0,t.context,!1),Ni(e,t.containerInfo)}var Ua,$a,Ba,Ha={dehydrated:null,retryTime:0};function Va(e,t,n){var r,o=t.mode,i=t.pendingProps,a=ji.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),co(ji,1&a),null===e){if(void 0!==i.fallback&&Ta(t),l){if(l=i.fallback,(i=_u(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=_u(l,o,n,null)).return=t,i.sibling=n,t.memoizedState=Ha,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Ci(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(i=i.fallback,(n=Cu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(o=Cu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Ha,t.child=n,o}return n=Ti(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=i.fallback,(i=_u(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=_u(l,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Ha,t.child=i,n}return t.memoizedState=null,t.child=Ti(t,e,i.children,n)}function Wa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ni(e.return,t)}function qa(e,t,n,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function Qa(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Aa(e,t,r.children,n),0!=(2&(r=ji.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wa(e,n);else if(19===e.tag)Wa(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(co(ji,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Li(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),qa(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Li(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}qa(t,!0,n,null,i,t.lastEffect);break;case"together":qa(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Ka(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&au(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Cu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Cu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ga(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ya(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return vo(t.type)&&go(),null;case 3:return Ii(),uo(po),uo(fo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Pa(t)||(t.effectTag|=4),null;case 5:Mi(t),n=Ai(Ri.current);var i=t.type;if(null!==e&&null!=t.stateNode)$a(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=Ai(_i.current),Pa(t)){r=t.stateNode,i=t.type;var l=t.memoizedProps;switch(r[En]=t,r[Tn]=l,i){case"iframe":case"object":case"embed":Qt("load",r);break;case"video":case"audio":for(e=0;e<Ye.length;e++)Qt(Ye[e],r);break;case"source":Qt("error",r);break;case"img":case"image":case"link":Qt("error",r),Qt("load",r);break;case"form":Qt("reset",r),Qt("submit",r);break;case"details":Qt("toggle",r);break;case"input":Se(r,l),Qt("invalid",r),un(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Qt("invalid",r),un(n,"onChange");break;case"textarea":Ae(r,l),Qt("invalid",r),un(n,"onChange")}for(var u in on(i,l),e=null,l)if(l.hasOwnProperty(u)){var c=l[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):E.hasOwnProperty(u)&&null!=c&&un(n,u)}switch(i){case"input":we(r),Ce(r,l,!0);break;case"textarea":we(r),Ie(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=je(i)),e===ln?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[En]=t,e[Tn]=r,Ua(e,t),t.stateNode=e,u=an(i,r),i){case"iframe":case"object":case"embed":Qt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ye.length;c++)Qt(Ye[c],e);c=r;break;case"source":Qt("error",e),c=r;break;case"img":case"image":case"link":Qt("error",e),Qt("load",e),c=r;break;case"form":Qt("reset",e),Qt("submit",e),c=r;break;case"details":Qt("toggle",e),c=r;break;case"input":Se(e,r),c=xe(e,r),Qt("invalid",e),un(n,"onChange");break;case"option":c=_e(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),Qt("invalid",e),un(n,"onChange");break;case"textarea":Ae(e,r),c=Re(e,r),Qt("invalid",e),un(n,"onChange");break;default:c=r}on(i,c);var s=c;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?nn(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&De(e,f):"children"===l?"string"==typeof f?("textarea"!==i||""!==f)&&Ue(e,f):"number"==typeof f&&Ue(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(E.hasOwnProperty(l)?null!=f&&un(n,l):null!=f&&X(e,l,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),Ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ye(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=cn)}gn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Ba(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));n=Ai(Ri.current),Ai(_i.current),Pa(t)?(n=t.stateNode,r=t.memoizedProps,n[En]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[En]=t,t.stateNode=n)}return null;case 13:return uo(ji),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Pa(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(l=t.firstEffect)?(t.firstEffect=i,i.nextEffect=l):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&ji.current)?Pl===wl&&(Pl=kl):(Pl!==wl&&Pl!==kl||(Pl=xl),0!==Nl&&null!==El&&(Iu(El,Cl),zu(El,Nl)))),(n||r)&&(t.effectTag|=4),null);case 4:return Ii(),null;case 10:return ti(t),null;case 17:return vo(t.type)&&go(),null;case 19:if(uo(ji),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(l=r.rendering)){if(i)Ga(r,!1);else if(Pl!==wl||null!==e&&0!=(64&e.effectTag))for(l=t.child;null!==l;){if(null!==(e=Li(l))){for(t.effectTag|=64,Ga(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)l=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=l,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,l=e.dependencies,i.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return co(ji,1&ji.current|2),t.child}l=l.sibling}}else{if(!i)if(null!==(e=Li(l))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ga(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Uo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Ga(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=r.last)?n.sibling=l:t.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Uo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Uo(),n.sibling=null,t=ji.current,co(ji,i?1&t|2:1&t),n):null}throw Error(a(156,t.tag))}function Xa(e){switch(e.tag){case 1:vo(e.type)&&go();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Ii(),uo(po),uo(fo),0!=(64&(t=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&t|64,e;case 5:return Mi(e),null;case 13:return uo(ji),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return uo(ji),null;case 4:return Ii(),null;case 10:return ti(e),null;default:return null}}function Ja(e,t){return{value:e,source:t,stack:ge(t)}}Ua=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},$a=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l,u,c=t.stateNode;switch(Ai(_i.current),e=null,n){case"input":a=xe(c,a),r=xe(c,r),e=[];break;case"option":a=_e(c,a),r=_e(c,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Re(c,a),r=Re(c,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(c.onclick=cn)}for(l in on(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(u in c=a[l])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(E.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var s=r[l];if(c=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&s!==c&&(null!=s||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(l,n)),n=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(l,s)):"children"===l?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(E.hasOwnProperty(l)?(null!=s&&un(i,l),e||c===s||(e=[])):(e=e||[]).push(l,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Ba=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Za="function"==typeof WeakSet?WeakSet:Set;function el(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ge(n)),null!==n&&ve(n.type),t=t.value,null!==e&&1===e.tag&&ve(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){yu(e,t)}else t.current=null}function nl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Go(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(a(163))}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ol(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function il(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ol(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Go(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&di(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}di(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&gn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&jt(n)))));case 19:case 17:case 20:case 21:return}throw Error(a(163))}function al(e,t,n){switch("function"==typeof xu&&xu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Ho(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){yu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:tl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){yu(e,t)}}(t,n);break;case 5:tl(t);break;case 4:sl(e,t,n)}}function ll(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ll(t)}function ul(e){return 5===e.tag||3===e.tag||4===e.tag}function cl(e){e:{for(var t=e.return;null!==t;){if(ul(t)){var n=t;break e}t=t.return}throw Error(a(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(Ue(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ul(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=cn));else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function sl(e,t,n){for(var r,o,i=t,l=!1;;){if(!l){l=i.return;e:for(;;){if(null===l)throw Error(a(160));switch(r=l.stateNode,l.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}l=l.return}l=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(al(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(al(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function fl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void rl(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Tn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Ee(n,r),an(e,o),t=an(e,r),o=0;o<i.length;o+=2){var l=i[o],u=i[o+1];"style"===l?nn(n,u):"dangerouslySetInnerHTML"===l?De(n,u):"children"===l?Ue(n,u):X(n,l,u,t)}switch(e){case"input":Te(n,r);break;case"textarea":Ne(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,jt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,zl=Uo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=tn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void dl(t);case 19:return void dl(t);case 17:return}throw Error(a(163))}function dl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Za),t.forEach((function(t){var r=wu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pl="function"==typeof WeakMap?WeakMap:Map;function hl(e,t,n){(n=ui(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){jl||(jl=!0,Ll=r),el(e,t)},n}function ml(e,t,n){(n=ui(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return el(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Fl?Fl=new Set([this]):Fl.add(this),el(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var vl,gl=Math.ceil,yl=Y.ReactCurrentDispatcher,bl=Y.ReactCurrentOwner,wl=0,kl=3,xl=4,Sl=0,El=null,Tl=null,Cl=0,Pl=wl,_l=null,Ol=1073741823,Rl=1073741823,Al=null,Nl=0,Il=!1,zl=0,Ml=null,jl=!1,Ll=null,Fl=null,Dl=!1,Ul=null,$l=90,Bl=null,Hl=0,Vl=null,Wl=0;function ql(){return 0!=(48&Sl)?1073741821-(Uo()/10|0):0!==Wl?Wl:Wl=1073741821-(Uo()/10|0)}function Ql(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=$o();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&Sl))return Cl;if(null!==n)e=Ko(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Ko(e,150,100);break;case 97:case 96:e=Ko(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==El&&e===Cl&&--e,e}function Kl(e,t){if(50<Hl)throw Hl=0,Vl=null,Error(a(185));if(null!==(e=Gl(e,t))){var n=$o();1073741823===t?0!=(8&Sl)&&0==(48&Sl)?Zl(e):(Xl(e),0===Sl&&qo()):Xl(e),0==(4&Sl)||98!==n&&99!==n||(null===Bl?Bl=new Map([[e,t]]):(void 0===(n=Bl.get(e))||n>t)&&Bl.set(e,t))}}function Gl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(El===o&&(au(t),Pl===xl&&Iu(o,Cl)),zu(o,t)),o}function Yl(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Nu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Xl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Wo(Zl.bind(null,e));else{var t=Yl(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=ql();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Io&&Eo(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Wo(Zl.bind(null,e)):Vo(r,Jl.bind(null,e),{timeout:10*(1073741821-t)-Uo()}),e.callbackNode=t}}}function Jl(e,t){if(Wl=0,t)return Mu(e,t=ql()),Xl(e),null;var n=Yl(e);if(0!==n){if(t=e.callbackNode,0!=(48&Sl))throw Error(a(327));if(mu(),e===El&&n===Cl||nu(e,n),null!==Tl){var r=Sl;Sl|=16;for(var o=ou();;)try{uu();break}catch(t){ru(e,t)}if(ei(),Sl=r,yl.current=o,1===Pl)throw t=_l,nu(e,n),Iu(e,n),Xl(e),t;if(null===Tl)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Pl,El=null,r){case wl:case 1:throw Error(a(345));case 2:Mu(e,2<n?2:n);break;case kl:if(Iu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),1073741823===Ol&&10<(o=zl+500-Uo())){if(Il){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,nu(e,n);break}}if(0!==(i=Yl(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(du.bind(null,e),o);break}du(e);break;case xl:if(Iu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),Il&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,nu(e,n);break}if(0!==(o=Yl(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Rl?r=10*(1073741821-Rl)-Uo():1073741823===Ol?r=0:(r=10*(1073741821-Ol)-5e3,0>(r=(o=Uo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*gl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(du.bind(null,e),r);break}du(e);break;case 5:if(1073741823!==Ol&&null!==Al){i=Ol;var l=Al;if(0>=(r=0|l.busyMinDurationMs)?r=0:(o=0|l.busyDelayMs,r=(i=Uo()-(10*(1073741821-i)-(0|l.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Iu(e,n),e.timeoutHandle=bn(du.bind(null,e),r);break}}du(e);break;default:throw Error(a(329))}if(Xl(e),e.callbackNode===t)return Jl.bind(null,e)}}return null}function Zl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&Sl))throw Error(a(327));if(mu(),e===El&&t===Cl||nu(e,t),null!==Tl){var n=Sl;Sl|=16;for(var r=ou();;)try{lu();break}catch(t){ru(e,t)}if(ei(),Sl=n,yl.current=r,1===Pl)throw n=_l,nu(e,t),Iu(e,t),Xl(e),n;if(null!==Tl)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,El=null,du(e),Xl(e)}return null}function eu(e,t){var n=Sl;Sl|=1;try{return e(t)}finally{0===(Sl=n)&&qo()}}function tu(e,t){var n=Sl;Sl&=-2,Sl|=8;try{return e(t)}finally{0===(Sl=n)&&qo()}}function nu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==Tl)for(n=Tl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&go();break;case 3:Ii(),uo(po),uo(fo);break;case 5:Mi(r);break;case 4:Ii();break;case 13:case 19:uo(ji);break;case 10:ti(r)}n=n.return}El=e,Tl=Cu(e.current,null),Cl=t,Pl=wl,_l=null,Rl=Ol=1073741823,Al=null,Nl=0,Il=!1}function ru(e,t){for(;;){try{if(ei(),Di.current=va,Wi)for(var n=Bi.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if($i=0,Vi=Hi=Bi=null,Wi=!1,null===Tl||null===Tl.return)return Pl=1,_l=t,Tl=null;e:{var o=e,i=Tl.return,a=Tl,l=t;if(t=Cl,a.effectTag|=2048,a.firstEffect=a.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var u=l;if(0==(2&a.mode)){var c=a.alternate;c?(a.updateQueue=c.updateQueue,a.memoizedState=c.memoizedState,a.expirationTime=c.expirationTime):(a.updateQueue=null,a.memoizedState=null)}var s=0!=(1&ji.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var h=f.memoizedProps;d=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!s)}}if(d){var m=f.updateQueue;if(null===m){var v=new Set;v.add(u),f.updateQueue=v}else m.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,a.effectTag&=-2981,1===a.tag)if(null===a.alternate)a.tag=17;else{var g=ui(1073741823,null);g.tag=2,ci(a,g)}a.expirationTime=1073741823;break e}l=void 0,a=t;var y=o.pingCache;if(null===y?(y=o.pingCache=new pl,l=new Set,y.set(u,l)):void 0===(l=y.get(u))&&(l=new Set,y.set(u,l)),!l.has(a)){l.add(a);var b=bu.bind(null,o,u,a);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);l=Error((ve(a.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(a))}5!==Pl&&(Pl=2),l=Ja(l,a),f=i;do{switch(f.tag){case 3:u=l,f.effectTag|=4096,f.expirationTime=t,si(f,hl(f,u,t));break e;case 1:u=l;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Fl||!Fl.has(k)))){f.effectTag|=4096,f.expirationTime=t,si(f,ml(f,u,t));break e}}f=f.return}while(null!==f)}Tl=su(Tl)}catch(e){t=e;continue}break}}function ou(){var e=yl.current;return yl.current=va,null===e?va:e}function iu(e,t){e<Ol&&2<e&&(Ol=e),null!==t&&e<Rl&&2<e&&(Rl=e,Al=t)}function au(e){e>Nl&&(Nl=e)}function lu(){for(;null!==Tl;)Tl=cu(Tl)}function uu(){for(;null!==Tl&&!zo();)Tl=cu(Tl)}function cu(e){var t=vl(e.alternate,e,Cl);return e.memoizedProps=e.pendingProps,null===t&&(t=su(e)),bl.current=null,t}function su(e){Tl=e;do{var t=Tl.alternate;if(e=Tl.return,0==(2048&Tl.effectTag)){if(t=Ya(t,Tl,Cl),1===Cl||1!==Tl.childExpirationTime){for(var n=0,r=Tl.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}Tl.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Tl.firstEffect),null!==Tl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Tl.firstEffect),e.lastEffect=Tl.lastEffect),1<Tl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Tl:e.firstEffect=Tl,e.lastEffect=Tl))}else{if(null!==(t=Xa(Tl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Tl.sibling))return t;Tl=e}while(null!==Tl);return Pl===wl&&(Pl=5),null}function fu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function du(e){var t=$o();return Ho(99,pu.bind(null,e,t)),null}function pu(e,t){do{mu()}while(null!==Ul);if(0!=(48&Sl))throw Error(a(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=fu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===El&&(Tl=El=null,Cl=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Sl;Sl|=32,bl.current=null,mn=qt;var l=pn();if(hn(l)){if("selectionStart"in l)var u={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(u=(u=l.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,h=-1,m=0,v=0,g=l,y=null;t:for(;;){for(var b;g!==u||0!==s&&3!==g.nodeType||(p=d+s),g!==f||0!==c&&3!==g.nodeType||(h=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)y=g,g=b;for(;;){if(g===l)break t;if(y===u&&++m===s&&(p=d),y===f&&++v===c&&(h=d),null!==(b=g.nextSibling))break;y=(g=y).parentNode}g=b}u=-1===p||-1===h?null:{start:p,end:h}}else u=null}u=u||{start:0,end:0}}else u=null;vn={activeElementDetached:null,focusedElem:l,selectionRange:u},qt=!1,Ml=o;do{try{hu()}catch(e){if(null===Ml)throw Error(a(330));yu(Ml,e),Ml=Ml.nextEffect}}while(null!==Ml);Ml=o;do{try{for(l=e,u=t;null!==Ml;){var w=Ml.effectTag;if(16&w&&Ue(Ml.stateNode,""),128&w){var k=Ml.alternate;if(null!==k){var x=k.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:cl(Ml),Ml.effectTag&=-3;break;case 6:cl(Ml),Ml.effectTag&=-3,fl(Ml.alternate,Ml);break;case 1024:Ml.effectTag&=-1025;break;case 1028:Ml.effectTag&=-1025,fl(Ml.alternate,Ml);break;case 4:fl(Ml.alternate,Ml);break;case 8:sl(l,s=Ml,u),ll(s)}Ml=Ml.nextEffect}}catch(e){if(null===Ml)throw Error(a(330));yu(Ml,e),Ml=Ml.nextEffect}}while(null!==Ml);if(x=vn,k=pn(),w=x.focusedElem,u=x.selectionRange,k!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&hn(w)&&(k=u.start,void 0===(x=u.end)&&(x=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(x,w.value.length)):(x=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,l=Math.min(u.start,s),u=void 0===u.end?l:Math.min(u.end,s),!x.extend&&l>u&&(s=u,u=l,l=s),s=dn(w,l),f=dn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),l>u?(x.addRange(k),x.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),x.addRange(k))))),k=[];for(x=w;x=x.parentNode;)1===x.nodeType&&k.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(x=k[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}qt=!!mn,vn=mn=null,e.current=n,Ml=o;do{try{for(w=e;null!==Ml;){var S=Ml.effectTag;if(36&S&&il(w,Ml.alternate,Ml),128&S){k=void 0;var E=Ml.ref;if(null!==E){var T=Ml.stateNode;switch(Ml.tag){case 5:k=T;break;default:k=T}"function"==typeof E?E(k):E.current=k}}Ml=Ml.nextEffect}}catch(e){if(null===Ml)throw Error(a(330));yu(Ml,e),Ml=Ml.nextEffect}}while(null!==Ml);Ml=null,Mo(),Sl=i}else e.current=n;if(Dl)Dl=!1,Ul=e,$l=t;else for(Ml=o;null!==Ml;)t=Ml.nextEffect,Ml.nextEffect=null,Ml=t;if(0===(t=e.firstPendingTime)&&(Fl=null),1073741823===t?e===Vl?Hl++:(Hl=0,Vl=e):Hl=0,"function"==typeof ku&&ku(n.stateNode,r),Xl(e),jl)throw jl=!1,e=Ll,Ll=null,e;return 0!=(8&Sl)||qo(),null}function hu(){for(;null!==Ml;){var e=Ml.effectTag;0!=(256&e)&&nl(Ml.alternate,Ml),0==(512&e)||Dl||(Dl=!0,Vo(97,(function(){return mu(),null}))),Ml=Ml.nextEffect}}function mu(){if(90!==$l){var e=97<$l?97:$l;return $l=90,Ho(e,vu)}}function vu(){if(null===Ul)return!1;var e=Ul;if(Ul=null,0!=(48&Sl))throw Error(a(331));var t=Sl;for(Sl|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:rl(5,n),ol(5,n)}}catch(t){if(null===e)throw Error(a(330));yu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Sl=t,qo(),!0}function gu(e,t,n){ci(e,t=hl(e,t=Ja(n,t),1073741823)),null!==(e=Gl(e,1073741823))&&Xl(e)}function yu(e,t){if(3===e.tag)gu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){gu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Fl||!Fl.has(r))){ci(n,e=ml(n,e=Ja(t,e),1073741823)),null!==(n=Gl(n,1073741823))&&Xl(n);break}}n=n.return}}function bu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),El===e&&Cl===n?Pl===xl||Pl===kl&&1073741823===Ol&&Uo()-zl<500?nu(e,Cl):Il=!0:Nu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Xl(e)))}function wu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Ql(t=ql(),e,null)),null!==(e=Gl(e,t))&&Xl(e)}vl=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||po.current)Ra=!0;else{if(r<n){switch(Ra=!1,t.tag){case 3:Da(t),_a();break;case 5:if(zi(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:vo(t.type)&&wo(t);break;case 4:Ni(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,co(Yo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Va(e,t,n):(co(ji,1&ji.current),null!==(t=Ka(e,t,n))?t.sibling:null);co(ji,1&ji.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Qa(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),co(ji,ji.current),!r)return null}return Ka(e,t,n)}Ra=!1}}else Ra=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=mo(t,fo.current),ri(t,n),o=Ki(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,vo(r)){var i=!0;wo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ai(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&mi(t,r,l,e),o.updater=vi,t.stateNode=o,o._reactInternalFiber=t,wi(t,r,e,n),t=Fa(null,t,r,!0,i,n)}else t.tag=0,Aa(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Tu(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Go(o,e),i){case 0:t=ja(null,t,o,e,n);break e;case 1:t=La(null,t,o,e,n);break e;case 11:t=Na(null,t,o,e,n);break e;case 14:t=Ia(null,t,o,Go(o.type,e),r,n);break e}throw Error(a(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,ja(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 1:return r=t.type,o=t.pendingProps,La(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 3:if(Da(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,li(e,t),fi(t,r,null,n),(r=t.memoizedState.element)===o)_a(),t=Ka(e,t,n);else{if((o=t.stateNode.hydrate)&&(ka=kn(t.stateNode.containerInfo.firstChild),wa=t,o=xa=!0),o)for(n=Ci(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Aa(e,t,r,n),_a();t=t.child}return t;case 5:return zi(t),null===e&&Ta(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,yn(r,o)?l=null:null!==i&&yn(r,i)&&(t.effectTag|=16),Ma(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Aa(e,t,l,n),t=t.child),t;case 6:return null===e&&Ta(t),null;case 13:return Va(e,t,n);case 4:return Ni(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ti(t,null,r,n):Aa(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Na(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 7:return Aa(e,t,t.pendingProps,n),t.child;case 8:case 12:return Aa(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,l=t.memoizedProps,i=o.value;var u=t.type._context;if(co(Yo,u._currentValue),u._currentValue=i,null!==l)if(u=l.value,0===(i=Lr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!po.current){t=Ka(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=ui(n,null)).tag=2,ci(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),ni(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Aa(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ri(t,n),r=r(o=oi(o,i.unstable_observedBits)),t.effectTag|=1,Aa(e,t,r,n),t.child;case 14:return i=Go(o=t.type,t.pendingProps),Ia(e,t,o,i=Go(o.type,i),r,n);case 15:return za(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Go(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,vo(r)?(e=!0,wo(t)):e=!1,ri(t,n),yi(t,r,o),wi(t,r,o,n),Fa(null,t,r,!0,e,n);case 19:return Qa(e,t,n)}throw Error(a(156,t.tag))};var ku=null,xu=null;function Su(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Eu(e,t,n,r){return new Su(e,t,n,r)}function Tu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Cu(e,t){var n=e.alternate;return null===n?((n=Eu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Pu(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Tu(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case ne:return _u(n.children,o,i,t);case le:l=8,o|=7;break;case re:l=8,o|=1;break;case oe:return(e=Eu(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Eu(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Eu(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:l=10;break e;case ae:l=9;break e;case ue:l=11;break e;case fe:l=14;break e;case de:l=16,r=null;break e;case pe:l=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Eu(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function _u(e,t,n,r){return(e=Eu(7,e,r,t)).expirationTime=n,e}function Ou(e,t,n){return(e=Eu(6,e,null,t)).expirationTime=n,e}function Ru(e,t,n){return(t=Eu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Au(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Nu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Iu(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function zu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Mu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function ju(e,t,n,r){var o=t.current,i=ql(),l=pi.suspense;i=Ql(i,o,l);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(vo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(a(171))}if(1===n.tag){var c=n.type;if(vo(c)){n=bo(n,c,u);break e}}n=u}else n=so;return null===t.context?t.context=n:t.pendingContext=n,(t=ui(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ci(o,t),Kl(o,i),i}function Lu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Du(e,t){Fu(e,t),(e=e.alternate)&&Fu(e,t)}function Uu(e,t,n){var r=new Au(e,t,n=null!=n&&!0===n.hydrate),o=Eu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,ai(o),e[Cn]=r.current,n&&0!==t&&function(e,t){var n=Je(t);Ct.forEach((function(e){ht(e,t,n)})),Pt.forEach((function(e){ht(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function $u(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Bu(e,t,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Lu(a);l.call(e)}}ju(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Uu(e,0,t?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Lu(a);u.call(e)}}tu((function(){ju(t,a,e,o)}))}return Lu(a)}function Hu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Vu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!$u(t))throw Error(a(200));return Hu(e,t,null,n)}Uu.prototype.render=function(e){ju(e,this._internalRoot,null,null)},Uu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;ju(null,e,null,(function(){t[Cn]=null}))},mt=function(e){if(13===e.tag){var t=Ko(ql(),150,100);Kl(e,t),Du(e,t)}},vt=function(e){13===e.tag&&(Kl(e,3),Du(e,3))},gt=function(e){if(13===e.tag){var t=ql();Kl(e,t=Ql(t,e,null)),Du(e,t)}},_=function(e,t,n){switch(t){case"input":if(Te(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=Rn(r);if(!o)throw Error(a(90));ke(r),Te(r,o)}}}break;case"textarea":Ne(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},z=eu,M=function(e,t,n,r,o){var i=Sl;Sl|=4;try{return Ho(98,e.bind(null,t,n,r,o))}finally{0===(Sl=i)&&qo()}},j=function(){0==(49&Sl)&&(function(){if(null!==Bl){var e=Bl;Bl=null,e.forEach((function(e,t){Mu(t,e),Xl(t)})),qo()}}(),mu())},L=function(e,t){var n=Sl;Sl|=2;try{return e(t)}finally{0===(Sl=n)&&qo()}};var Wu,qu,Qu={Events:[_n,On,Rn,C,S,Ln,function(e){ot(e,jn)},N,I,Xt,lt,mu,{current:!1}]};qu=(Wu={findFiberByHostInstance:Pn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ku=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},xu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},Wu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return qu?qu(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Qu,t.createPortal=Vu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&Sl))throw Error(a(187));var n=Sl;Sl|=1;try{return Ho(99,e.bind(null,t))}finally{Sl=n,qo()}},t.hydrate=function(e,t,n){if(!$u(t))throw Error(a(200));return Bu(null,e,t,!0,n)},t.render=function(e,t,n){if(!$u(t))throw Error(a(200));return Bu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!$u(e))throw Error(a(40));return!!e._reactRootContainer&&(tu((function(){Bu(null,null,e,!1,(function(){e._reactRootContainer=null,e[Cn]=null}))})),!0)},t.unstable_batchedUpdates=eu,t.unstable_createPortal=function(e,t){return Vu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!$u(n))throw Error(a(200));if(null==e||void 0===e._reactInternalFiber)throw Error(a(38));return Bu(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(37)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,a,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},o=function(e,t){c=setTimeout(e,t)},i=function(){clearTimeout(c)},a=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,h=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var g=p.now();t.unstable_now=function(){return p.now()-g}}var y=!1,b=null,w=-1,k=5,x=0;a=function(){return t.unstable_now()>=x},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):k=0<e?Math.floor(1e3/e):5};var S=new MessageChannel,E=S.port2;S.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();x=e+k;try{b(!0,e)?E.postMessage(null):(y=!1,b=null)}catch(e){throw E.postMessage(null),e}}else y=!1},r=function(e){b=e,y||(y=!0,E.postMessage(null))},o=function(e,n){w=h((function(){e(t.unstable_now())}),n)},i=function(){m(w),w=-1}}function T(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<_(o,t)))break e;e[r]=t,e[n]=o,n=r}}function C(e){return void 0===(e=e[0])?null:e}function P(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],l=i+1,u=e[l];if(void 0!==a&&0>_(a,n))void 0!==u&&0>_(u,a)?(e[r]=u,e[l]=n,r=l):(e[r]=a,e[i]=n,r=i);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var O=[],R=[],A=1,N=null,I=3,z=!1,M=!1,j=!1;function L(e){for(var t=C(R);null!==t;){if(null===t.callback)P(R);else{if(!(t.startTime<=e))break;P(R),t.sortIndex=t.expirationTime,T(O,t)}t=C(R)}}function F(e){if(j=!1,L(e),!M)if(null!==C(O))M=!0,r(D);else{var t=C(R);null!==t&&o(F,t.startTime-e)}}function D(e,n){M=!1,j&&(j=!1,i()),z=!0;var r=I;try{for(L(n),N=C(O);null!==N&&(!(N.expirationTime>n)||e&&!a());){var l=N.callback;if(null!==l){N.callback=null,I=N.priorityLevel;var u=l(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?N.callback=u:N===C(O)&&P(O),L(n)}else P(O);N=C(O)}if(null!==N)var c=!0;else{var s=C(R);null!==s&&o(F,s.startTime-n),c=!1}return c}finally{N=null,I=r,z=!1}}function U(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var $=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){M||z||(M=!0,r(D))},t.unstable_getCurrentPriorityLevel=function(){return I},t.unstable_getFirstCallbackNode=function(){return C(O)},t.unstable_next=function(e){switch(I){case 1:case 2:case 3:var t=3;break;default:t=I}var n=I;I=t;try{return e()}finally{I=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=$,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=I;I=e;try{return t()}finally{I=n}},t.unstable_scheduleCallback=function(e,n,a){var l=t.unstable_now();if("object"==typeof a&&null!==a){var u=a.delay;u="number"==typeof u&&0<u?l+u:l,a="number"==typeof a.timeout?a.timeout:U(e)}else a=U(e),u=l;return e={id:A++,callback:n,priorityLevel:e,startTime:u,expirationTime:a=u+a,sortIndex:-1},u>l?(e.sortIndex=u,T(R,e),null===C(O)&&e===C(R)&&(j?i():j=!0,o(F,u-l))):(e.sortIndex=a,T(O,e),M||z||(M=!0,r(D))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();L(e);var n=C(O);return n!==N&&null!==N&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<N.expirationTime||a()},t.unstable_wrapCallback=function(e){var t=I;return function(){var n=I;I=t;try{return e.apply(this,arguments)}finally{I=n}}}},,,,function(e,t,n){e.exports=n(42)},function(e,t,n){"use strict";var r=n(1),o=n(15),i=n(43),a=n(21);function l(e){var t=new i(e),n=o(i.prototype.request,t);return r.extend(n,i.prototype,t),r.extend(n,t),n}var u=l(n(18));u.Axios=i,u.create=function(e){return l(a(u.defaults,e))},u.Cancel=n(22),u.CancelToken=n(56),u.isCancel=n(17),u.all=function(e){return Promise.all(e)},u.spread=n(57),e.exports=u,e.exports.default=u},function(e,t,n){"use strict";var r=n(1),o=n(16),i=n(44),a=n(45),l=n(21);function u(e){this.defaults=e,this.interceptors={request:new i,response:new i}}u.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=l(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=[a,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){t.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){t.push(e.fulfilled,e.rejected)}));t.length;)n=n.then(t.shift(),t.shift());return n},u.prototype.getUri=function(e){return e=l(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){u.prototype[e]=function(t,n){return this.request(r.merge(n||{},{method:e,url:t}))}})),r.forEach(["post","put","patch"],(function(e){u.prototype[e]=function(t,n,o){return this.request(r.merge(o||{},{method:e,url:t,data:n}))}})),e.exports=u},function(e,t,n){"use strict";var r=n(1);function o(){this.handlers=[]}o.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=o},function(e,t,n){"use strict";var r=n(1),o=n(46),i=n(17),a=n(18);function l(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return l(e),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||a.adapter)(e).then((function(t){return l(e),t.data=o(t.data,t.headers,e.transformResponse),t}),(function(t){return i(t)||(l(e),t&&t.response&&(t.response.data=o(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},function(e,t,n){"use strict";var r=n(1);e.exports=function(e,t,n){return r.forEach(n,(function(n){e=n(e,t)})),e}},function(e,t,n){"use strict";var r=n(1);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},function(e,t,n){"use strict";var r=n(20);e.exports=function(e,t,n){var o=n.config.validateStatus;!o||o(n.status)?e(n):t(r("Request failed with status code "+n.status,n.config,null,n.request,n))}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,t,n){"use strict";var r=n(51),o=n(52);e.exports=function(e,t){return e&&!r(t)?o(e,t):t}},function(e,t,n){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,n){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,n){"use strict";var r=n(1),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,a={};return e?(r.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(a[t]&&o.indexOf(t)>=0)return;a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([n]):a[t]?a[t]+", "+n:n}})),a):a}},function(e,t,n){"use strict";var r=n(1);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=o(window.location.href),function(t){var n=r.isString(t)?o(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},function(e,t,n){"use strict";var r=n(1);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,o,i,a){var l=[];l.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&l.push("expires="+new Date(n).toGMTString()),r.isString(o)&&l.push("path="+o),r.isString(i)&&l.push("domain="+i),!0===a&&l.push("secure"),document.cookie=l.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,t,n){"use strict";var r=n(22);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var e;return{token:new o((function(t){e=t})),cancel:e}},e.exports=o},function(e,t,n){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}}]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlZC1jb21wb25lbnRzL2Rpc3Qvc3R5bGVkLWNvbXBvbmVudHMuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtcGF0aG5hbWUvZXNtL3Jlc29sdmUtcGF0aG5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3ZhbHVlLWVxdWFsL2VzbS92YWx1ZS1lcXVhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXNtL2hpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lc20vcmVhY3Qtcm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzbS9yZWFjdC1yb3V0ZXItZG9tLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9taW5pLWNyZWF0ZS1yZWFjdC1jb250ZXh0L2Rpc3QvZXNtL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9tZW1vaXplL2Rpc3QvbWVtb2l6ZS5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaXMtcHJvcC12YWxpZC9kaXN0L2lzLXByb3AtdmFsaWQuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9hZGFwdGVycy94aHIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2NyZWF0ZUVycm9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9tZXJnZUNvbmZpZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NoYWxsb3dlcXVhbC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc3R5bGlzL2Rpc3Qvc3R5bGlzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi91bml0bGVzcy9kaXN0L3VuaXRsZXNzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9heGlvcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS90cmFuc2Zvcm1EYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9zZXR0bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2VuaGFuY2VFcnJvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlSGVhZGVycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb29raWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbFRva2VuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcHJlYWQuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImJpbmQiLCJ0b1N0cmluZyIsIk9iamVjdCIsInByb3RvdHlwZSIsImlzQXJyYXkiLCJ2YWwiLCJjYWxsIiwiaXNVbmRlZmluZWQiLCJpc09iamVjdCIsImlzRnVuY3Rpb24iLCJmb3JFYWNoIiwib2JqIiwiZm4iLCJpIiwibCIsImxlbmd0aCIsImtleSIsImhhc093blByb3BlcnR5IiwiaXNBcnJheUJ1ZmZlciIsImlzQnVmZmVyIiwiY29uc3RydWN0b3IiLCJpc0Zvcm1EYXRhIiwiRm9ybURhdGEiLCJpc0FycmF5QnVmZmVyVmlldyIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiYnVmZmVyIiwiaXNTdHJpbmciLCJpc051bWJlciIsImlzRGF0ZSIsImlzRmlsZSIsImlzQmxvYiIsImlzU3RyZWFtIiwicGlwZSIsImlzVVJMU2VhcmNoUGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwiaXNTdGFuZGFyZEJyb3dzZXJFbnYiLCJuYXZpZ2F0b3IiLCJwcm9kdWN0Iiwid2luZG93IiwiZG9jdW1lbnQiLCJtZXJnZSIsInJlc3VsdCIsImFzc2lnblZhbHVlIiwiYXJndW1lbnRzIiwiZGVlcE1lcmdlIiwiZXh0ZW5kIiwiYSIsImIiLCJ0aGlzQXJnIiwidHJpbSIsInN0ciIsInJlcGxhY2UiLCJfaW5oZXJpdHNMb29zZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNyZWF0ZSIsIl9fcHJvdG9fXyIsInJlYWN0SXMiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZSIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJuYW1lIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCJjb21wYXJlIiwiVFlQRV9TVEFUSUNTIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsIkZvcndhcmRSZWYiLCJyZW5kZXIiLCJNZW1vIiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0UHJvdG90eXBlT2YiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsImtleXMiLCJjb25jYXQiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsImRlc2NyaXB0b3IiLCJlIiwiY2FjaGVkU2V0VGltZW91dCIsImNhY2hlZENsZWFyVGltZW91dCIsInByb2Nlc3MiLCJkZWZhdWx0U2V0VGltb3V0IiwiRXJyb3IiLCJkZWZhdWx0Q2xlYXJUaW1lb3V0IiwicnVuVGltZW91dCIsImZ1biIsInNldFRpbWVvdXQiLCJ0aGlzIiwiY2xlYXJUaW1lb3V0IiwiY3VycmVudFF1ZXVlIiwicXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJkcmFpblF1ZXVlIiwidGltZW91dCIsImxlbiIsInJ1biIsIm1hcmtlciIsInJ1bkNsZWFyVGltZW91dCIsIkl0ZW0iLCJhcnJheSIsIm5vb3AiLCJuZXh0VGljayIsImFyZ3MiLCJBcnJheSIsInB1c2giLCJhcHBseSIsInRpdGxlIiwiYnJvd3NlciIsImVudiIsImFyZ3YiLCJ2ZXJzaW9uIiwidmVyc2lvbnMiLCJvbiIsImFkZExpc3RlbmVyIiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwiZW1pdCIsInByZXBlbmRMaXN0ZW5lciIsInByZXBlbmRPbmNlTGlzdGVuZXIiLCJsaXN0ZW5lcnMiLCJiaW5kaW5nIiwiY3dkIiwiY2hkaXIiLCJkaXIiLCJ1bWFzayIsIl9leHRlbmRzIiwiYXNzaWduIiwidGFyZ2V0Iiwic291cmNlIiwiaW50ZXJsZWF2ZSIsInN0cmluZ3MiLCJpbnRlcnBvbGF0aW9ucyIsImlzUGxhaW5PYmplY3QiLCJ4IiwiRU1QVFlfQVJSQVkiLCJmcmVlemUiLCJFTVBUWV9PQkpFQ1QiLCJ0ZXN0IiwiZ2V0Q29tcG9uZW50TmFtZSIsImlzU3R5bGVkQ29tcG9uZW50Iiwic3R5bGVkQ29tcG9uZW50SWQiLCJTQ19BVFRSIiwiUkVBQ1RfQVBQX1NDX0FUVFIiLCJJU19CUk9XU0VSIiwiRElTQUJMRV9TUEVFRFkiLCJTQ19ESVNBQkxFX1NQRUVEWSIsIlJFQUNUX0FQUF9TQ19ESVNBQkxFX1NQRUVEWSIsIlNUQVRJQ19FWEVDVVRJT05fQ09OVEVYVCIsImdldE5vbmNlIiwidGhyb3dTdHlsZWRDb21wb25lbnRzRXJyb3IiLCJjb2RlIiwiX2xlbiIsIl9rZXkiLCJqb2luIiwibWFrZVN0eWxlVGFnIiwiaGVhZCIsInBhcmVudCIsInN0eWxlIiwiY3JlYXRlRWxlbWVudCIsInByZXZTdHlsZSIsImNoaWxkTm9kZXMiLCJjaGlsZCIsIm5vZGVUeXBlIiwiaGFzQXR0cmlidXRlIiwiZmluZExhc3RTdHlsZVRhZyIsIm5leHRTaWJsaW5nIiwidW5kZWZpbmVkIiwic2V0QXR0cmlidXRlIiwibm9uY2UiLCJpbnNlcnRCZWZvcmUiLCJDU1NPTVRhZyIsImVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwic2hlZXQiLCJ0YWciLCJzdHlsZVNoZWV0cyIsIm93bmVyTm9kZSIsImdldFNoZWV0IiwiX3Byb3RvIiwiaW5zZXJ0UnVsZSIsImluZGV4IiwicnVsZSIsIl9lcnJvciIsImRlbGV0ZVJ1bGUiLCJnZXRSdWxlIiwiY3NzUnVsZXMiLCJjc3NUZXh0IiwiVGV4dFRhZyIsIm5vZGVzIiwiX3Byb3RvMiIsIm5vZGUiLCJyZWZOb2RlIiwicmVtb3ZlQ2hpbGQiLCJ0ZXh0Q29udGVudCIsIlZpcnR1YWxUYWciLCJfdGFyZ2V0IiwicnVsZXMiLCJfcHJvdG8zIiwic3BsaWNlIiwiRGVmYXVsdEdyb3VwZWRUYWciLCJncm91cFNpemVzIiwiVWludDMyQXJyYXkiLCJpbmRleE9mR3JvdXAiLCJncm91cCIsImluc2VydFJ1bGVzIiwib2xkQnVmZmVyIiwib2xkU2l6ZSIsIm5ld1NpemUiLCJzZXQiLCJydWxlSW5kZXgiLCJfaSIsImNsZWFyR3JvdXAiLCJzdGFydEluZGV4IiwiZW5kSW5kZXgiLCJnZXRHcm91cCIsImNzcyIsImdyb3VwSURSZWdpc3RlciIsIk1hcCIsInJldmVyc2VSZWdpc3RlciIsIm5leHRGcmVlR3JvdXAiLCJnZXRHcm91cEZvcklkIiwiaWQiLCJoYXMiLCJnZXQiLCJnZXRJZEZvckdyb3VwIiwic2V0R3JvdXBGb3JJZCIsIlNFTEVDVE9SIiwiTUFSS0VSX1JFIiwiUmVnRXhwIiwicmVoeWRyYXRlTmFtZXNGcm9tQ29udGVudCIsImNvbnRlbnQiLCJuYW1lcyIsInNwbGl0IiwicmVnaXN0ZXJOYW1lIiwicmVoeWRyYXRlU2hlZXRGcm9tVGFnIiwicGFydHMiLCJpbm5lckhUTUwiLCJwYXJ0IiwibWF0Y2giLCJwYXJzZUludCIsImdldFRhZyIsIlNIT1VMRF9SRUhZRFJBVEUiLCJkZWZhdWx0T3B0aW9ucyIsImlzU2VydmVyIiwidXNlQ1NTT01JbmplY3Rpb24iLCJTdHlsZVNoZWV0Iiwib3B0aW9ucyIsImdsb2JhbFN0eWxlcyIsImdzIiwicXVlcnlTZWxlY3RvckFsbCIsImdldEF0dHJpYnV0ZSIsInBhcmVudE5vZGUiLCJyZWh5ZHJhdGVTaGVldCIsInJlZ2lzdGVySWQiLCJyZWNvbnN0cnVjdFdpdGhPcHRpb25zIiwiYWxsb2NhdGVHU0luc3RhbmNlIiwiX3JlZiIsImhhc05hbWVGb3JJZCIsImFkZCIsImdyb3VwTmFtZXMiLCJTZXQiLCJjbGVhck5hbWVzIiwiY2xlYXIiLCJjbGVhclJ1bGVzIiwiY2xlYXJUYWciLCJzZWxlY3RvciIsIm91dHB1dFNoZWV0IiwicGhhc2giLCJoIiwiY2hhckNvZGVBdCIsImhhc2giLCJDT01NRU5UX1JFR0VYIiwiY3JlYXRlU3R5bGlzSW5zdGFuY2UiLCJfdGVtcCIsIl9jb21wb25lbnRJZCIsIl9zZWxlY3RvciIsIl9zZWxlY3RvclJlZ2V4cCIsIl9yZWYkb3B0aW9ucyIsIl9yZWYkcGx1Z2lucyIsInBsdWdpbnMiLCJzdHlsaXMiLCJwYXJzaW5nUnVsZXMiLCJwYXJzZVJ1bGVzUGx1Z2luIiwidG9TaGVldCIsImJsb2NrIiwiY29udGV4dCIsInNlbGVjdG9ycyIsInBhcmVudHMiLCJsaW5lIiwiY29sdW1uIiwibnMiLCJkZXB0aCIsImF0IiwiZGVsaW1pdGVyIiwiaW5zZXJ0UnVsZVBsdWdpbiIsInNlbGZSZWZlcmVuY2VSZXBsYWNlciIsIm9mZnNldCIsInN0cmluZyIsInNsaWNlIiwiaW5kZXhPZiIsInN0cmluZ2lmeVJ1bGVzIiwicHJlZml4IiwiY29tcG9uZW50SWQiLCJmbGF0Q1NTIiwiY3NzU3RyIiwidXNlIiwiXyIsImxhc3RJbmRleE9mIiwicGFyc2VkUnVsZXMiLCJyZWR1Y2UiLCJhY2MiLCJwbHVnaW4iLCJTdHlsZVNoZWV0Q29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJTdHlsZVNoZWV0Q29uc3VtZXIiLCJDb25zdW1lciIsIlN0eWxpc0NvbnRleHQiLCJtYXN0ZXJTaGVldCIsIm1hc3RlclN0eWxpcyIsInVzZVN0eWxlU2hlZXQiLCJ1c2VTdHlsaXMiLCJTdHlsZVNoZWV0TWFuYWdlciIsInByb3BzIiwiX3VzZVN0YXRlIiwic3R5bGlzUGx1Z2lucyIsInNldFBsdWdpbnMiLCJjb250ZXh0U3R5bGVTaGVldCIsInN0eWxlU2hlZXQiLCJkaXNhYmxlQ1NTT01JbmplY3Rpb24iLCJkaXNhYmxlVmVuZG9yUHJlZml4ZXMiLCJQcm92aWRlciIsInZhbHVlIiwiY2hpbGRyZW4iLCJLZXlmcmFtZXMiLCJzdHJpbmdpZnlBcmdzIiwiX3RoaXMiLCJpbmplY3QiLCJTdHJpbmciLCJnZXROYW1lIiwidXBwZXJjYXNlUGF0dGVybiIsIm1zUGF0dGVybiIsImh5cGhlbmF0ZVN0eWxlTmFtZSIsInRvTG93ZXJDYXNlIiwiaXNGYWxzaXNoIiwiY2h1bmsiLCJvYmpUb0Nzc0FycmF5IiwicHJldktleSIsImZsYXR0ZW4iLCJleGVjdXRpb25Db250ZXh0IiwicnVsZVNldCIsImlzUmVhY3RDb21wb25lbnQiLCJzdHlsZXMiLCJpc1ZhbGlkS2V5IiwibWl4aW4iLCJtaXhpbkRlZXAiLCJyZXN0IiwiX3Jlc3QiLCJBRF9SRVBMQUNFUl9SIiwiZ2V0QWxwaGFiZXRpY0NoYXIiLCJmcm9tQ2hhckNvZGUiLCJnZW5lcmF0ZUFscGhhYmV0aWNOYW1lIiwiTWF0aCIsImFicyIsImlzU3RhdGljUnVsZXMiLCJDb21wb25lbnRTdHlsZSIsInN0YXRpY1J1bGVzSWQiLCJpc1N0YXRpYyIsImJhc2VIYXNoIiwiZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMiLCJjc3NTdGF0aWMiLCJjc3NTdGF0aWNGb3JtYXR0ZWQiLCJkeW5hbWljSGFzaCIsInBhcnRSdWxlIiwicGFydENodW5rIiwicGFydFN0cmluZyIsIl9uYW1lIiwiY3NzRm9ybWF0dGVkIiwiZGV0ZXJtaW5lVGhlbWUiLCJwcm92aWRlZFRoZW1lIiwidGhlbWUiLCJlc2NhcGVSZWdleCIsImRhc2hlc0F0RW5kcyIsImVzY2FwZSIsImlzVGFnIiwiZ2VuZXJhdGVDb21wb25lbnRJZCIsIlRoZW1lQ29udGV4dCIsIlRoZW1lQ29uc3VtZXIiLCJUaGVtZVByb3ZpZGVyIiwib3V0ZXJUaGVtZSIsInRoZW1lQ29udGV4dCIsIm1lcmdlVGhlbWUiLCJpZGVudGlmaWVycyIsInVzZVN0eWxlZENvbXBvbmVudEltcGwiLCJmb3J3YXJkZWRDb21wb25lbnQiLCJmb3J3YXJkZWRSZWYiLCJjb21wb25lbnRBdHRycyIsImF0dHJzIiwiY29tcG9uZW50U3R5bGUiLCJmb2xkZWRDb21wb25lbnRJZHMiLCJzaG91bGRGb3J3YXJkUHJvcCIsIl91c2VSZXNvbHZlZEF0dHJzIiwicmVzb2x2ZWRBdHRycyIsImF0dHJEZWYiLCJyZXNvbHZlZEF0dHJEZWYiLCJ1c2VSZXNvbHZlZEF0dHJzIiwiZ2VuZXJhdGVkQ2xhc3NOYW1lIiwiaGFzQXR0cnMiLCJ3YXJuVG9vTWFueUNsYXNzZXMiLCJjbGFzc05hbWUiLCJ1c2VJbmplY3RlZFN0eWxlIiwicmVmVG9Gb3J3YXJkIiwiZWxlbWVudFRvQmVDcmVhdGVkIiwiJGFzIiwiYXMiLCJpc1RhcmdldFRhZyIsImNvbXB1dGVkUHJvcHMiLCJwcm9wRmlsdGVyRm4iLCJwcm9wc0ZvckVsZW1lbnQiLCJmaWx0ZXIiLCJCb29sZWFuIiwicmVmIiwiY3JlYXRlU3R5bGVkQ29tcG9uZW50IiwiaXNUYXJnZXRTdHlsZWRDb21wIiwiaXNDb21wb3NpdGVDb21wb25lbnQiLCJfb3B0aW9ucyRkaXNwbGF5TmFtZSIsImdlbmVyYXRlRGlzcGxheU5hbWUiLCJfb3B0aW9ucyRjb21wb25lbnRJZCIsInBhcmVudENvbXBvbmVudElkIiwiZ2VuZXJhdGVJZCIsIl9vcHRpb25zJGF0dHJzIiwiZmluYWxBdHRycyIsInByb3AiLCJmaWx0ZXJGbiIsIldyYXBwZWRTdHlsZWRDb21wb25lbnQiLCJmb3J3YXJkUmVmIiwid2l0aENvbXBvbmVudCIsInByZXZpb3VzQ29tcG9uZW50SWQiLCJvcHRpb25zVG9Db3B5IiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJuZXdDb21wb25lbnRJZCIsIl9mb2xkZWREZWZhdWx0UHJvcHMiLCJzZWxmIiwic3R5bGVkIiwiY29uc3RydWN0V2l0aE9wdGlvbnMiLCJjb21wb25lbnRDb25zdHJ1Y3RvciIsInRlbXBsYXRlRnVuY3Rpb24iLCJ3aXRoQ29uZmlnIiwiY29uZmlnIiwiZG9tRWxlbWVudCIsIkdsb2JhbFN0eWxlIiwiY3JlYXRlU3R5bGVzIiwiaW5zdGFuY2UiLCJyZW1vdmVTdHlsZXMiLCJyZW5kZXJTdHlsZXMiLCJjcmVhdGVHbG9iYWxTdHlsZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJnbG9iYWxTdHlsZSIsIkdsb2JhbFN0eWxlQ29tcG9uZW50IiwiaW5zdGFuY2VSZWYiLCJjdXJyZW50IiwibWVtbyIsImtleWZyYW1lcyIsIlNlcnZlclN0eWxlU2hlZXQiLCJfZW1pdFNoZWV0Q1NTIiwiU0NfQVRUUl9WRVJTSU9OIiwiZ2V0U3R5bGVUYWdzIiwic2VhbGVkIiwiZ2V0U3R5bGVFbGVtZW50IiwiX3Byb3BzIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJzZWFsIiwiY29sbGVjdFN0eWxlcyIsImludGVybGVhdmVXaXRoTm9kZVN0cmVhbSIsImlucHV0Iiwid2l0aFRoZW1lIiwiQ29tcG9uZW50IiwiV2l0aFRoZW1lIiwidGhlbWVQcm9wIiwidXNlVGhlbWUiLCJfX1BSSVZBVEVfXyIsImlzQWJzb2x1dGUiLCJwYXRobmFtZSIsImNoYXJBdCIsInNwbGljZU9uZSIsImxpc3QiLCJrIiwibiIsInBvcCIsInRvIiwiZnJvbSIsImhhc1RyYWlsaW5nU2xhc2giLCJ0b1BhcnRzIiwiZnJvbVBhcnRzIiwiaXNUb0FicyIsImlzRnJvbUFicyIsIm11c3RFbmRBYnMiLCJsYXN0IiwidXAiLCJ1bnNoaWZ0Iiwic3Vic3RyIiwidmFsdWVPZiIsInZhbHVlRXF1YWwiLCJldmVyeSIsIml0ZW0iLCJhVmFsdWUiLCJiVmFsdWUiLCJjb25kaXRpb24iLCJtZXNzYWdlIiwiYWRkTGVhZGluZ1NsYXNoIiwicGF0aCIsInN0cmlwTGVhZGluZ1NsYXNoIiwic3RyaXBCYXNlbmFtZSIsImhhc0Jhc2VuYW1lIiwic3RyaXBUcmFpbGluZ1NsYXNoIiwiY3JlYXRlUGF0aCIsImxvY2F0aW9uIiwic2VhcmNoIiwiY3JlYXRlTG9jYXRpb24iLCJzdGF0ZSIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwiZGVjb2RlVVJJIiwiVVJJRXJyb3IiLCJjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiYWN0aW9uIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImNhbGxiYWNrIiwiYXBwZW5kTGlzdGVuZXIiLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwibm90aWZ5TGlzdGVuZXJzIiwiY2FuVXNlRE9NIiwiZ2V0Q29uZmlybWF0aW9uIiwiY29uZmlybSIsImdldEhpc3RvcnlTdGF0ZSIsImhpc3RvcnkiLCJjcmVhdGVCcm93c2VySGlzdG9yeSIsInVhIiwiZ2xvYmFsSGlzdG9yeSIsImNhblVzZUhpc3RvcnkiLCJ1c2VyQWdlbnQiLCJuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciIsIl9wcm9wcyRmb3JjZVJlZnJlc2giLCJmb3JjZVJlZnJlc2giLCJfcHJvcHMkZ2V0VXNlckNvbmZpcm0iLCJfcHJvcHMka2V5TGVuZ3RoIiwia2V5TGVuZ3RoIiwiYmFzZW5hbWUiLCJnZXRET01Mb2NhdGlvbiIsImhpc3RvcnlTdGF0ZSIsIl93aW5kb3ckbG9jYXRpb24iLCJjcmVhdGVLZXkiLCJyYW5kb20iLCJ0cmFuc2l0aW9uTWFuYWdlciIsInNldFN0YXRlIiwibmV4dFN0YXRlIiwiaGFuZGxlUG9wU3RhdGUiLCJldmVudCIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwib2siLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwicmV2ZXJ0UG9wIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaXNCbG9ja2VkIiwiaHJlZiIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZVN0YXRlIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiSGFzaFBhdGhDb2RlcnMiLCJoYXNoYmFuZyIsImVuY29kZVBhdGgiLCJkZWNvZGVQYXRoIiwibm9zbGFzaCIsInNsYXNoIiwic3RyaXBIYXNoIiwidXJsIiwiZ2V0SGFzaFBhdGgiLCJzdWJzdHJpbmciLCJyZXBsYWNlSGFzaFBhdGgiLCJjcmVhdGVIYXNoSGlzdG9yeSIsIl9wcm9wcyRoYXNoVHlwZSIsImhhc2hUeXBlIiwiX0hhc2hQYXRoQ29kZXJzJGhhc2hUIiwiaWdub3JlUGF0aCIsImVuY29kZWRQYXRoIiwicHJldkxvY2F0aW9uIiwiYWxsUGF0aHMiLCJiYXNlVGFnIiwicXVlcnlTZWxlY3RvciIsInB1c2hIYXNoUGF0aCIsIm5leHRQYXRocyIsImNsYW1wIiwibG93ZXJCb3VuZCIsInVwcGVyQm91bmQiLCJtaW4iLCJtYXgiLCJjcmVhdGVNZW1vcnlIaXN0b3J5IiwiX3Byb3BzJGluaXRpYWxFbnRyaWVzIiwiaW5pdGlhbEVudHJpZXMiLCJfcHJvcHMkaW5pdGlhbEluZGV4IiwiaW5pdGlhbEluZGV4IiwiZW50cmllcyIsIm1hcCIsImVudHJ5IiwibmV4dEluZGV4IiwibmV4dEVudHJpZXMiLCJjYW5HbyIsImhpc3RvcnlDb250ZXh0IiwiY3JlYXRlTmFtZWRDb250ZXh0JDEiLCJfUmVhY3QkQ29tcG9uZW50IiwiUm91dGVyIiwiX2lzTW91bnRlZCIsIl9wZW5kaW5nTG9jYXRpb24iLCJzdGF0aWNDb250ZXh0IiwiY29tcHV0ZVJvb3RNYXRjaCIsInBhcmFtcyIsImlzRXhhY3QiLCJjb21wb25lbnREaWRNb3VudCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiTWVtb3J5Um91dGVyIiwiTGlmZWN5Y2xlIiwib25Nb3VudCIsImNvbXBvbmVudERpZFVwZGF0ZSIsInByZXZQcm9wcyIsIm9uVXBkYXRlIiwib25Vbm1vdW50IiwiUHJvbXB0IiwiX3JlZiR3aGVuIiwid2hlbiIsIm1ldGhvZCIsInJlbGVhc2UiLCJjYWNoZSIsImNhY2hlQ291bnQiLCJnZW5lcmF0ZVBhdGgiLCJnZW5lcmF0b3IiLCJjb21waWxlIiwiY29tcGlsZVBhdGgiLCJwcmV0dHkiLCJSZWRpcmVjdCIsImNvbXB1dGVkTWF0Y2giLCJfcmVmJHB1c2giLCJjYWNoZSQxIiwiY2FjaGVDb3VudCQxIiwibWF0Y2hQYXRoIiwiX29wdGlvbnMiLCJfb3B0aW9ucyRleGFjdCIsImV4YWN0IiwiX29wdGlvbnMkc3RyaWN0Iiwic3RyaWN0IiwiX29wdGlvbnMkc2Vuc2l0aXZlIiwic2Vuc2l0aXZlIiwibWF0Y2hlZCIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwiZW5kIiwicGF0aENhY2hlIiwicmVnZXhwIiwiY29tcGlsZVBhdGgkMSIsImV4ZWMiLCJ2YWx1ZXMiLCJSb3V0ZSIsImNvbnRleHQkMSIsIl90aGlzJHByb3BzIiwiYmFzZSIsImNyZWF0ZVVSTCIsInN0YXRpY0hhbmRsZXIiLCJtZXRob2ROYW1lIiwiU3RhdGljUm91dGVyIiwiaGFuZGxlUHVzaCIsIm5hdmlnYXRlVG8iLCJoYW5kbGVSZXBsYWNlIiwiaGFuZGxlTGlzdGVuIiwiaGFuZGxlQmxvY2siLCJfdGhpcyRwcm9wcyRiYXNlbmFtZSIsIl90aGlzJHByb3BzJGNvbnRleHQiLCJhZGRCYXNlbmFtZSIsIl90aGlzJHByb3BzMiIsIl90aGlzJHByb3BzMiRiYXNlbmFtZSIsIl90aGlzJHByb3BzMiRjb250ZXh0IiwiX3RoaXMkcHJvcHMyJGxvY2F0aW9uIiwiU3dpdGNoIiwiQ2hpbGRyZW4iLCJpc1ZhbGlkRWxlbWVudCIsImNsb25lRWxlbWVudCIsIndpdGhSb3V0ZXIiLCJDIiwid3JhcHBlZENvbXBvbmVudFJlZiIsInJlbWFpbmluZ1Byb3BzIiwiV3JhcHBlZENvbXBvbmVudCIsInVzZUNvbnRleHQiLCJ1c2VIaXN0b3J5IiwidXNlTG9jYXRpb24iLCJ1c2VQYXJhbXMiLCJ1c2VSb3V0ZU1hdGNoIiwiQnJvd3NlclJvdXRlciIsIkhhc2hSb3V0ZXIiLCJyZXNvbHZlVG9Mb2NhdGlvbiIsImZvcndhcmRSZWZTaGltIiwiTGlua0FuY2hvciIsImlubmVyUmVmIiwibmF2aWdhdGUiLCJfb25DbGljayIsIm9uQ2xpY2siLCJleCIsInByZXZlbnREZWZhdWx0IiwiZGVmYXVsdFByZXZlbnRlZCIsImJ1dHRvbiIsIm1ldGFLZXkiLCJhbHRLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJpc01vZGlmaWVkRXZlbnQiLCJMaW5rIiwiX3JlZjIiLCJfcmVmMiRjb21wb25lbnQiLCJmb3J3YXJkUmVmU2hpbSQxIiwiZm9yd2FyZFJlZiQxIiwiTmF2TGluayIsIl9yZWYkYXJpYUN1cnJlbnQiLCJhcmlhQ3VycmVudCIsIl9yZWYkYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlQ2xhc3NOYW1lIiwiYWN0aXZlU3R5bGUiLCJjbGFzc05hbWVQcm9wIiwiaXNBY3RpdmVQcm9wIiwibG9jYXRpb25Qcm9wIiwic3R5bGVQcm9wIiwiZXNjYXBlZFBhdGgiLCJjbGFzc25hbWVzIiwiam9pbkNsYXNzbmFtZXMiLCJjb21tb25qc0dsb2JhbCIsImdsb2JhbFRoaXMiLCJnbG9iYWwiLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsImhhbmRsZXIiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwiZGVmYXVsdFZhbHVlIiwiY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfUHJvdmlkZXIkY2hpbGRDb250ZXgiLCJfQ29uc3VtZXIkY29udGV4dFR5cGUiLCJjb250ZXh0UHJvcCIsIl9Db21wb25lbnQiLCJlbWl0dGVyIiwiZ2V0Q2hpbGRDb250ZXh0IiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIm5leHRQcm9wcyIsIm9sZFZhbHVlIiwieSIsIm9iamVjdCIsImlzUmVxdWlyZWQiLCJfQ29tcG9uZW50MiIsIl90aGlzMiIsImdldFZhbHVlIiwib2JzZXJ2ZWRCaXRzIiwiaXNhcnJheSIsInBhdGhUb1JlZ2V4cCIsInBhcnNlIiwidG9rZW5zVG9GdW5jdGlvbiIsInRva2Vuc1RvUmVnRXhwIiwiUEFUSF9SRUdFWFAiLCJyZXMiLCJ0b2tlbnMiLCJkZWZhdWx0RGVsaW1pdGVyIiwibSIsImVzY2FwZWQiLCJuZXh0IiwiY2FwdHVyZSIsIm1vZGlmaWVyIiwiYXN0ZXJpc2siLCJwYXJ0aWFsIiwicmVwZWF0Iiwib3B0aW9uYWwiLCJwYXR0ZXJuIiwiZXNjYXBlR3JvdXAiLCJlc2NhcGVTdHJpbmciLCJlbmNvZGVVUklDb21wb25lbnRQcmV0dHkiLCJlbmNvZGVVUkkiLCJjIiwidG9VcHBlckNhc2UiLCJtYXRjaGVzIiwiZmxhZ3MiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsIlR5cGVFcnJvciIsImoiLCJhdHRhY2hLZXlzIiwicmUiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiZ3JvdXBzIiwicmVnZXhwVG9SZWdleHAiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJyZWFjdFByb3BzUmVnZXgiLCJhcmciLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInRlc3QxIiwidGVzdDIiLCJ0ZXN0MyIsImxldHRlciIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsInN5bWJvbHMiLCJzIiwidXRpbHMiLCJwYXJhbXNTZXJpYWxpemVyIiwic2VyaWFsaXplZFBhcmFtcyIsInYiLCJ0b0lTT1N0cmluZyIsImhhc2htYXJrSW5kZXgiLCJfX0NBTkNFTF9fIiwibm9ybWFsaXplSGVhZGVyTmFtZSIsIkRFRkFVTFRfQ09OVEVOVF9UWVBFIiwic2V0Q29udGVudFR5cGVJZlVuc2V0IiwiaGVhZGVycyIsImFkYXB0ZXIiLCJkZWZhdWx0cyIsIlhNTEh0dHBSZXF1ZXN0IiwidHJhbnNmb3JtUmVxdWVzdCIsInRyYW5zZm9ybVJlc3BvbnNlIiwieHNyZkNvb2tpZU5hbWUiLCJ4c3JmSGVhZGVyTmFtZSIsIm1heENvbnRlbnRMZW5ndGgiLCJ2YWxpZGF0ZVN0YXR1cyIsInN0YXR1cyIsImNvbW1vbiIsInNldHRsZSIsImJ1aWxkVVJMIiwiYnVpbGRGdWxsUGF0aCIsInBhcnNlSGVhZGVycyIsImlzVVJMU2FtZU9yaWdpbiIsImNyZWF0ZUVycm9yIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJyZXF1ZXN0RGF0YSIsInJlcXVlc3RIZWFkZXJzIiwicmVxdWVzdCIsImF1dGgiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiQXV0aG9yaXphdGlvbiIsImJ0b2EiLCJmdWxsUGF0aCIsImJhc2VVUkwiLCJvcGVuIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInJlc3BvbnNlVVJMIiwicmVzcG9uc2VIZWFkZXJzIiwiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIiwicmVzcG9uc2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJzdGF0dXNUZXh0Iiwib25hYm9ydCIsIm9uZXJyb3IiLCJvbnRpbWVvdXQiLCJ0aW1lb3V0RXJyb3JNZXNzYWdlIiwiY29va2llcyIsInhzcmZWYWx1ZSIsIndpdGhDcmVkZW50aWFscyIsInJlYWQiLCJzZXRSZXF1ZXN0SGVhZGVyIiwib25Eb3dubG9hZFByb2dyZXNzIiwib25VcGxvYWRQcm9ncmVzcyIsInVwbG9hZCIsImNhbmNlbFRva2VuIiwicHJvbWlzZSIsInRoZW4iLCJjYW5jZWwiLCJhYm9ydCIsInNlbmQiLCJlbmhhbmNlRXJyb3IiLCJlcnJvciIsImNvbmZpZzEiLCJjb25maWcyIiwidmFsdWVGcm9tQ29uZmlnMktleXMiLCJtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cyIsImRlZmF1bHRUb0NvbmZpZzJLZXlzIiwiYXhpb3NLZXlzIiwib3RoZXJLZXlzIiwiQ2FuY2VsIiwib2JqQSIsIm9iakIiLCJjb21wYXJlQ29udGV4dCIsInJldCIsImtleXNBIiwia2V5c0IiLCJiSGFzT3duUHJvcGVydHkiLCJpZHgiLCJ2YWx1ZUEiLCJ2YWx1ZUIiLCJXIiwiWCIsImQiLCJpYSIsIloiLCJGIiwiUCIsInciLCJMIiwiamEiLCJrYSIsImFhIiwiRyIsImJhIiwibGEiLCJtYSIsIlIiLCJuYSIsImVhIiwib2EiLCJIIiwicSIsImciLCJBIiwiUyIsIkIiLCJVIiwiRCIsInoiLCJNIiwiSyIsInUiLCJyIiwiSSIsInQiLCJKIiwiZiIsInAiLCJOIiwiY2EiLCJPIiwiZGEiLCJmYSIsIlkiLCJFIiwiaGEiLCJRIiwiVCIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJtc0dyaWRSb3ciLCJtc0dyaWRSb3dTcGFuIiwibXNHcmlkQ29sdW1uIiwibXNHcmlkQ29sdW1uU3BhbiIsImZvbnRXZWlnaHQiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiV2Via2l0TGluZUNsYW1wIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwiU3ltYm9sIiwiZm9yIiwiaXRlcmF0b3IiLCJpc01vdW50ZWQiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZVNldFN0YXRlIiwicmVmcyIsInVwZGF0ZXIiLCJmb3JjZVVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiX19zZWxmIiwiX19zb3VyY2UiLCIkJHR5cGVvZiIsIl9vd25lciIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIlYiLCJkb25lIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwic3VzcGVuc2UiLCJSZWFjdEN1cnJlbnRPd25lciIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwidG9BcnJheSIsIm9ubHkiLCJGcmFnbWVudCIsIlByb2ZpbGVyIiwiUHVyZUNvbXBvbmVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiX2NvbnRleHQiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJ1c2VDYWxsYmFjayIsInVzZURlYnVnVmFsdWUiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJnZXRTaGltIiwiUmVhY3RQcm9wVHlwZXMiLCJib29sIiwibnVtYmVyIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImVsZW1lbnRUeXBlIiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiRnVuY3Rpb24iLCJhcnIiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJMYXp5IiwiUG9ydGFsIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwidHlwZU9mIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJjb25zb2xlIiwib25FcnJvciIsImN1cnJlbnRUYXJnZXQiLCJwYSIsInFhIiwicmEiLCJzYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwidGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInJlZ2lzdHJhdGlvbk5hbWUiLCJ2YSIsIndhIiwiZGVwZW5kZW5jaWVzIiwieGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIkNhIiwic3RhdGVOb2RlIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsIklhIiwiSmEiLCJLYSIsIkxhIiwiTWEiLCJOYSIsIk9hIiwiUGEiLCJRYSIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsIlVhIiwiVmEiLCJ4bGlua0hyZWYiLCJXYSIsIlhhIiwiU2EiLCJpc05hTiIsIlRhIiwiUmEiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImRiIiwiZWIiLCJmYiIsImdiIiwiaGIiLCJpYiIsImpiIiwia2IiLCJsYiIsIm1iIiwibmIiLCJwYiIsInFiIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJyZXR1cm4iLCJyYiIsInNiIiwibm9kZU5hbWUiLCJ4YiIsIl92YWx1ZVRyYWNrZXIiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJ0YiIsInliIiwiY2hlY2tlZCIsInpiIiwiZGVmYXVsdENoZWNrZWQiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJBYiIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiR2IiLCJGYiIsIkhiIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsIkliIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJOYiIsIk9iIiwiUGIiLCJRYiIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJuYW1lc3BhY2VVUkkiLCJmaXJzdENoaWxkIiwiUmIiLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJTYiIsIlRiIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVWIiLCJWYiIsIldiIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsIldlYWtNYXAiLCJjYyIsImRjIiwiYWx0ZXJuYXRlIiwiZWZmZWN0VGFnIiwiZWMiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsImZjIiwiaGMiLCJzaWJsaW5nIiwiZ2MiLCJpYyIsImpjIiwia2MiLCJsYyIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwibWMiLCJuYyIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsIm9jIiwicGMiLCJxYyIsInRvcExldmVsVHlwZSIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsInJjIiwiZXZlbnRTeXN0ZW1GbGFncyIsInNjIiwiY29udGFpbmVySW5mbyIsInRjIiwidWMiLCJ2YyIsIndjIiwieGMiLCJ5YyIsInpjIiwiQWMiLCJCYyIsIkNjIiwiRGMiLCJFYyIsIkZjIiwiR2MiLCJIYyIsIkljIiwiS2MiLCJibG9ja2VkT24iLCJjb250YWluZXIiLCJMYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsIk1jIiwiTmMiLCJQYyIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsIlFjIiwiUmMiLCJTYyIsIlRjIiwic2hpZnQiLCJVYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsIlZjIiwiV2MiLCJZYyIsIlpjIiwiJGMiLCJhZCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImV2ZW50UHJpb3JpdHkiLCJiZCIsImNkIiwiZGQiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImVkIiwiZmQiLCJnZCIsImhkIiwiT2MiLCJqZCIsImdyaWRBcmVhIiwibGluZUNsYW1wIiwia2QiLCJsZCIsIm1kIiwic2V0UHJvcGVydHkiLCJuZCIsIm1lbnVpdGVtIiwiYXJlYSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIm9kIiwicGQiLCJpcyIsInFkIiwicmQiLCJzZCIsInRkIiwiYm9keSIsInVkIiwidmQiLCJ4ZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsInlkIiwiY29udGVudEVkaXRhYmxlIiwiRGQiLCJFZCIsIkZkIiwiYXV0b0ZvY3VzIiwiR2QiLCJIZCIsIklkIiwiSmQiLCJLZCIsInByZXZpb3VzU2libGluZyIsIkxkIiwiTWQiLCJOZCIsIk9kIiwiUGQiLCJRZCIsIlJkIiwiU2QiLCJUZCIsImRpc3BhdGNoQ29uZmlnIiwiVWQiLCJfdGFyZ2V0SW5zdCIsIlZkIiwiV2QiLCJYZCIsIllkIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJjZSIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiZWUiLCJldmVudFBvb2wiLCJmZSIsImRlc3RydWN0b3IiLCJkZSIsImdldFBvb2xlZCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZ2UiLCJoZSIsImllIiwiamUiLCJrZSIsImRvY3VtZW50TW9kZSIsImxlIiwibWUiLCJuZSIsIm9lIiwiYmVmb3JlSW5wdXQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInBlIiwicWUiLCJrZXlDb2RlIiwiZGV0YWlsIiwic2UiLCJ2ZSIsImxvY2FsZSIsIndoaWNoIiwidGUiLCJjaGFyIiwidWUiLCJ3ZSIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZW1haWwiLCJtb250aCIsInJhbmdlIiwidGVsIiwidGV4dCIsInRpbWUiLCJ3ZWVrIiwieGUiLCJ5ZSIsImNoYW5nZSIsInplIiwiQWUiLCJCZSIsIkNlIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJkZXRhY2hFdmVudCIsIkhlIiwiSWUiLCJhdHRhY2hFdmVudCIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIk5lIiwidmlldyIsIk9lIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlBlIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJWZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIldlIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiWGUiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsIlllIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwic2VsZWN0IiwiZWYiLCJmZiIsImdmIiwiaGYiLCJqZiIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJhbmNob3JOb2RlIiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJrZiIsIm9uU2VsZWN0IiwibGYiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwibWYiLCJjbGlwYm9hcmREYXRhIiwibmYiLCJvZiIsImNoYXJDb2RlIiwicGYiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwicWYiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwicmYiLCJzZiIsImRhdGFUcmFuc2ZlciIsInRmIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInVmIiwidmYiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsIndmIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsInlmIiwiemYiLCJBZiIsIkJmIiwiQ2YiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJEZiIsIkVmIiwiRmYiLCJHZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiSGYiLCJJZiIsIkpmIiwiS2YiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsIkxmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiTWYiLCJ1bnN0YWJsZV9ub3ciLCJOZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiT2YiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlBmIiwiUWYiLCJSZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiU2YiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJUZiIsIlVmIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJxZyIsImZpcnN0Q29udGV4dCIsImV4cGlyYXRpb25UaW1lIiwicmciLCJzZyIsInJlc3BvbmRlcnMiLCJ0ZyIsInVnIiwidXBkYXRlUXVldWUiLCJiYXNlU3RhdGUiLCJiYXNlUXVldWUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsInZnIiwid2ciLCJzdXNwZW5zZUNvbmZpZyIsInBheWxvYWQiLCJ4ZyIsInlnIiwiemciLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJKZyIsIl9yZWFjdEludGVybmFsRmliZXIiLCJHZyIsIkhnIiwiSWciLCJLZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIkxnIiwiTWciLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiT2ciLCJQZyIsIl9zdHJpbmdSZWYiLCJRZyIsIlJnIiwibGFzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIlNnIiwiVGciLCJtb2RlIiwiVWciLCJpbXBsZW1lbnRhdGlvbiIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImVoIiwiZmgiLCJnaCIsImhoIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwiaWgiLCJyZXNwb25kZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJ2aCIsIndoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwieGgiLCJ5aCIsInpoIiwiQWgiLCJkZXN0cm95IiwiZGVwcyIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiSWgiLCJKaCIsIktoIiwiTGgiLCJNaCIsIk5oIiwicmVhZENvbnRleHQiLCJ1c2VSZXNwb25kZXIiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiU2giLCJUaCIsInBlbmRpbmdQcm9wcyIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJlaSIsImZpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiZ2kiLCJoaSIsInBlbmRpbmdDb250ZXh0IiwibmkiLCJwaSIsInFpIiwiaWkiLCJyZXRyeVRpbWUiLCJqaSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJraSIsImxpIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIm1pIiwicmkiLCJzaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsInRpIiwidWkiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiQWkiLCJzdGFjayIsIkJpIiwiV2Vha1NldCIsIkNpIiwiRmkiLCJFaSIsIkdpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJIaSIsIklpIiwiSmkiLCJmb2N1cyIsIktpIiwiTGkiLCJEaSIsIk1pIiwiTmkiLCJPaSIsIlBpIiwiUWkiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiUmkiLCJTaSIsIlRpIiwiZGlzcGxheSIsIlVpIiwiVmkiLCJXaSIsIlhpIiwiWWkiLCJaaSIsIiRpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJhaiIsImNvbXBvbmVudFN0YWNrIiwiUmoiLCJiaiIsImNlaWwiLCJjaiIsImRqIiwia2oiLCJsaiIsIm1qIiwibmoiLCJvaiIsInFqIiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsIndqIiwidGltZW91dE1zIiwieGoiLCJ5aiIsInpqIiwibGFzdEV4cGlyZWRUaW1lIiwiQWoiLCJmaXJzdFBlbmRpbmdUaW1lIiwibGFzdFBpbmdlZFRpbWUiLCJuZXh0S25vd25QZW5kaW5nTGV2ZWwiLCJjYWxsYmFja0V4cGlyYXRpb25UaW1lIiwiY2FsbGJhY2tQcmlvcml0eSIsImNhbGxiYWNrTm9kZSIsIkJqIiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJ0aW1lb3V0SGFuZGxlIiwiSmoiLCJidXN5TWluRHVyYXRpb25NcyIsImJ1c3lEZWxheU1zIiwiS2oiLCJNaiIsIk5qIiwicGluZ0NhY2hlIiwiT2oiLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwid2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJ2YiIsIlVqIiwiVmoiLCJXaiIsImhpZGRlbiIsImRlZmF1bHQiLCJvYiIsIlhqIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmoiLCJwZW5kaW5nQ2hpbGRyZW4iLCJhayIsImJrIiwiY2siLCJkayIsImVrIiwiZmsiLCJKYyIsIl9pbnRlcm5hbFJvb3QiLCJnayIsImlrIiwiaGsiLCJqayIsImtrIiwidW5tb3VudCIsImZvcm0iLCJMaiIsImxrIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIllqIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsInBlcmZvcm1hbmNlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJBeGlvcyIsIm1lcmdlQ29uZmlnIiwiY3JlYXRlSW5zdGFuY2UiLCJkZWZhdWx0Q29uZmlnIiwiYXhpb3MiLCJpbnN0YW5jZUNvbmZpZyIsIkNhbmNlbFRva2VuIiwiaXNDYW5jZWwiLCJhbGwiLCJwcm9taXNlcyIsInNwcmVhZCIsIkludGVyY2VwdG9yTWFuYWdlciIsImRpc3BhdGNoUmVxdWVzdCIsImludGVyY2VwdG9ycyIsImNoYWluIiwiaW50ZXJjZXB0b3IiLCJmdWxmaWxsZWQiLCJyZWplY3RlZCIsImdldFVyaSIsImVqZWN0IiwidHJhbnNmb3JtRGF0YSIsInRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQiLCJ0aHJvd0lmUmVxdWVzdGVkIiwicmVhc29uIiwiZm5zIiwibm9ybWFsaXplZE5hbWUiLCJpc0F4aW9zRXJyb3IiLCJ0b0pTT04iLCJkZXNjcmlwdGlvbiIsImNvbHVtbk51bWJlciIsImlzQWJzb2x1dGVVUkwiLCJjb21iaW5lVVJMcyIsInJlcXVlc3RlZFVSTCIsInJlbGF0aXZlVVJMIiwiaWdub3JlRHVwbGljYXRlT2YiLCJwYXJzZWQiLCJvcmlnaW5VUkwiLCJtc2llIiwidXJsUGFyc2luZ05vZGUiLCJyZXNvbHZlVVJMIiwicHJvdG9jb2wiLCJob3N0IiwiaG9zdG5hbWUiLCJwb3J0IiwicmVxdWVzdFVSTCIsIndyaXRlIiwiZXhwaXJlcyIsImRvbWFpbiIsInNlY3VyZSIsImNvb2tpZSIsInRvR01UU3RyaW5nIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwicmVtb3ZlIiwiZXhlY3V0b3IiLCJyZXNvbHZlUHJvbWlzZSJdLCJtYXBwaW5ncyI6InNGQUdFQSxFQUFPQyxRQUFVLEVBQVEsSyw2QkNEM0IsSUFBSUMsRUFBTyxFQUFRLElBTWZDLEVBQVdDLE9BQU9DLFVBQVVGLFNBUWhDLFNBQVNHLEVBQVFDLEdBQ2YsTUFBOEIsbUJBQXZCSixFQUFTSyxLQUFLRCxHQVN2QixTQUFTRSxFQUFZRixHQUNuQixZQUFzQixJQUFSQSxFQTRFaEIsU0FBU0csRUFBU0gsR0FDaEIsT0FBZSxPQUFSQSxHQUErQixpQkFBUkEsRUF1Q2hDLFNBQVNJLEVBQVdKLEdBQ2xCLE1BQThCLHNCQUF2QkosRUFBU0ssS0FBS0QsR0F3RXZCLFNBQVNLLEVBQVFD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T0FBTzcwRCxNQUFNLElBQUlWLE9BQU8sYUFBZXpMLEVBQU8sY0FDbkUsT0FBUW1NLEVBQVErMEQsbUJBQW1CLzBELEVBQU0sSUFBTSxNQUdqRGcxRCxPQUFRLFNBQWdCbmhFLEdBQ3RCdUMsS0FBS3ErRCxNQUFNNWdFLEVBQU0sR0FBSW8zQyxLQUFLQyxNQUFRLFNBTy9CLENBQ0x1cEIsTUFBTyxhQUNQbnJDLEtBQU0sV0FBa0IsT0FBTyxNQUMvQjByQyxPQUFRLGUsNkJDL0NoQixJQUFJdHFDLEVBQVMsRUFBUSxJQVFyQixTQUFTd25DLEVBQVkrQyxHQUNuQixHQUF3QixtQkFBYkEsRUFDVCxNQUFNLElBQUk1d0MsVUFBVSxnQ0FHdEIsSUFBSTZ3QyxFQUNKOStELEtBQUt3ekIsUUFBVSxJQUFJcEMsU0FBUSxTQUF5QkMsR0FDbER5dEMsRUFBaUJ6dEMsS0FHbkIsSUFBSXRELEVBQVEvdEIsS0FDWjYrRCxHQUFTLFNBQWdCaGtELEdBQ25Ca1QsRUFBTWd2QyxTQUtWaHZDLEVBQU1ndkMsT0FBUyxJQUFJem9DLEVBQU96WixHQUMxQmlrRCxFQUFlL3dDLEVBQU1ndkMsWUFPekJqQixFQUFZMWlFLFVBQVUwakUsaUJBQW1CLFdBQ3ZDLEdBQUk5OEQsS0FBSys4RCxPQUNQLE1BQU0vOEQsS0FBSys4RCxRQVFmakIsRUFBWWo1RCxPQUFTLFdBQ25CLElBQUk2d0IsRUFJSixNQUFPLENBQ0wzRixNQUpVLElBQUkrdEMsR0FBWSxTQUFrQnZ1QyxHQUM1Q21HLEVBQVNuRyxLQUlUbUcsT0FBUUEsSUFJWjM2QixFQUFPQyxRQUFVOGlFLEcsNkJDbENqQi9pRSxFQUFPQyxRQUFVLFNBQWdCc2pCLEdBQy9CLE9BQU8sU0FBY3NqQixHQUNuQixPQUFPdGpCLEVBQVNsYixNQUFNLEtBQU13K0IiLCJmaWxlIjoiMS5tYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBiaW5kID0gcmVxdWlyZSgnLi9oZWxwZXJzL2JpbmQnKTtcblxuLypnbG9iYWwgdG9TdHJpbmc6dHJ1ZSovXG5cbi8vIHV0aWxzIGlzIGEgbGlicmFyeSBvZiBnZW5lcmljIGhlbHBlciBmdW5jdGlvbnMgbm9uLXNwZWNpZmljIHRvIGF4aW9zXG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gQXJyYXlcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBBcnJheSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXkodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgdW5kZWZpbmVkXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHZhbHVlIGlzIHVuZGVmaW5lZCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQnVmZmVyKHZhbCkge1xuICByZXR1cm4gdmFsICE9PSBudWxsICYmICFpc1VuZGVmaW5lZCh2YWwpICYmIHZhbC5jb25zdHJ1Y3RvciAhPT0gbnVsbCAmJiAhaXNVbmRlZmluZWQodmFsLmNvbnN0cnVjdG9yKVxuICAgICYmIHR5cGVvZiB2YWwuY29uc3RydWN0b3IuaXNCdWZmZXIgPT09ICdmdW5jdGlvbicgJiYgdmFsLmNvbnN0cnVjdG9yLmlzQnVmZmVyKHZhbCk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gQXJyYXlCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXIodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEFycmF5QnVmZmVyXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGb3JtRGF0YVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEZvcm1EYXRhLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGb3JtRGF0YSh2YWwpIHtcbiAgcmV0dXJuICh0eXBlb2YgRm9ybURhdGEgIT09ICd1bmRlZmluZWQnKSAmJiAodmFsIGluc3RhbmNlb2YgRm9ybURhdGEpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJWaWV3KHZhbCkge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpICYmIChBcnJheUJ1ZmZlci5pc1ZpZXcpKSB7XG4gICAgcmVzdWx0ID0gQXJyYXlCdWZmZXIuaXNWaWV3KHZhbCk7XG4gIH0gZWxzZSB7XG4gICAgcmVzdWx0ID0gKHZhbCkgJiYgKHZhbC5idWZmZXIpICYmICh2YWwuYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBTdHJpbmdcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIFN0cmluZywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzU3RyaW5nKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ3N0cmluZyc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBOdW1iZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIE51bWJlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzTnVtYmVyKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ251bWJlcic7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gT2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gT2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3QodmFsKSB7XG4gIHJldHVybiB2YWwgIT09IG51bGwgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBEYXRlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBEYXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNEYXRlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBEYXRlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGaWxlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBGaWxlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGaWxlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGaWxlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBCbG9iXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBCbG9iLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNCbG9iKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBCbG9iXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRnVuY3Rpb24sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyZWFtXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJlYW0sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmVhbSh2YWwpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KHZhbCkgJiYgaXNGdW5jdGlvbih2YWwucGlwZSk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNVUkxTZWFyY2hQYXJhbXModmFsKSB7XG4gIHJldHVybiB0eXBlb2YgVVJMU2VhcmNoUGFyYW1zICE9PSAndW5kZWZpbmVkJyAmJiB2YWwgaW5zdGFuY2VvZiBVUkxTZWFyY2hQYXJhbXM7XG59XG5cbi8qKlxuICogVHJpbSBleGNlc3Mgd2hpdGVzcGFjZSBvZmYgdGhlIGJlZ2lubmluZyBhbmQgZW5kIG9mIGEgc3RyaW5nXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBUaGUgU3RyaW5nIHRvIHRyaW1cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBTdHJpbmcgZnJlZWQgb2YgZXhjZXNzIHdoaXRlc3BhY2VcbiAqL1xuZnVuY3Rpb24gdHJpbShzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzKi8sICcnKS5yZXBsYWNlKC9cXHMqJC8sICcnKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgd2UncmUgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnRcbiAqXG4gKiBUaGlzIGFsbG93cyBheGlvcyB0byBydW4gaW4gYSB3ZWIgd29ya2VyLCBhbmQgcmVhY3QtbmF0aXZlLlxuICogQm90aCBlbnZpcm9ubWVudHMgc3VwcG9ydCBYTUxIdHRwUmVxdWVzdCwgYnV0IG5vdCBmdWxseSBzdGFuZGFyZCBnbG9iYWxzLlxuICpcbiAqIHdlYiB3b3JrZXJzOlxuICogIHR5cGVvZiB3aW5kb3cgLT4gdW5kZWZpbmVkXG4gKiAgdHlwZW9mIGRvY3VtZW50IC0+IHVuZGVmaW5lZFxuICpcbiAqIHJlYWN0LW5hdGl2ZTpcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnUmVhY3ROYXRpdmUnXG4gKiBuYXRpdmVzY3JpcHRcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnTmF0aXZlU2NyaXB0JyBvciAnTlMnXG4gKi9cbmZ1bmN0aW9uIGlzU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgKG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdOYXRpdmVTY3JpcHQnIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdOUycpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnXG4gICk7XG59XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFuIEFycmF5IG9yIGFuIE9iamVjdCBpbnZva2luZyBhIGZ1bmN0aW9uIGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgYG9iamAgaXMgYW4gQXJyYXkgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgcGFzc2luZ1xuICogdGhlIHZhbHVlLCBpbmRleCwgYW5kIGNvbXBsZXRlIGFycmF5IGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgJ29iaicgaXMgYW4gT2JqZWN0IGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHBhc3NpbmdcbiAqIHRoZSB2YWx1ZSwga2V5LCBhbmQgY29tcGxldGUgb2JqZWN0IGZvciBlYWNoIHByb3BlcnR5LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBvYmogVGhlIG9iamVjdCB0byBpdGVyYXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgY2FsbGJhY2sgdG8gaW52b2tlIGZvciBlYWNoIGl0ZW1cbiAqL1xuZnVuY3Rpb24gZm9yRWFjaChvYmosIGZuKSB7XG4gIC8vIERvbid0IGJvdGhlciBpZiBubyB2YWx1ZSBwcm92aWRlZFxuICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRm9yY2UgYW4gYXJyYXkgaWYgbm90IGFscmVhZHkgc29tZXRoaW5nIGl0ZXJhYmxlXG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIG9iaiA9IFtvYmpdO1xuICB9XG5cbiAgaWYgKGlzQXJyYXkob2JqKSkge1xuICAgIC8vIEl0ZXJhdGUgb3ZlciBhcnJheSB2YWx1ZXNcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9iai5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgb2JqW2ldLCBpLCBvYmopO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgb2JqZWN0IGtleXNcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICBmbi5jYWxsKG51bGwsIG9ialtrZXldLCBrZXksIG9iaik7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQWNjZXB0cyB2YXJhcmdzIGV4cGVjdGluZyBlYWNoIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCwgdGhlblxuICogaW1tdXRhYmx5IG1lcmdlcyB0aGUgcHJvcGVydGllcyBvZiBlYWNoIG9iamVjdCBhbmQgcmV0dXJucyByZXN1bHQuXG4gKlxuICogV2hlbiBtdWx0aXBsZSBvYmplY3RzIGNvbnRhaW4gdGhlIHNhbWUga2V5IHRoZSBsYXRlciBvYmplY3QgaW5cbiAqIHRoZSBhcmd1bWVudHMgbGlzdCB3aWxsIHRha2UgcHJlY2VkZW5jZS5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYGpzXG4gKiB2YXIgcmVzdWx0ID0gbWVyZ2Uoe2ZvbzogMTIzfSwge2ZvbzogNDU2fSk7XG4gKiBjb25zb2xlLmxvZyhyZXN1bHQuZm9vKTsgLy8gb3V0cHV0cyA0NTZcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmoxIE9iamVjdCB0byBtZXJnZVxuICogQHJldHVybnMge09iamVjdH0gUmVzdWx0IG9mIGFsbCBtZXJnZSBwcm9wZXJ0aWVzXG4gKi9cbmZ1bmN0aW9uIG1lcmdlKC8qIG9iajEsIG9iajIsIG9iajMsIC4uLiAqLykge1xuICB2YXIgcmVzdWx0ID0ge307XG4gIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKHR5cGVvZiByZXN1bHRba2V5XSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2UocmVzdWx0W2tleV0sIHZhbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsO1xuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGZvckVhY2goYXJndW1lbnRzW2ldLCBhc3NpZ25WYWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBGdW5jdGlvbiBlcXVhbCB0byBtZXJnZSB3aXRoIHRoZSBkaWZmZXJlbmNlIGJlaW5nIHRoYXQgbm8gcmVmZXJlbmNlXG4gKiB0byBvcmlnaW5hbCBvYmplY3RzIGlzIGtlcHQuXG4gKlxuICogQHNlZSBtZXJnZVxuICogQHBhcmFtIHtPYmplY3R9IG9iajEgT2JqZWN0IHRvIG1lcmdlXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXN1bHQgb2YgYWxsIG1lcmdlIHByb3BlcnRpZXNcbiAqL1xuZnVuY3Rpb24gZGVlcE1lcmdlKC8qIG9iajEsIG9iajIsIG9iajMsIC4uLiAqLykge1xuICB2YXIgcmVzdWx0ID0ge307XG4gIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKHR5cGVvZiByZXN1bHRba2V5XSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gZGVlcE1lcmdlKHJlc3VsdFtrZXldLCB2YWwpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gZGVlcE1lcmdlKHt9LCB2YWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHRba2V5XSA9IHZhbDtcbiAgICB9XG4gIH1cblxuICBmb3IgKHZhciBpID0gMCwgbCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBmb3JFYWNoKGFyZ3VtZW50c1tpXSwgYXNzaWduVmFsdWUpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogRXh0ZW5kcyBvYmplY3QgYSBieSBtdXRhYmx5IGFkZGluZyB0byBpdCB0aGUgcHJvcGVydGllcyBvZiBvYmplY3QgYi5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gYSBUaGUgb2JqZWN0IHRvIGJlIGV4dGVuZGVkXG4gKiBAcGFyYW0ge09iamVjdH0gYiBUaGUgb2JqZWN0IHRvIGNvcHkgcHJvcGVydGllcyBmcm9tXG4gKiBAcGFyYW0ge09iamVjdH0gdGhpc0FyZyBUaGUgb2JqZWN0IHRvIGJpbmQgZnVuY3Rpb24gdG9cbiAqIEByZXR1cm4ge09iamVjdH0gVGhlIHJlc3VsdGluZyB2YWx1ZSBvZiBvYmplY3QgYVxuICovXG5mdW5jdGlvbiBleHRlbmQoYSwgYiwgdGhpc0FyZykge1xuICBmb3JFYWNoKGIsIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKHRoaXNBcmcgJiYgdHlwZW9mIHZhbCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYVtrZXldID0gYmluZCh2YWwsIHRoaXNBcmcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhW2tleV0gPSB2YWw7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGE7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc0FycmF5OiBpc0FycmF5LFxuICBpc0FycmF5QnVmZmVyOiBpc0FycmF5QnVmZmVyLFxuICBpc0J1ZmZlcjogaXNCdWZmZXIsXG4gIGlzRm9ybURhdGE6IGlzRm9ybURhdGEsXG4gIGlzQXJyYXlCdWZmZXJWaWV3OiBpc0FycmF5QnVmZmVyVmlldyxcbiAgaXNTdHJpbmc6IGlzU3RyaW5nLFxuICBpc051bWJlcjogaXNOdW1iZXIsXG4gIGlzT2JqZWN0OiBpc09iamVjdCxcbiAgaXNVbmRlZmluZWQ6IGlzVW5kZWZpbmVkLFxuICBpc0RhdGU6IGlzRGF0ZSxcbiAgaXNGaWxlOiBpc0ZpbGUsXG4gIGlzQmxvYjogaXNCbG9iLFxuICBpc0Z1bmN0aW9uOiBpc0Z1bmN0aW9uLFxuICBpc1N0cmVhbTogaXNTdHJlYW0sXG4gIGlzVVJMU2VhcmNoUGFyYW1zOiBpc1VSTFNlYXJjaFBhcmFtcyxcbiAgaXNTdGFuZGFyZEJyb3dzZXJFbnY6IGlzU3RhbmRhcmRCcm93c2VyRW52LFxuICBmb3JFYWNoOiBmb3JFYWNoLFxuICBtZXJnZTogbWVyZ2UsXG4gIGRlZXBNZXJnZTogZGVlcE1lcmdlLFxuICBleHRlbmQ6IGV4dGVuZCxcbiAgdHJpbTogdHJpbVxufTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn0iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDtcblxucHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gW10gfVxuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsImltcG9ydCB7IHR5cGVPZiwgaXNFbGVtZW50LCBpc1ZhbGlkRWxlbWVudFR5cGUgfSBmcm9tICdyZWFjdC1pcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUNvbnRleHQsIHVzZU1lbW8sIHVzZUVmZmVjdCwgdXNlUmVmLCBjcmVhdGVFbGVtZW50LCB1c2VEZWJ1Z1ZhbHVlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHNoYWxsb3dlcXVhbCBmcm9tICdzaGFsbG93ZXF1YWwnO1xuaW1wb3J0IFN0eWxpcyBmcm9tICdAZW1vdGlvbi9zdHlsaXMnO1xuaW1wb3J0IHVuaXRsZXNzIGZyb20gJ0BlbW90aW9uL3VuaXRsZXNzJztcbmltcG9ydCB2YWxpZEF0dHIgZnJvbSAnQGVtb3Rpb24vaXMtcHJvcC12YWxpZCc7XG5pbXBvcnQgaG9pc3QgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuLy8gXG52YXIgaW50ZXJsZWF2ZSA9IChmdW5jdGlvbiAoc3RyaW5ncywgaW50ZXJwb2xhdGlvbnMpIHtcbiAgdmFyIHJlc3VsdCA9IFtzdHJpbmdzWzBdXTtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gaW50ZXJwb2xhdGlvbnMubGVuZ3RoOyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICByZXN1bHQucHVzaChpbnRlcnBvbGF0aW9uc1tpXSwgc3RyaW5nc1tpICsgMV0pO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn0pO1xuXG4vLyBcbnZhciBpc1BsYWluT2JqZWN0ID0gKGZ1bmN0aW9uICh4KSB7XG4gIHJldHVybiB4ICE9PSBudWxsICYmIHR5cGVvZiB4ID09PSAnb2JqZWN0JyAmJiAoeC50b1N0cmluZyA/IHgudG9TdHJpbmcoKSA6IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4KSkgPT09ICdbb2JqZWN0IE9iamVjdF0nICYmICF0eXBlT2YoeCk7XG59KTtcblxuLy8gXG52YXIgRU1QVFlfQVJSQVkgPSBPYmplY3QuZnJlZXplKFtdKTtcbnZhciBFTVBUWV9PQkpFQ1QgPSBPYmplY3QuZnJlZXplKHt9KTtcblxuLy8gXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHRlc3QpIHtcbiAgcmV0dXJuIHR5cGVvZiB0ZXN0ID09PSAnZnVuY3Rpb24nO1xufVxuXG4vLyBcbmZ1bmN0aW9uIGdldENvbXBvbmVudE5hbWUodGFyZ2V0KSB7XG4gIHJldHVybiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyA/IHR5cGVvZiB0YXJnZXQgPT09ICdzdHJpbmcnICYmIHRhcmdldCA6IGZhbHNlKSB8fCAvLyAkRmxvd0ZpeE1lXG4gIHRhcmdldC5kaXNwbGF5TmFtZSB8fCAvLyAkRmxvd0ZpeE1lXG4gIHRhcmdldC5uYW1lIHx8ICdDb21wb25lbnQnO1xufVxuXG4vLyBcbmZ1bmN0aW9uIGlzU3RhdGVsZXNzRnVuY3Rpb24odGVzdCkge1xuICByZXR1cm4gdHlwZW9mIHRlc3QgPT09ICdmdW5jdGlvbicgJiYgISh0ZXN0LnByb3RvdHlwZSAmJiB0ZXN0LnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KTtcbn1cblxuLy8gXG5mdW5jdGlvbiBpc1N0eWxlZENvbXBvbmVudCh0YXJnZXQpIHtcbiAgcmV0dXJuIHRhcmdldCAmJiB0eXBlb2YgdGFyZ2V0LnN0eWxlZENvbXBvbmVudElkID09PSAnc3RyaW5nJztcbn1cblxuLy8gXG52YXIgU0NfQVRUUiA9IHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiAocHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0FUVFIgfHwgcHJvY2Vzcy5lbnYuU0NfQVRUUikgfHwgJ2RhdGEtc3R5bGVkJztcbnZhciBTQ19BVFRSX0FDVElWRSA9ICdhY3RpdmUnO1xudmFyIFNDX0FUVFJfVkVSU0lPTiA9ICdkYXRhLXN0eWxlZC12ZXJzaW9uJztcbnZhciBTQ19WRVJTSU9OID0gXCI1LjEuMVwiO1xudmFyIFNQTElUVEVSID0gJy8qIXNjKi9cXG4nO1xudmFyIElTX0JST1dTRVIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiAnSFRNTEVsZW1lbnQnIGluIHdpbmRvdztcbnZhciBESVNBQkxFX1NQRUVEWSA9IHR5cGVvZiBTQ19ESVNBQkxFX1NQRUVEWSA9PT0gJ2Jvb2xlYW4nICYmIFNDX0RJU0FCTEVfU1BFRURZIHx8IHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiAocHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZIHx8IHByb2Nlc3MuZW52LlNDX0RJU0FCTEVfU1BFRURZKSB8fCBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nOyAvLyBTaGFyZWQgZW1wdHkgZXhlY3V0aW9uIGNvbnRleHQgd2hlbiBnZW5lcmF0aW5nIHN0YXRpYyBzdHlsZXNcblxudmFyIFNUQVRJQ19FWEVDVVRJT05fQ09OVEVYVCA9IHt9O1xuXG4vLyBcblxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlLCBuby11bmRlZiAqL1xudmFyIGdldE5vbmNlID0gZnVuY3Rpb24gZ2V0Tm9uY2UoKSB7XG4gIHJldHVybiB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xufTtcblxudmFyIGVycm9yTWFwID0ge1xuICBcIjFcIjogXCJDYW5ub3QgY3JlYXRlIHN0eWxlZC1jb21wb25lbnQgZm9yIGNvbXBvbmVudDogJXMuXFxuXFxuXCIsXG4gIFwiMlwiOiBcIkNhbid0IGNvbGxlY3Qgc3R5bGVzIG9uY2UgeW91J3ZlIGNvbnN1bWVkIGEgYFNlcnZlclN0eWxlU2hlZXRgJ3Mgc3R5bGVzISBgU2VydmVyU3R5bGVTaGVldGAgaXMgYSBvbmUgb2ZmIGluc3RhbmNlIGZvciBlYWNoIHNlcnZlci1zaWRlIHJlbmRlciBjeWNsZS5cXG5cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJldXNlIGl0IGFjcm9zcyByZW5kZXJzP1xcbi0gQXJlIHlvdSBhY2NpZGVudGFsbHkgY2FsbGluZyBjb2xsZWN0U3R5bGVzIHR3aWNlP1xcblxcblwiLFxuICBcIjNcIjogXCJTdHJlYW1pbmcgU1NSIGlzIG9ubHkgc3VwcG9ydGVkIGluIGEgTm9kZS5qcyBlbnZpcm9ubWVudDsgUGxlYXNlIGRvIG5vdCB0cnkgdG8gY2FsbCB0aGlzIG1ldGhvZCBpbiB0aGUgYnJvd3Nlci5cXG5cXG5cIixcbiAgXCI0XCI6IFwiVGhlIGBTdHlsZVNoZWV0TWFuYWdlcmAgZXhwZWN0cyBhIHZhbGlkIHRhcmdldCBvciBzaGVldCBwcm9wIVxcblxcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBjbGllbnQgYW5kIGlzIHlvdXIgdGFyZ2V0IGZhbHN5P1xcbi0gRG9lcyB0aGlzIGVycm9yIG9jY3VyIG9uIHRoZSBzZXJ2ZXIgYW5kIGlzIHRoZSBzaGVldCBmYWxzeT9cXG5cXG5cIixcbiAgXCI1XCI6IFwiVGhlIGNsb25lIG1ldGhvZCBjYW5ub3QgYmUgdXNlZCBvbiB0aGUgY2xpZW50IVxcblxcbi0gQXJlIHlvdSBydW5uaW5nIGluIGEgY2xpZW50LWxpa2UgZW52aXJvbm1lbnQgb24gdGhlIHNlcnZlcj9cXG4tIEFyZSB5b3UgdHJ5aW5nIHRvIHJ1biBTU1Igb24gdGhlIGNsaWVudD9cXG5cXG5cIixcbiAgXCI2XCI6IFwiVHJ5aW5nIHRvIGluc2VydCBhIG5ldyBzdHlsZSB0YWcsIGJ1dCB0aGUgZ2l2ZW4gTm9kZSBpcyB1bm1vdW50ZWQhXFxuXFxuLSBBcmUgeW91IHVzaW5nIGEgY3VzdG9tIHRhcmdldCB0aGF0IGlzbid0IG1vdW50ZWQ/XFxuLSBEb2VzIHlvdXIgZG9jdW1lbnQgbm90IGhhdmUgYSB2YWxpZCBoZWFkIGVsZW1lbnQ/XFxuLSBIYXZlIHlvdSBhY2NpZGVudGFsbHkgcmVtb3ZlZCBhIHN0eWxlIHRhZyBtYW51YWxseT9cXG5cXG5cIixcbiAgXCI3XCI6IFwiVGhlbWVQcm92aWRlcjogUGxlYXNlIHJldHVybiBhbiBvYmplY3QgZnJvbSB5b3VyIFxcXCJ0aGVtZVxcXCIgcHJvcCBmdW5jdGlvbiwgZS5nLlxcblxcbmBgYGpzXFxudGhlbWU9eygpID0+ICh7fSl9XFxuYGBgXFxuXFxuXCIsXG4gIFwiOFwiOiBcIlRoZW1lUHJvdmlkZXI6IFBsZWFzZSBtYWtlIHlvdXIgXFxcInRoZW1lXFxcIiBwcm9wIGFuIG9iamVjdC5cXG5cXG5cIixcbiAgXCI5XCI6IFwiTWlzc2luZyBkb2N1bWVudCBgPGhlYWQ+YFxcblxcblwiLFxuICBcIjEwXCI6IFwiQ2Fubm90IGZpbmQgYSBTdHlsZVNoZWV0IGluc3RhbmNlLiBVc3VhbGx5IHRoaXMgaGFwcGVucyBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgY29waWVzIG9mIHN0eWxlZC1jb21wb25lbnRzIGxvYWRlZCBhdCBvbmNlLiBDaGVjayBvdXQgdGhpcyBpc3N1ZSBmb3IgaG93IHRvIHRyb3VibGVzaG9vdCBhbmQgZml4IHRoZSBjb21tb24gY2FzZXMgd2hlcmUgdGhpcyBzaXR1YXRpb24gY2FuIGhhcHBlbjogaHR0cHM6Ly9naXRodWIuY29tL3N0eWxlZC1jb21wb25lbnRzL3N0eWxlZC1jb21wb25lbnRzL2lzc3Vlcy8xOTQxI2lzc3VlY29tbWVudC00MTc4NjIwMjFcXG5cXG5cIixcbiAgXCIxMVwiOiBcIl9UaGlzIGVycm9yIHdhcyByZXBsYWNlZCB3aXRoIGEgZGV2LXRpbWUgd2FybmluZywgaXQgd2lsbCBiZSBkZWxldGVkIGZvciB2NCBmaW5hbC5fIFtjcmVhdGVHbG9iYWxTdHlsZV0gcmVjZWl2ZWQgY2hpbGRyZW4gd2hpY2ggd2lsbCBub3QgYmUgcmVuZGVyZWQuIFBsZWFzZSB1c2UgdGhlIGNvbXBvbmVudCB3aXRob3V0IHBhc3NpbmcgY2hpbGRyZW4gZWxlbWVudHMuXFxuXFxuXCIsXG4gIFwiMTJcIjogXCJJdCBzZWVtcyB5b3UgYXJlIGludGVycG9sYXRpbmcgYSBrZXlmcmFtZSBkZWNsYXJhdGlvbiAoJXMpIGludG8gYW4gdW50YWdnZWQgc3RyaW5nLiBUaGlzIHdhcyBzdXBwb3J0ZWQgaW4gc3R5bGVkLWNvbXBvbmVudHMgdjMsIGJ1dCBpcyBub3QgbG9uZ2VyIHN1cHBvcnRlZCBpbiB2NCBhcyBrZXlmcmFtZXMgYXJlIG5vdyBpbmplY3RlZCBvbi1kZW1hbmQuIFBsZWFzZSB3cmFwIHlvdXIgc3RyaW5nIGluIHRoZSBjc3NcXFxcYFxcXFxgIGhlbHBlciB3aGljaCBlbnN1cmVzIHRoZSBzdHlsZXMgYXJlIGluamVjdGVkIGNvcnJlY3RseS4gU2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FwaSNjc3NcXG5cXG5cIixcbiAgXCIxM1wiOiBcIiVzIGlzIG5vdCBhIHN0eWxlZCBjb21wb25lbnQgYW5kIGNhbm5vdCBiZSByZWZlcnJlZCB0byB2aWEgY29tcG9uZW50IHNlbGVjdG9yLiBTZWUgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYWR2YW5jZWQjcmVmZXJyaW5nLXRvLW90aGVyLWNvbXBvbmVudHMgZm9yIG1vcmUgZGV0YWlscy5cXG5cXG5cIixcbiAgXCIxNFwiOiBcIlRoZW1lUHJvdmlkZXI6IFxcXCJ0aGVtZVxcXCIgcHJvcCBpcyByZXF1aXJlZC5cXG5cXG5cIixcbiAgXCIxNVwiOiBcIkEgc3R5bGlzIHBsdWdpbiBoYXMgYmVlbiBzdXBwbGllZCB0aGF0IGlzIG5vdCBuYW1lZC4gV2UgbmVlZCBhIG5hbWUgZm9yIGVhY2ggcGx1Z2luIHRvIGJlIGFibGUgdG8gcHJldmVudCBzdHlsaW5nIGNvbGxpc2lvbnMgYmV0d2VlbiBkaWZmZXJlbnQgc3R5bGlzIGNvbmZpZ3VyYXRpb25zIHdpdGhpbiB0aGUgc2FtZSBhcHAuIEJlZm9yZSB5b3UgcGFzcyB5b3VyIHBsdWdpbiB0byBgPFN0eWxlU2hlZXRNYW5hZ2VyIHN0eWxpc1BsdWdpbnM9e1tdfT5gLCBwbGVhc2UgbWFrZSBzdXJlIGVhY2ggcGx1Z2luIGlzIHVuaXF1ZWx5LW5hbWVkLCBlLmcuXFxuXFxuYGBganNcXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoaW1wb3J0ZWRQbHVnaW4sICduYW1lJywgeyB2YWx1ZTogJ3NvbWUtdW5pcXVlLW5hbWUnIH0pO1xcbmBgYFxcblxcblwiLFxuICBcIjE2XCI6IFwiUmVhY2hlZCB0aGUgbGltaXQgb2YgaG93IG1hbnkgc3R5bGVkIGNvbXBvbmVudHMgbWF5IGJlIGNyZWF0ZWQgYXQgZ3JvdXAgJXMuXFxuWW91IG1heSBvbmx5IGNyZWF0ZSB1cCB0byAxLDA3Myw3NDEsODI0IGNvbXBvbmVudHMuIElmIHlvdSdyZSBjcmVhdGluZyBjb21wb25lbnRzIGR5bmFtaWNhbGx5LFxcbmFzIGZvciBpbnN0YW5jZSBpbiB5b3VyIHJlbmRlciBtZXRob2QgdGhlbiB5b3UgbWF5IGJlIHJ1bm5pbmcgaW50byB0aGlzIGxpbWl0YXRpb24uXFxuXFxuXCIsXG4gIFwiMTdcIjogXCJDU1NTdHlsZVNoZWV0IGNvdWxkIG5vdCBiZSBmb3VuZCBvbiBIVE1MU3R5bGVFbGVtZW50LlxcbkhhcyBzdHlsZWQtY29tcG9uZW50cycgc3R5bGUgdGFnIGJlZW4gdW5tb3VudGVkIG9yIGFsdGVyZWQgYnkgYW5vdGhlciBzY3JpcHQ/XFxuXCJcbn07XG5cbi8vIFxudmFyIEVSUk9SUyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBlcnJvck1hcCA6IHt9O1xuLyoqXG4gKiBzdXBlciBiYXNpYyB2ZXJzaW9uIG9mIHNwcmludGZcbiAqL1xuXG5mdW5jdGlvbiBmb3JtYXQoKSB7XG4gIHZhciBhID0gYXJndW1lbnRzLmxlbmd0aCA8PSAwID8gdW5kZWZpbmVkIDogYXJndW1lbnRzWzBdO1xuICB2YXIgYiA9IFtdO1xuXG4gIGZvciAodmFyIGMgPSAxLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoOyBjIDwgbGVuOyBjICs9IDEpIHtcbiAgICBiLnB1c2goYyA8IDAgfHwgYXJndW1lbnRzLmxlbmd0aCA8PSBjID8gdW5kZWZpbmVkIDogYXJndW1lbnRzW2NdKTtcbiAgfVxuXG4gIGIuZm9yRWFjaChmdW5jdGlvbiAoZCkge1xuICAgIGEgPSBhLnJlcGxhY2UoLyVbYS16XS8sIGQpO1xuICB9KTtcbiAgcmV0dXJuIGE7XG59XG4vKipcbiAqIENyZWF0ZSBhbiBlcnJvciBmaWxlIG91dCBvZiBlcnJvcnMubWQgZm9yIGRldmVsb3BtZW50IGFuZCBhIHNpbXBsZSB3ZWIgbGluayB0byB0aGUgZnVsbCBlcnJvcnNcbiAqIGluIHByb2R1Y3Rpb24gbW9kZS5cbiAqL1xuXG5cbmZ1bmN0aW9uIHRocm93U3R5bGVkQ29tcG9uZW50c0Vycm9yKGNvZGUpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGludGVycG9sYXRpb25zID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBpbnRlcnBvbGF0aW9uc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkFuIGVycm9yIG9jY3VycmVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3N0eWxlZC1jb21wb25lbnRzL3N0eWxlZC1jb21wb25lbnRzL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3N0eWxlZC1jb21wb25lbnRzL3NyYy91dGlscy9lcnJvcnMubWQjXCIgKyBjb2RlICsgXCIgZm9yIG1vcmUgaW5mb3JtYXRpb24uXCIgKyAoaW50ZXJwb2xhdGlvbnMubGVuZ3RoID4gMCA/IFwiIEFkZGl0aW9uYWwgYXJndW1lbnRzOiBcIiArIGludGVycG9sYXRpb25zLmpvaW4oJywgJykgOiAnJykpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXQuYXBwbHkodm9pZCAwLCBbRVJST1JTW2NvZGVdXS5jb25jYXQoaW50ZXJwb2xhdGlvbnMpKS50cmltKCkpO1xuICB9XG59XG5cbi8vIFxudmFyIEVMRU1FTlRfVFlQRSA9IDE7XG4vKiBOb2RlLkVMRU1FTlRfVFlQRSAqL1xuXG4vKiogRmluZCBsYXN0IHN0eWxlIGVsZW1lbnQgaWYgYW55IGluc2lkZSB0YXJnZXQgKi9cblxudmFyIGZpbmRMYXN0U3R5bGVUYWcgPSBmdW5jdGlvbiBmaW5kTGFzdFN0eWxlVGFnKHRhcmdldCkge1xuICB2YXIgY2hpbGROb2RlcyA9IHRhcmdldC5jaGlsZE5vZGVzO1xuXG4gIGZvciAodmFyIGkgPSBjaGlsZE5vZGVzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgY2hpbGQgPSBjaGlsZE5vZGVzW2ldO1xuXG4gICAgaWYgKGNoaWxkICYmIGNoaWxkLm5vZGVUeXBlID09PSBFTEVNRU5UX1RZUEUgJiYgY2hpbGQuaGFzQXR0cmlidXRlKFNDX0FUVFIpKSB7XG4gICAgICByZXR1cm4gY2hpbGQ7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn07XG4vKiogQ3JlYXRlIGEgc3R5bGUgZWxlbWVudCBpbnNpZGUgYHRhcmdldGAgb3IgPGhlYWQ+IGFmdGVyIHRoZSBsYXN0ICovXG5cblxudmFyIG1ha2VTdHlsZVRhZyA9IGZ1bmN0aW9uIG1ha2VTdHlsZVRhZyh0YXJnZXQpIHtcbiAgdmFyIGhlYWQgPSBkb2N1bWVudC5oZWFkO1xuICB2YXIgcGFyZW50ID0gdGFyZ2V0IHx8IGhlYWQ7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHZhciBwcmV2U3R5bGUgPSBmaW5kTGFzdFN0eWxlVGFnKHBhcmVudCk7XG4gIHZhciBuZXh0U2libGluZyA9IHByZXZTdHlsZSAhPT0gdW5kZWZpbmVkID8gcHJldlN0eWxlLm5leHRTaWJsaW5nIDogbnVsbDtcbiAgc3R5bGUuc2V0QXR0cmlidXRlKFNDX0FUVFIsIFNDX0FUVFJfQUNUSVZFKTtcbiAgc3R5bGUuc2V0QXR0cmlidXRlKFNDX0FUVFJfVkVSU0lPTiwgU0NfVkVSU0lPTik7XG4gIHZhciBub25jZSA9IGdldE5vbmNlKCk7XG4gIGlmIChub25jZSkgc3R5bGUuc2V0QXR0cmlidXRlKCdub25jZScsIG5vbmNlKTtcbiAgcGFyZW50Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuICByZXR1cm4gc3R5bGU7XG59O1xuLyoqIEdldCB0aGUgQ1NTU3R5bGVTaGVldCBpbnN0YW5jZSBmb3IgYSBnaXZlbiBzdHlsZSBlbGVtZW50ICovXG5cbnZhciBnZXRTaGVldCA9IGZ1bmN0aW9uIGdldFNoZWV0KHRhZykge1xuICBpZiAodGFnLnNoZWV0KSB7XG4gICAgcmV0dXJuIHRhZy5zaGVldDtcbiAgfSAvLyBBdm9pZCBGaXJlZm94IHF1aXJrIHdoZXJlIHRoZSBzdHlsZSBlbGVtZW50IG1pZ2h0IG5vdCBoYXZlIGEgc2hlZXQgcHJvcGVydHlcblxuXG4gIHZhciBfZG9jdW1lbnQgPSBkb2N1bWVudCxcbiAgICAgIHN0eWxlU2hlZXRzID0gX2RvY3VtZW50LnN0eWxlU2hlZXRzO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gc3R5bGVTaGVldHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgdmFyIHNoZWV0ID0gc3R5bGVTaGVldHNbaV07XG5cbiAgICBpZiAoc2hlZXQub3duZXJOb2RlID09PSB0YWcpIHtcbiAgICAgIHJldHVybiBzaGVldDtcbiAgICB9XG4gIH1cblxuICB0aHJvd1N0eWxlZENvbXBvbmVudHNFcnJvcigxNyk7XG4gIHJldHVybiB1bmRlZmluZWQ7XG59O1xuXG4vLyBcbi8qKiBDcmVhdGUgYSBDU1NTdHlsZVNoZWV0LWxpa2UgdGFnIGRlcGVuZGluZyBvbiB0aGUgZW52aXJvbm1lbnQgKi9cblxudmFyIG1ha2VUYWcgPSBmdW5jdGlvbiBtYWtlVGFnKF9yZWYpIHtcbiAgdmFyIGlzU2VydmVyID0gX3JlZi5pc1NlcnZlcixcbiAgICAgIHVzZUNTU09NSW5qZWN0aW9uID0gX3JlZi51c2VDU1NPTUluamVjdGlvbixcbiAgICAgIHRhcmdldCA9IF9yZWYudGFyZ2V0O1xuXG4gIGlmIChpc1NlcnZlcikge1xuICAgIHJldHVybiBuZXcgVmlydHVhbFRhZyh0YXJnZXQpO1xuICB9IGVsc2UgaWYgKHVzZUNTU09NSW5qZWN0aW9uKSB7XG4gICAgcmV0dXJuIG5ldyBDU1NPTVRhZyh0YXJnZXQpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBuZXcgVGV4dFRhZyh0YXJnZXQpO1xuICB9XG59O1xudmFyIENTU09NVGFnID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQ1NTT01UYWcodGFyZ2V0KSB7XG4gICAgdmFyIGVsZW1lbnQgPSB0aGlzLmVsZW1lbnQgPSBtYWtlU3R5bGVUYWcodGFyZ2V0KTsgLy8gQXZvaWQgRWRnZSBidWcgd2hlcmUgZW1wdHkgc3R5bGUgZWxlbWVudHMgZG9uJ3QgY3JlYXRlIHNoZWV0c1xuXG4gICAgZWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJykpO1xuICAgIHRoaXMuc2hlZXQgPSBnZXRTaGVldChlbGVtZW50KTtcbiAgICB0aGlzLmxlbmd0aCA9IDA7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gQ1NTT01UYWcucHJvdG90eXBlO1xuXG4gIF9wcm90by5pbnNlcnRSdWxlID0gZnVuY3Rpb24gaW5zZXJ0UnVsZShpbmRleCwgcnVsZSkge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLnNoZWV0Lmluc2VydFJ1bGUocnVsZSwgaW5kZXgpO1xuICAgICAgdGhpcy5sZW5ndGgrKztcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKF9lcnJvcikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uZGVsZXRlUnVsZSA9IGZ1bmN0aW9uIGRlbGV0ZVJ1bGUoaW5kZXgpIHtcbiAgICB0aGlzLnNoZWV0LmRlbGV0ZVJ1bGUoaW5kZXgpO1xuICAgIHRoaXMubGVuZ3RoLS07XG4gIH07XG5cbiAgX3Byb3RvLmdldFJ1bGUgPSBmdW5jdGlvbiBnZXRSdWxlKGluZGV4KSB7XG4gICAgdmFyIHJ1bGUgPSB0aGlzLnNoZWV0LmNzc1J1bGVzW2luZGV4XTsgLy8gQXZvaWQgSUUxMSBxdWlyayB3aGVyZSBjc3NUZXh0IGlzIGluYWNjZXNzaWJsZSBvbiBzb21lIGludmFsaWQgcnVsZXNcblxuICAgIGlmIChydWxlICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIHJ1bGUuY3NzVGV4dCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybiBydWxlLmNzc1RleHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIENTU09NVGFnO1xufSgpO1xuLyoqIEEgVGFnIHRoYXQgZW11bGF0ZXMgdGhlIENTU1N0eWxlU2hlZXQgQVBJIGJ1dCB1c2VzIHRleHQgbm9kZXMgKi9cblxudmFyIFRleHRUYWcgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBUZXh0VGFnKHRhcmdldCkge1xuICAgIHZhciBlbGVtZW50ID0gdGhpcy5lbGVtZW50ID0gbWFrZVN0eWxlVGFnKHRhcmdldCk7XG4gICAgdGhpcy5ub2RlcyA9IGVsZW1lbnQuY2hpbGROb2RlcztcbiAgICB0aGlzLmxlbmd0aCA9IDA7XG4gIH1cblxuICB2YXIgX3Byb3RvMiA9IFRleHRUYWcucHJvdG90eXBlO1xuXG4gIF9wcm90bzIuaW5zZXJ0UnVsZSA9IGZ1bmN0aW9uIGluc2VydFJ1bGUoaW5kZXgsIHJ1bGUpIHtcbiAgICBpZiAoaW5kZXggPD0gdGhpcy5sZW5ndGggJiYgaW5kZXggPj0gMCkge1xuICAgICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShydWxlKTtcbiAgICAgIHZhciByZWZOb2RlID0gdGhpcy5ub2Rlc1tpbmRleF07XG4gICAgICB0aGlzLmVsZW1lbnQuaW5zZXJ0QmVmb3JlKG5vZGUsIHJlZk5vZGUgfHwgbnVsbCk7XG4gICAgICB0aGlzLmxlbmd0aCsrO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvMi5kZWxldGVSdWxlID0gZnVuY3Rpb24gZGVsZXRlUnVsZShpbmRleCkge1xuICAgIHRoaXMuZWxlbWVudC5yZW1vdmVDaGlsZCh0aGlzLm5vZGVzW2luZGV4XSk7XG4gICAgdGhpcy5sZW5ndGgtLTtcbiAgfTtcblxuICBfcHJvdG8yLmdldFJ1bGUgPSBmdW5jdGlvbiBnZXRSdWxlKGluZGV4KSB7XG4gICAgaWYgKGluZGV4IDwgdGhpcy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB0aGlzLm5vZGVzW2luZGV4XS50ZXh0Q29udGVudDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gVGV4dFRhZztcbn0oKTtcbi8qKiBBIGNvbXBsZXRlbHkgdmlydHVhbCAoc2VydmVyLXNpZGUpIFRhZyB0aGF0IGRvZXNuJ3QgbWFuaXB1bGF0ZSB0aGUgRE9NICovXG5cbnZhciBWaXJ0dWFsVGFnID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gVmlydHVhbFRhZyhfdGFyZ2V0KSB7XG4gICAgdGhpcy5ydWxlcyA9IFtdO1xuICAgIHRoaXMubGVuZ3RoID0gMDtcbiAgfVxuXG4gIHZhciBfcHJvdG8zID0gVmlydHVhbFRhZy5wcm90b3R5cGU7XG5cbiAgX3Byb3RvMy5pbnNlcnRSdWxlID0gZnVuY3Rpb24gaW5zZXJ0UnVsZShpbmRleCwgcnVsZSkge1xuICAgIGlmIChpbmRleCA8PSB0aGlzLmxlbmd0aCkge1xuICAgICAgdGhpcy5ydWxlcy5zcGxpY2UoaW5kZXgsIDAsIHJ1bGUpO1xuICAgICAgdGhpcy5sZW5ndGgrKztcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90bzMuZGVsZXRlUnVsZSA9IGZ1bmN0aW9uIGRlbGV0ZVJ1bGUoaW5kZXgpIHtcbiAgICB0aGlzLnJ1bGVzLnNwbGljZShpbmRleCwgMSk7XG4gICAgdGhpcy5sZW5ndGgtLTtcbiAgfTtcblxuICBfcHJvdG8zLmdldFJ1bGUgPSBmdW5jdGlvbiBnZXRSdWxlKGluZGV4KSB7XG4gICAgaWYgKGluZGV4IDwgdGhpcy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB0aGlzLnJ1bGVzW2luZGV4XTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gVmlydHVhbFRhZztcbn0oKTtcblxuLy8gXG4vKiogQ3JlYXRlIGEgR3JvdXBlZFRhZyB3aXRoIGFuIHVuZGVybHlpbmcgVGFnIGltcGxlbWVudGF0aW9uICovXG5cbnZhciBtYWtlR3JvdXBlZFRhZyA9IGZ1bmN0aW9uIG1ha2VHcm91cGVkVGFnKHRhZykge1xuICByZXR1cm4gbmV3IERlZmF1bHRHcm91cGVkVGFnKHRhZyk7XG59O1xudmFyIEJBU0VfU0laRSA9IDEgPDwgOTtcblxudmFyIERlZmF1bHRHcm91cGVkVGFnID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRGVmYXVsdEdyb3VwZWRUYWcodGFnKSB7XG4gICAgdGhpcy5ncm91cFNpemVzID0gbmV3IFVpbnQzMkFycmF5KEJBU0VfU0laRSk7XG4gICAgdGhpcy5sZW5ndGggPSBCQVNFX1NJWkU7XG4gICAgdGhpcy50YWcgPSB0YWc7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gRGVmYXVsdEdyb3VwZWRUYWcucHJvdG90eXBlO1xuXG4gIF9wcm90by5pbmRleE9mR3JvdXAgPSBmdW5jdGlvbiBpbmRleE9mR3JvdXAoZ3JvdXApIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cDsgaSsrKSB7XG4gICAgICBpbmRleCArPSB0aGlzLmdyb3VwU2l6ZXNbaV07XG4gICAgfVxuXG4gICAgcmV0dXJuIGluZGV4O1xuICB9O1xuXG4gIF9wcm90by5pbnNlcnRSdWxlcyA9IGZ1bmN0aW9uIGluc2VydFJ1bGVzKGdyb3VwLCBydWxlcykge1xuICAgIGlmIChncm91cCA+PSB0aGlzLmdyb3VwU2l6ZXMubGVuZ3RoKSB7XG4gICAgICB2YXIgb2xkQnVmZmVyID0gdGhpcy5ncm91cFNpemVzO1xuICAgICAgdmFyIG9sZFNpemUgPSBvbGRCdWZmZXIubGVuZ3RoO1xuICAgICAgdmFyIG5ld1NpemUgPSBvbGRTaXplO1xuXG4gICAgICB3aGlsZSAoZ3JvdXAgPj0gbmV3U2l6ZSkge1xuICAgICAgICBuZXdTaXplIDw8PSAxO1xuXG4gICAgICAgIGlmIChuZXdTaXplIDwgMCkge1xuICAgICAgICAgIHRocm93U3R5bGVkQ29tcG9uZW50c0Vycm9yKDE2LCBcIlwiICsgZ3JvdXApO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZ3JvdXBTaXplcyA9IG5ldyBVaW50MzJBcnJheShuZXdTaXplKTtcbiAgICAgIHRoaXMuZ3JvdXBTaXplcy5zZXQob2xkQnVmZmVyKTtcbiAgICAgIHRoaXMubGVuZ3RoID0gbmV3U2l6ZTtcblxuICAgICAgZm9yICh2YXIgaSA9IG9sZFNpemU7IGkgPCBuZXdTaXplOyBpKyspIHtcbiAgICAgICAgdGhpcy5ncm91cFNpemVzW2ldID0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcnVsZUluZGV4ID0gdGhpcy5pbmRleE9mR3JvdXAoZ3JvdXAgKyAxKTtcblxuICAgIGZvciAodmFyIF9pID0gMCwgbCA9IHJ1bGVzLmxlbmd0aDsgX2kgPCBsOyBfaSsrKSB7XG4gICAgICBpZiAodGhpcy50YWcuaW5zZXJ0UnVsZShydWxlSW5kZXgsIHJ1bGVzW19pXSkpIHtcbiAgICAgICAgdGhpcy5ncm91cFNpemVzW2dyb3VwXSsrO1xuICAgICAgICBydWxlSW5kZXgrKztcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNsZWFyR3JvdXAgPSBmdW5jdGlvbiBjbGVhckdyb3VwKGdyb3VwKSB7XG4gICAgaWYgKGdyb3VwIDwgdGhpcy5sZW5ndGgpIHtcbiAgICAgIHZhciBsZW5ndGggPSB0aGlzLmdyb3VwU2l6ZXNbZ3JvdXBdO1xuICAgICAgdmFyIHN0YXJ0SW5kZXggPSB0aGlzLmluZGV4T2ZHcm91cChncm91cCk7XG4gICAgICB2YXIgZW5kSW5kZXggPSBzdGFydEluZGV4ICsgbGVuZ3RoO1xuICAgICAgdGhpcy5ncm91cFNpemVzW2dyb3VwXSA9IDA7XG5cbiAgICAgIGZvciAodmFyIGkgPSBzdGFydEluZGV4OyBpIDwgZW5kSW5kZXg7IGkrKykge1xuICAgICAgICB0aGlzLnRhZy5kZWxldGVSdWxlKHN0YXJ0SW5kZXgpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uZ2V0R3JvdXAgPSBmdW5jdGlvbiBnZXRHcm91cChncm91cCkge1xuICAgIHZhciBjc3MgPSAnJztcblxuICAgIGlmIChncm91cCA+PSB0aGlzLmxlbmd0aCB8fCB0aGlzLmdyb3VwU2l6ZXNbZ3JvdXBdID09PSAwKSB7XG4gICAgICByZXR1cm4gY3NzO1xuICAgIH1cblxuICAgIHZhciBsZW5ndGggPSB0aGlzLmdyb3VwU2l6ZXNbZ3JvdXBdO1xuICAgIHZhciBzdGFydEluZGV4ID0gdGhpcy5pbmRleE9mR3JvdXAoZ3JvdXApO1xuICAgIHZhciBlbmRJbmRleCA9IHN0YXJ0SW5kZXggKyBsZW5ndGg7XG5cbiAgICBmb3IgKHZhciBpID0gc3RhcnRJbmRleDsgaSA8IGVuZEluZGV4OyBpKyspIHtcbiAgICAgIGNzcyArPSBcIlwiICsgdGhpcy50YWcuZ2V0UnVsZShpKSArIFNQTElUVEVSO1xuICAgIH1cblxuICAgIHJldHVybiBjc3M7XG4gIH07XG5cbiAgcmV0dXJuIERlZmF1bHRHcm91cGVkVGFnO1xufSgpO1xuXG4vLyBcbnZhciBNQVhfU01JID0gMSA8PCAzMSAtIDE7XG52YXIgZ3JvdXBJRFJlZ2lzdGVyID0gbmV3IE1hcCgpO1xudmFyIHJldmVyc2VSZWdpc3RlciA9IG5ldyBNYXAoKTtcbnZhciBuZXh0RnJlZUdyb3VwID0gMTtcbnZhciBnZXRHcm91cEZvcklkID0gZnVuY3Rpb24gZ2V0R3JvdXBGb3JJZChpZCkge1xuICBpZiAoZ3JvdXBJRFJlZ2lzdGVyLmhhcyhpZCkpIHtcbiAgICByZXR1cm4gZ3JvdXBJRFJlZ2lzdGVyLmdldChpZCk7XG4gIH1cblxuICB2YXIgZ3JvdXAgPSBuZXh0RnJlZUdyb3VwKys7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgKChncm91cCB8IDApIDwgMCB8fCBncm91cCA+IE1BWF9TTUkpKSB7XG4gICAgdGhyb3dTdHlsZWRDb21wb25lbnRzRXJyb3IoMTYsIFwiXCIgKyBncm91cCk7XG4gIH1cblxuICBncm91cElEUmVnaXN0ZXIuc2V0KGlkLCBncm91cCk7XG4gIHJldmVyc2VSZWdpc3Rlci5zZXQoZ3JvdXAsIGlkKTtcbiAgcmV0dXJuIGdyb3VwO1xufTtcbnZhciBnZXRJZEZvckdyb3VwID0gZnVuY3Rpb24gZ2V0SWRGb3JHcm91cChncm91cCkge1xuICByZXR1cm4gcmV2ZXJzZVJlZ2lzdGVyLmdldChncm91cCk7XG59O1xudmFyIHNldEdyb3VwRm9ySWQgPSBmdW5jdGlvbiBzZXRHcm91cEZvcklkKGlkLCBncm91cCkge1xuICBpZiAoZ3JvdXAgPj0gbmV4dEZyZWVHcm91cCkge1xuICAgIG5leHRGcmVlR3JvdXAgPSBncm91cCArIDE7XG4gIH1cblxuICBncm91cElEUmVnaXN0ZXIuc2V0KGlkLCBncm91cCk7XG4gIHJldmVyc2VSZWdpc3Rlci5zZXQoZ3JvdXAsIGlkKTtcbn07XG5cbi8vIFxudmFyIFNFTEVDVE9SID0gXCJzdHlsZVtcIiArIFNDX0FUVFIgKyBcIl1bXCIgKyBTQ19BVFRSX1ZFUlNJT04gKyBcIj1cXFwiXCIgKyBTQ19WRVJTSU9OICsgXCJcXFwiXVwiO1xudmFyIE1BUktFUl9SRSA9IG5ldyBSZWdFeHAoXCJeXCIgKyBTQ19BVFRSICsgXCJcXFxcLmcoXFxcXGQrKVxcXFxbaWQ9XFxcIihbXFxcXHdcXFxcZC1dKylcXFwiXFxcXF0uKj9cXFwiKFteXFxcIl0qKVwiKTtcbnZhciBvdXRwdXRTaGVldCA9IGZ1bmN0aW9uIG91dHB1dFNoZWV0KHNoZWV0KSB7XG4gIHZhciB0YWcgPSBzaGVldC5nZXRUYWcoKTtcbiAgdmFyIGxlbmd0aCA9IHRhZy5sZW5ndGg7XG4gIHZhciBjc3MgPSAnJztcblxuICBmb3IgKHZhciBncm91cCA9IDA7IGdyb3VwIDwgbGVuZ3RoOyBncm91cCsrKSB7XG4gICAgdmFyIGlkID0gZ2V0SWRGb3JHcm91cChncm91cCk7XG4gICAgaWYgKGlkID09PSB1bmRlZmluZWQpIGNvbnRpbnVlO1xuICAgIHZhciBuYW1lcyA9IHNoZWV0Lm5hbWVzLmdldChpZCk7XG4gICAgdmFyIHJ1bGVzID0gdGFnLmdldEdyb3VwKGdyb3VwKTtcbiAgICBpZiAobmFtZXMgPT09IHVuZGVmaW5lZCB8fCBydWxlcy5sZW5ndGggPT09IDApIGNvbnRpbnVlO1xuICAgIHZhciBzZWxlY3RvciA9IFNDX0FUVFIgKyBcIi5nXCIgKyBncm91cCArIFwiW2lkPVxcXCJcIiArIGlkICsgXCJcXFwiXVwiO1xuICAgIHZhciBjb250ZW50ID0gJyc7XG5cbiAgICBpZiAobmFtZXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgbmFtZXMuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICBpZiAobmFtZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgY29udGVudCArPSBuYW1lICsgXCIsXCI7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gLy8gTk9URTogSXQncyBlYXNpZXIgdG8gY29sbGVjdCBydWxlcyBhbmQgaGF2ZSB0aGUgbWFya2VyXG4gICAgLy8gYWZ0ZXIgdGhlIGFjdHVhbCBydWxlcyB0byBzaW1wbGlmeSB0aGUgcmVoeWRyYXRpb25cblxuXG4gICAgY3NzICs9IFwiXCIgKyBydWxlcyArIHNlbGVjdG9yICsgXCJ7Y29udGVudDpcXFwiXCIgKyBjb250ZW50ICsgXCJcXFwifVwiICsgU1BMSVRURVI7XG4gIH1cblxuICByZXR1cm4gY3NzO1xufTtcblxudmFyIHJlaHlkcmF0ZU5hbWVzRnJvbUNvbnRlbnQgPSBmdW5jdGlvbiByZWh5ZHJhdGVOYW1lc0Zyb21Db250ZW50KHNoZWV0LCBpZCwgY29udGVudCkge1xuICB2YXIgbmFtZXMgPSBjb250ZW50LnNwbGl0KCcsJyk7XG4gIHZhciBuYW1lO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gbmFtZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgaWYgKG5hbWUgPSBuYW1lc1tpXSkge1xuICAgICAgc2hlZXQucmVnaXN0ZXJOYW1lKGlkLCBuYW1lKTtcbiAgICB9XG4gIH1cbn07XG5cbnZhciByZWh5ZHJhdGVTaGVldEZyb21UYWcgPSBmdW5jdGlvbiByZWh5ZHJhdGVTaGVldEZyb21UYWcoc2hlZXQsIHN0eWxlKSB7XG4gIHZhciBwYXJ0cyA9IHN0eWxlLmlubmVySFRNTC5zcGxpdChTUExJVFRFUik7XG4gIHZhciBydWxlcyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gcGFydHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgdmFyIHBhcnQgPSBwYXJ0c1tpXS50cmltKCk7XG4gICAgaWYgKCFwYXJ0KSBjb250aW51ZTtcbiAgICB2YXIgbWFya2VyID0gcGFydC5tYXRjaChNQVJLRVJfUkUpO1xuXG4gICAgaWYgKG1hcmtlcikge1xuICAgICAgdmFyIGdyb3VwID0gcGFyc2VJbnQobWFya2VyWzFdLCAxMCkgfCAwO1xuICAgICAgdmFyIGlkID0gbWFya2VyWzJdO1xuXG4gICAgICBpZiAoZ3JvdXAgIT09IDApIHtcbiAgICAgICAgLy8gUmVoeWRyYXRlIGNvbXBvbmVudElkIHRvIGdyb3VwIGluZGV4IG1hcHBpbmdcbiAgICAgICAgc2V0R3JvdXBGb3JJZChpZCwgZ3JvdXApOyAvLyBSZWh5ZHJhdGUgbmFtZXMgYW5kIHJ1bGVzXG4gICAgICAgIC8vIGxvb2tzIGxpa2U6IGRhdGEtc3R5bGVkLmcxMVtpZD1cImlkQVwiXXtjb250ZW50OlwibmFtZUEsXCJ9XG5cbiAgICAgICAgcmVoeWRyYXRlTmFtZXNGcm9tQ29udGVudChzaGVldCwgaWQsIG1hcmtlclszXSk7XG4gICAgICAgIHNoZWV0LmdldFRhZygpLmluc2VydFJ1bGVzKGdyb3VwLCBydWxlcyk7XG4gICAgICB9XG5cbiAgICAgIHJ1bGVzLmxlbmd0aCA9IDA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJ1bGVzLnB1c2gocGFydCk7XG4gICAgfVxuICB9XG59O1xuXG52YXIgcmVoeWRyYXRlU2hlZXQgPSBmdW5jdGlvbiByZWh5ZHJhdGVTaGVldChzaGVldCkge1xuICB2YXIgbm9kZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFNFTEVDVE9SKTtcblxuICBmb3IgKHZhciBpID0gMCwgbCA9IG5vZGVzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIHZhciBub2RlID0gbm9kZXNbaV07XG5cbiAgICBpZiAobm9kZSAmJiBub2RlLmdldEF0dHJpYnV0ZShTQ19BVFRSKSAhPT0gU0NfQVRUUl9BQ1RJVkUpIHtcbiAgICAgIHJlaHlkcmF0ZVNoZWV0RnJvbVRhZyhzaGVldCwgbm9kZSk7XG5cbiAgICAgIGlmIChub2RlLnBhcmVudE5vZGUpIHtcbiAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufTtcblxudmFyIFNIT1VMRF9SRUhZRFJBVEUgPSBJU19CUk9XU0VSO1xudmFyIGRlZmF1bHRPcHRpb25zID0ge1xuICBpc1NlcnZlcjogIUlTX0JST1dTRVIsXG4gIHVzZUNTU09NSW5qZWN0aW9uOiAhRElTQUJMRV9TUEVFRFlcbn07XG4vKiogQ29udGFpbnMgdGhlIG1haW4gc3R5bGVzaGVldCBsb2dpYyBmb3Igc3RyaW5naWZpY2F0aW9uIGFuZCBjYWNoaW5nICovXG5cbnZhciBTdHlsZVNoZWV0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgLyoqIFJlZ2lzdGVyIGEgZ3JvdXAgSUQgdG8gZ2l2ZSBpdCBhbiBpbmRleCAqL1xuICBTdHlsZVNoZWV0LnJlZ2lzdGVySWQgPSBmdW5jdGlvbiByZWdpc3RlcklkKGlkKSB7XG4gICAgcmV0dXJuIGdldEdyb3VwRm9ySWQoaWQpO1xuICB9O1xuXG4gIGZ1bmN0aW9uIFN0eWxlU2hlZXQob3B0aW9ucywgZ2xvYmFsU3R5bGVzLCBuYW1lcykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICAgIG9wdGlvbnMgPSBkZWZhdWx0T3B0aW9ucztcbiAgICB9XG5cbiAgICBpZiAoZ2xvYmFsU3R5bGVzID09PSB2b2lkIDApIHtcbiAgICAgIGdsb2JhbFN0eWxlcyA9IHt9O1xuICAgIH1cblxuICAgIHRoaXMub3B0aW9ucyA9IF9leHRlbmRzKHt9LCBkZWZhdWx0T3B0aW9ucywge30sIG9wdGlvbnMpO1xuICAgIHRoaXMuZ3MgPSBnbG9iYWxTdHlsZXM7XG4gICAgdGhpcy5uYW1lcyA9IG5ldyBNYXAobmFtZXMpOyAvLyBXZSByZWh5ZHJhdGUgb25seSBvbmNlIGFuZCB1c2UgdGhlIHNoZWV0IHRoYXQgaXMgY3JlYXRlZCBmaXJzdFxuXG4gICAgaWYgKCF0aGlzLm9wdGlvbnMuaXNTZXJ2ZXIgJiYgSVNfQlJPV1NFUiAmJiBTSE9VTERfUkVIWURSQVRFKSB7XG4gICAgICBTSE9VTERfUkVIWURSQVRFID0gZmFsc2U7XG4gICAgICByZWh5ZHJhdGVTaGVldCh0aGlzKTtcbiAgICB9XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3R5bGVTaGVldC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlY29uc3RydWN0V2l0aE9wdGlvbnMgPSBmdW5jdGlvbiByZWNvbnN0cnVjdFdpdGhPcHRpb25zKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFN0eWxlU2hlZXQoX2V4dGVuZHMoe30sIHRoaXMub3B0aW9ucywge30sIG9wdGlvbnMpLCB0aGlzLmdzLCB0aGlzLm5hbWVzKTtcbiAgfTtcblxuICBfcHJvdG8uYWxsb2NhdGVHU0luc3RhbmNlID0gZnVuY3Rpb24gYWxsb2NhdGVHU0luc3RhbmNlKGlkKSB7XG4gICAgcmV0dXJuIHRoaXMuZ3NbaWRdID0gKHRoaXMuZ3NbaWRdIHx8IDApICsgMTtcbiAgfVxuICAvKiogTGF6aWx5IGluaXRpYWxpc2VzIGEgR3JvdXBlZFRhZyBmb3Igd2hlbiBpdCdzIGFjdHVhbGx5IG5lZWRlZCAqL1xuICA7XG5cbiAgX3Byb3RvLmdldFRhZyA9IGZ1bmN0aW9uIGdldFRhZygpIHtcbiAgICByZXR1cm4gdGhpcy50YWcgfHwgKHRoaXMudGFnID0gbWFrZUdyb3VwZWRUYWcobWFrZVRhZyh0aGlzLm9wdGlvbnMpKSk7XG4gIH1cbiAgLyoqIENoZWNrIHdoZXRoZXIgYSBuYW1lIGlzIGtub3duIGZvciBjYWNoaW5nICovXG4gIDtcblxuICBfcHJvdG8uaGFzTmFtZUZvcklkID0gZnVuY3Rpb24gaGFzTmFtZUZvcklkKGlkLCBuYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMubmFtZXMuaGFzKGlkKSAmJiB0aGlzLm5hbWVzLmdldChpZCkuaGFzKG5hbWUpO1xuICB9XG4gIC8qKiBNYXJrIGEgZ3JvdXAncyBuYW1lIGFzIGtub3duIGZvciBjYWNoaW5nICovXG4gIDtcblxuICBfcHJvdG8ucmVnaXN0ZXJOYW1lID0gZnVuY3Rpb24gcmVnaXN0ZXJOYW1lKGlkLCBuYW1lKSB7XG4gICAgZ2V0R3JvdXBGb3JJZChpZCk7XG5cbiAgICBpZiAoIXRoaXMubmFtZXMuaGFzKGlkKSkge1xuICAgICAgdmFyIGdyb3VwTmFtZXMgPSBuZXcgU2V0KCk7XG4gICAgICBncm91cE5hbWVzLmFkZChuYW1lKTtcbiAgICAgIHRoaXMubmFtZXMuc2V0KGlkLCBncm91cE5hbWVzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5uYW1lcy5nZXQoaWQpLmFkZChuYW1lKTtcbiAgICB9XG4gIH1cbiAgLyoqIEluc2VydCBuZXcgcnVsZXMgd2hpY2ggYWxzbyBtYXJrcyB0aGUgbmFtZSBhcyBrbm93biAqL1xuICA7XG5cbiAgX3Byb3RvLmluc2VydFJ1bGVzID0gZnVuY3Rpb24gaW5zZXJ0UnVsZXMoaWQsIG5hbWUsIHJ1bGVzKSB7XG4gICAgdGhpcy5yZWdpc3Rlck5hbWUoaWQsIG5hbWUpO1xuICAgIHRoaXMuZ2V0VGFnKCkuaW5zZXJ0UnVsZXMoZ2V0R3JvdXBGb3JJZChpZCksIHJ1bGVzKTtcbiAgfVxuICAvKiogQ2xlYXJzIGFsbCBjYWNoZWQgbmFtZXMgZm9yIGEgZ2l2ZW4gZ3JvdXAgSUQgKi9cbiAgO1xuXG4gIF9wcm90by5jbGVhck5hbWVzID0gZnVuY3Rpb24gY2xlYXJOYW1lcyhpZCkge1xuICAgIGlmICh0aGlzLm5hbWVzLmhhcyhpZCkpIHtcbiAgICAgIHRoaXMubmFtZXMuZ2V0KGlkKS5jbGVhcigpO1xuICAgIH1cbiAgfVxuICAvKiogQ2xlYXJzIGFsbCBydWxlcyBmb3IgYSBnaXZlbiBncm91cCBJRCAqL1xuICA7XG5cbiAgX3Byb3RvLmNsZWFyUnVsZXMgPSBmdW5jdGlvbiBjbGVhclJ1bGVzKGlkKSB7XG4gICAgdGhpcy5nZXRUYWcoKS5jbGVhckdyb3VwKGdldEdyb3VwRm9ySWQoaWQpKTtcbiAgICB0aGlzLmNsZWFyTmFtZXMoaWQpO1xuICB9XG4gIC8qKiBDbGVhcnMgdGhlIGVudGlyZSB0YWcgd2hpY2ggZGVsZXRlcyBhbGwgcnVsZXMgYnV0IG5vdCBpdHMgbmFtZXMgKi9cbiAgO1xuXG4gIF9wcm90by5jbGVhclRhZyA9IGZ1bmN0aW9uIGNsZWFyVGFnKCkge1xuICAgIC8vIE5PVEU6IFRoaXMgZG9lcyBub3QgY2xlYXIgdGhlIG5hbWVzLCBzaW5jZSBpdCdzIG9ubHkgdXNlZCBkdXJpbmcgU1NSXG4gICAgLy8gc28gdGhhdCB3ZSBjYW4gY29udGludW91c2x5IG91dHB1dCBvbmx5IG5ldyBydWxlc1xuICAgIHRoaXMudGFnID0gdW5kZWZpbmVkO1xuICB9XG4gIC8qKiBPdXRwdXRzIHRoZSBjdXJyZW50IHNoZWV0IGFzIGEgQ1NTIHN0cmluZyB3aXRoIG1hcmtlcnMgZm9yIFNTUiAqL1xuICA7XG5cbiAgX3Byb3RvLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIG91dHB1dFNoZWV0KHRoaXMpO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZVNoZWV0O1xufSgpO1xuXG4vLyBcblxuLyogZXNsaW50LWRpc2FibGUgKi9cbnZhciBTRUVEID0gNTM4MTsgLy8gV2hlbiB3ZSBoYXZlIHNlcGFyYXRlIHN0cmluZ3MgaXQncyB1c2VmdWwgdG8gcnVuIGEgcHJvZ3Jlc3NpdmVcbi8vIHZlcnNpb24gb2YgZGpiMiB3aGVyZSB3ZSBwcmV0ZW5kIHRoYXQgd2UncmUgc3RpbGwgbG9vcGluZyBvdmVyXG4vLyB0aGUgc2FtZSBzdHJpbmdcblxudmFyIHBoYXNoID0gZnVuY3Rpb24gcGhhc2goaCwgeCkge1xuICB2YXIgaSA9IHgubGVuZ3RoO1xuXG4gIHdoaWxlIChpKSB7XG4gICAgaCA9IGggKiAzMyBeIHguY2hhckNvZGVBdCgtLWkpO1xuICB9XG5cbiAgcmV0dXJuIGg7XG59OyAvLyBUaGlzIGlzIGEgZGpiMiBoYXNoaW5nIGZ1bmN0aW9uXG5cbnZhciBoYXNoID0gZnVuY3Rpb24gaGFzaCh4KSB7XG4gIHJldHVybiBwaGFzaChTRUVELCB4KTtcbn07XG5cbi8qKlxuICogTUlUIExpY2Vuc2VcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYgU3VsdGFuIFRhcmltb1xuICpcbiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2ZcbiAqIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksXG4gKiB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3JcbiAqIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbiAqXG4gKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGxcbiAqIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4gKlxuICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuICogT1IgSU1QTElFRCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbiAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuICogQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksXG4gKiBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SXG4gKiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuICovXG5cbi8qIGVzbGludC1kaXNhYmxlICovXG5mdW5jdGlvbiBpbnNlcnRSdWxlUGx1Z2luIChpbnNlcnRSdWxlKSB7XG4gIHZhciBkZWxpbWl0ZXIgPSAnLyp8Ki8nO1xuICB2YXIgbmVlZGxlID0gZGVsaW1pdGVyICsgXCJ9XCI7XG5cbiAgZnVuY3Rpb24gdG9TaGVldChibG9jaykge1xuICAgIGlmIChibG9jaykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaW5zZXJ0UnVsZShibG9jayArIFwifVwiKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHJ1bGVTaGVldChjb250ZXh0LCBjb250ZW50LCBzZWxlY3RvcnMsIHBhcmVudHMsIGxpbmUsIGNvbHVtbiwgbGVuZ3RoLCBucywgZGVwdGgsIGF0KSB7XG4gICAgc3dpdGNoIChjb250ZXh0KSB7XG4gICAgICAvLyBwcm9wZXJ0eVxuICAgICAgY2FzZSAxOlxuICAgICAgICAvLyBAaW1wb3J0XG4gICAgICAgIGlmIChkZXB0aCA9PT0gMCAmJiBjb250ZW50LmNoYXJDb2RlQXQoMCkgPT09IDY0KSByZXR1cm4gaW5zZXJ0UnVsZShjb250ZW50ICsgXCI7XCIpLCAnJztcbiAgICAgICAgYnJlYWs7XG4gICAgICAvLyBzZWxlY3RvclxuXG4gICAgICBjYXNlIDI6XG4gICAgICAgIGlmIChucyA9PT0gMCkgcmV0dXJuIGNvbnRlbnQgKyBkZWxpbWl0ZXI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgLy8gYXQtcnVsZVxuXG4gICAgICBjYXNlIDM6XG4gICAgICAgIHN3aXRjaCAobnMpIHtcbiAgICAgICAgICAvLyBAZm9udC1mYWNlLCBAcGFnZVxuICAgICAgICAgIGNhc2UgMTAyOlxuICAgICAgICAgIGNhc2UgMTEyOlxuICAgICAgICAgICAgcmV0dXJuIGluc2VydFJ1bGUoc2VsZWN0b3JzWzBdICsgY29udGVudCksICcnO1xuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBjb250ZW50ICsgKGF0ID09PSAwID8gZGVsaW1pdGVyIDogJycpO1xuICAgICAgICB9XG5cbiAgICAgIGNhc2UgLTI6XG4gICAgICAgIGNvbnRlbnQuc3BsaXQobmVlZGxlKS5mb3JFYWNoKHRvU2hlZXQpO1xuICAgIH1cbiAgfTtcbn1cblxudmFyIENPTU1FTlRfUkVHRVggPSAvXlxccypcXC9cXC8uKiQvZ207XG5mdW5jdGlvbiBjcmVhdGVTdHlsaXNJbnN0YW5jZShfdGVtcCkge1xuICB2YXIgX3JlZiA9IF90ZW1wID09PSB2b2lkIDAgPyBFTVBUWV9PQkpFQ1QgOiBfdGVtcCxcbiAgICAgIF9yZWYkb3B0aW9ucyA9IF9yZWYub3B0aW9ucyxcbiAgICAgIG9wdGlvbnMgPSBfcmVmJG9wdGlvbnMgPT09IHZvaWQgMCA/IEVNUFRZX09CSkVDVCA6IF9yZWYkb3B0aW9ucyxcbiAgICAgIF9yZWYkcGx1Z2lucyA9IF9yZWYucGx1Z2lucyxcbiAgICAgIHBsdWdpbnMgPSBfcmVmJHBsdWdpbnMgPT09IHZvaWQgMCA/IEVNUFRZX0FSUkFZIDogX3JlZiRwbHVnaW5zO1xuXG4gIHZhciBzdHlsaXMgPSBuZXcgU3R5bGlzKG9wdGlvbnMpOyAvLyBXcmFwIGBpbnNlcnRSdWxlUGx1Z2luIHRvIGJ1aWxkIGEgbGlzdCBvZiBydWxlcyxcbiAgLy8gYW5kIHRoZW4gbWFrZSBvdXIgb3duIHBsdWdpbiB0byByZXR1cm4gdGhlIHJ1bGVzLiBUaGlzXG4gIC8vIG1ha2VzIGl0IGVhc2llciB0byBob29rIGludG8gdGhlIGV4aXN0aW5nIFNTUiBhcmNoaXRlY3R1cmVcblxuICB2YXIgcGFyc2luZ1J1bGVzID0gW107IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuXG4gIHZhciByZXR1cm5SdWxlc1BsdWdpbiA9IGZ1bmN0aW9uIHJldHVyblJ1bGVzUGx1Z2luKGNvbnRleHQpIHtcbiAgICBpZiAoY29udGV4dCA9PT0gLTIpIHtcbiAgICAgIHZhciBwYXJzZWRSdWxlcyA9IHBhcnNpbmdSdWxlcztcbiAgICAgIHBhcnNpbmdSdWxlcyA9IFtdO1xuICAgICAgcmV0dXJuIHBhcnNlZFJ1bGVzO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcGFyc2VSdWxlc1BsdWdpbiA9IGluc2VydFJ1bGVQbHVnaW4oZnVuY3Rpb24gKHJ1bGUpIHtcbiAgICBwYXJzaW5nUnVsZXMucHVzaChydWxlKTtcbiAgfSk7XG5cbiAgdmFyIF9jb21wb25lbnRJZDtcblxuICB2YXIgX3NlbGVjdG9yO1xuXG4gIHZhciBfc2VsZWN0b3JSZWdleHA7XG5cbiAgdmFyIHNlbGZSZWZlcmVuY2VSZXBsYWNlciA9IGZ1bmN0aW9uIHNlbGZSZWZlcmVuY2VSZXBsYWNlcihtYXRjaCwgb2Zmc2V0LCBzdHJpbmcpIHtcbiAgICBpZiAoIC8vIHRoZSBmaXJzdCBzZWxmLXJlZiBpcyBhbHdheXMgdW50b3VjaGVkXG4gICAgb2Zmc2V0ID4gMCAmJiAvLyB0aGVyZSBzaG91bGQgYmUgYXQgbGVhc3QgdHdvIHNlbGYtcmVmcyB0byBkbyBhIHJlcGxhY2VtZW50ICguYiA+IC5iKVxuICAgIHN0cmluZy5zbGljZSgwLCBvZmZzZXQpLmluZGV4T2YoX3NlbGVjdG9yKSAhPT0gLTEgJiYgLy8gbm8gY29uc2VjdXRpdmUgc2VsZiByZWZzICguYi5iKTsgdGhhdCBpcyBhIHByZWNlZGVuY2UgYm9vc3QgYW5kIHRyZWF0ZWQgZGlmZmVyZW50bHlcbiAgICBzdHJpbmcuc2xpY2Uob2Zmc2V0IC0gX3NlbGVjdG9yLmxlbmd0aCwgb2Zmc2V0KSAhPT0gX3NlbGVjdG9yKSB7XG4gICAgICByZXR1cm4gXCIuXCIgKyBfY29tcG9uZW50SWQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hdGNoO1xuICB9O1xuICAvKipcbiAgICogV2hlbiB3cml0aW5nIGEgc3R5bGUgbGlrZVxuICAgKlxuICAgKiAmICsgJiB7XG4gICAqICAgY29sb3I6IHJlZDtcbiAgICogfVxuICAgKlxuICAgKiBUaGUgc2Vjb25kIGFtcGVyc2FuZCBzaG91bGQgYmUgYSByZWZlcmVuY2UgdG8gdGhlIHN0YXRpYyBjb21wb25lbnQgY2xhc3MuIHN0eWxpc1xuICAgKiBoYXMgbm8ga25vd2xlZGdlIG9mIHN0YXRpYyBjbGFzcyBzbyB3ZSBoYXZlIHRvIGludGVsbGlnZW50bHkgcmVwbGFjZSB0aGUgYmFzZSBzZWxlY3Rvci5cbiAgICpcbiAgICogaHR0cHM6Ly9naXRodWIuY29tL3RoeXN1bHRhbi9zdHlsaXMuanMjcGx1Z2lucyA8LSBtb3JlIGluZm8gYWJvdXQgdGhlIGNvbnRleHQgcGhhc2UgdmFsdWVzXG4gICAqIFwiMlwiIG1lYW5zIHRoaXMgcGx1Z2luIGlzIHRha2luZyBlZmZlY3QgYXQgdGhlIHZlcnkgZW5kIGFmdGVyIGFsbCBvdGhlciBwcm9jZXNzaW5nIGlzIGNvbXBsZXRlXG4gICAqL1xuXG5cbiAgdmFyIHNlbGZSZWZlcmVuY2VSZXBsYWNlbWVudFBsdWdpbiA9IGZ1bmN0aW9uIHNlbGZSZWZlcmVuY2VSZXBsYWNlbWVudFBsdWdpbihjb250ZXh0LCBfLCBzZWxlY3RvcnMpIHtcbiAgICBpZiAoY29udGV4dCA9PT0gMiAmJiBzZWxlY3RvcnMubGVuZ3RoICYmIHNlbGVjdG9yc1swXS5sYXN0SW5kZXhPZihfc2VsZWN0b3IpID4gMCkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBzZWxlY3RvcnNbMF0gPSBzZWxlY3RvcnNbMF0ucmVwbGFjZShfc2VsZWN0b3JSZWdleHAsIHNlbGZSZWZlcmVuY2VSZXBsYWNlcik7XG4gICAgfVxuICB9O1xuXG4gIHN0eWxpcy51c2UoW10uY29uY2F0KHBsdWdpbnMsIFtzZWxmUmVmZXJlbmNlUmVwbGFjZW1lbnRQbHVnaW4sIHBhcnNlUnVsZXNQbHVnaW4sIHJldHVyblJ1bGVzUGx1Z2luXSkpO1xuXG4gIGZ1bmN0aW9uIHN0cmluZ2lmeVJ1bGVzKGNzcywgc2VsZWN0b3IsIHByZWZpeCwgY29tcG9uZW50SWQpIHtcbiAgICBpZiAoY29tcG9uZW50SWQgPT09IHZvaWQgMCkge1xuICAgICAgY29tcG9uZW50SWQgPSAnJic7XG4gICAgfVxuXG4gICAgdmFyIGZsYXRDU1MgPSBjc3MucmVwbGFjZShDT01NRU5UX1JFR0VYLCAnJyk7XG4gICAgdmFyIGNzc1N0ciA9IHNlbGVjdG9yICYmIHByZWZpeCA/IHByZWZpeCArIFwiIFwiICsgc2VsZWN0b3IgKyBcIiB7IFwiICsgZmxhdENTUyArIFwiIH1cIiA6IGZsYXRDU1M7IC8vIHN0eWxpcyBoYXMgbm8gY29uY2VwdCBvZiBzdGF0ZSB0byBiZSBwYXNzZWQgdG8gcGx1Z2luc1xuICAgIC8vIGJ1dCBzaW5jZSBKUyBpcyBzaW5nbGU9dGhyZWFkZWQsIHdlIGNhbiByZWx5IG9uIHRoYXQgdG8gZW5zdXJlXG4gICAgLy8gdGhlc2UgcHJvcGVydGllcyBzdGF5IGluIHN5bmMgd2l0aCB0aGUgY3VycmVudCBzdHlsaXMgcnVuXG5cbiAgICBfY29tcG9uZW50SWQgPSBjb21wb25lbnRJZDtcbiAgICBfc2VsZWN0b3IgPSBzZWxlY3RvcjtcbiAgICBfc2VsZWN0b3JSZWdleHAgPSBuZXcgUmVnRXhwKFwiXFxcXFwiICsgX3NlbGVjdG9yICsgXCJcXFxcYlwiLCAnZycpO1xuICAgIHJldHVybiBzdHlsaXMocHJlZml4IHx8ICFzZWxlY3RvciA/ICcnIDogc2VsZWN0b3IsIGNzc1N0cik7XG4gIH1cblxuICBzdHJpbmdpZnlSdWxlcy5oYXNoID0gcGx1Z2lucy5sZW5ndGggPyBwbHVnaW5zLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBwbHVnaW4pIHtcbiAgICBpZiAoIXBsdWdpbi5uYW1lKSB7XG4gICAgICB0aHJvd1N0eWxlZENvbXBvbmVudHNFcnJvcigxNSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBoYXNoKGFjYywgcGx1Z2luLm5hbWUpO1xuICB9LCBTRUVEKS50b1N0cmluZygpIDogJyc7XG4gIHJldHVybiBzdHJpbmdpZnlSdWxlcztcbn1cblxuLy8gXG52YXIgU3R5bGVTaGVldENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG52YXIgU3R5bGVTaGVldENvbnN1bWVyID0gU3R5bGVTaGVldENvbnRleHQuQ29uc3VtZXI7XG52YXIgU3R5bGlzQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoKTtcbnZhciBTdHlsaXNDb25zdW1lciA9IFN0eWxpc0NvbnRleHQuQ29uc3VtZXI7XG52YXIgbWFzdGVyU2hlZXQgPSBuZXcgU3R5bGVTaGVldCgpO1xudmFyIG1hc3RlclN0eWxpcyA9IGNyZWF0ZVN0eWxpc0luc3RhbmNlKCk7XG5mdW5jdGlvbiB1c2VTdHlsZVNoZWV0KCkge1xuICByZXR1cm4gdXNlQ29udGV4dChTdHlsZVNoZWV0Q29udGV4dCkgfHwgbWFzdGVyU2hlZXQ7XG59XG5mdW5jdGlvbiB1c2VTdHlsaXMoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KFN0eWxpc0NvbnRleHQpIHx8IG1hc3RlclN0eWxpcztcbn1cbmZ1bmN0aW9uIFN0eWxlU2hlZXRNYW5hZ2VyKHByb3BzKSB7XG4gIHZhciBfdXNlU3RhdGUgPSB1c2VTdGF0ZShwcm9wcy5zdHlsaXNQbHVnaW5zKSxcbiAgICAgIHBsdWdpbnMgPSBfdXNlU3RhdGVbMF0sXG4gICAgICBzZXRQbHVnaW5zID0gX3VzZVN0YXRlWzFdO1xuXG4gIHZhciBjb250ZXh0U3R5bGVTaGVldCA9IHVzZVN0eWxlU2hlZXQoKTtcbiAgdmFyIHN0eWxlU2hlZXQgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2hlZXQgPSBjb250ZXh0U3R5bGVTaGVldDtcblxuICAgIGlmIChwcm9wcy5zaGVldCkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICBzaGVldCA9IHByb3BzLnNoZWV0O1xuICAgIH0gZWxzZSBpZiAocHJvcHMudGFyZ2V0KSB7XG4gICAgICBzaGVldCA9IHNoZWV0LnJlY29uc3RydWN0V2l0aE9wdGlvbnMoe1xuICAgICAgICB0YXJnZXQ6IHByb3BzLnRhcmdldFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHByb3BzLmRpc2FibGVDU1NPTUluamVjdGlvbikge1xuICAgICAgc2hlZXQgPSBzaGVldC5yZWNvbnN0cnVjdFdpdGhPcHRpb25zKHtcbiAgICAgICAgdXNlQ1NTT01JbmplY3Rpb246IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gc2hlZXQ7XG4gIH0sIFtwcm9wcy5kaXNhYmxlQ1NTT01JbmplY3Rpb24sIHByb3BzLnNoZWV0LCBwcm9wcy50YXJnZXRdKTtcbiAgdmFyIHN0eWxpcyA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBjcmVhdGVTdHlsaXNJbnN0YW5jZSh7XG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHByZWZpeDogIXByb3BzLmRpc2FibGVWZW5kb3JQcmVmaXhlc1xuICAgICAgfSxcbiAgICAgIHBsdWdpbnM6IHBsdWdpbnNcbiAgICB9KTtcbiAgfSwgW3Byb3BzLmRpc2FibGVWZW5kb3JQcmVmaXhlcywgcGx1Z2luc10pO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGlmICghc2hhbGxvd2VxdWFsKHBsdWdpbnMsIHByb3BzLnN0eWxpc1BsdWdpbnMpKSBzZXRQbHVnaW5zKHByb3BzLnN0eWxpc1BsdWdpbnMpO1xuICB9LCBbcHJvcHMuc3R5bGlzUGx1Z2luc10pO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU3R5bGVTaGVldENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogc3R5bGVTaGVldFxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTdHlsaXNDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IHN0eWxpc1xuICB9LCBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gUmVhY3QuQ2hpbGRyZW4ub25seShwcm9wcy5jaGlsZHJlbikgOiBwcm9wcy5jaGlsZHJlbikpO1xufVxuXG4vLyBcblxudmFyIEtleWZyYW1lcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEtleWZyYW1lcyhuYW1lLCBzdHJpbmdpZnlBcmdzKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHRoaXMuaW5qZWN0ID0gZnVuY3Rpb24gKHN0eWxlU2hlZXQpIHtcbiAgICAgIGlmICghc3R5bGVTaGVldC5oYXNOYW1lRm9ySWQoX3RoaXMuaWQsIF90aGlzLm5hbWUpKSB7XG4gICAgICAgIHN0eWxlU2hlZXQuaW5zZXJ0UnVsZXMoX3RoaXMuaWQsIF90aGlzLm5hbWUsIG1hc3RlclN0eWxpcy5hcHBseSh2b2lkIDAsIF90aGlzLnN0cmluZ2lmeUFyZ3MpKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdGhpcy50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aHJvd1N0eWxlZENvbXBvbmVudHNFcnJvcigxMiwgU3RyaW5nKF90aGlzLm5hbWUpKTtcbiAgICB9O1xuXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLmlkID0gXCJzYy1rZXlmcmFtZXMtXCIgKyBuYW1lO1xuICAgIHRoaXMuc3RyaW5naWZ5QXJncyA9IHN0cmluZ2lmeUFyZ3M7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gS2V5ZnJhbWVzLnByb3RvdHlwZTtcblxuICBfcHJvdG8uZ2V0TmFtZSA9IGZ1bmN0aW9uIGdldE5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMubmFtZTtcbiAgfTtcblxuICByZXR1cm4gS2V5ZnJhbWVzO1xufSgpO1xuXG4vLyBcblxuLyoqXG4gKiBpbmxpbmVkIHZlcnNpb24gb2ZcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9mYmpzL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL2ZianMvc3JjL2NvcmUvaHlwaGVuYXRlU3R5bGVOYW1lLmpzXG4gKi9cbnZhciB1cHBlcmNhc2VQYXR0ZXJuID0gLyhbQS1aXSkvZztcbnZhciBtc1BhdHRlcm4gPSAvXm1zLS87XG4vKipcbiAqIEh5cGhlbmF0ZXMgYSBjYW1lbGNhc2VkIENTUyBwcm9wZXJ0eSBuYW1lLCBmb3IgZXhhbXBsZTpcbiAqXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdiYWNrZ3JvdW5kQ29sb3InKVxuICogICA8IFwiYmFja2dyb3VuZC1jb2xvclwiXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdNb3pUcmFuc2l0aW9uJylcbiAqICAgPCBcIi1tb3otdHJhbnNpdGlvblwiXG4gKiAgID4gaHlwaGVuYXRlU3R5bGVOYW1lKCdtc1RyYW5zaXRpb24nKVxuICogICA8IFwiLW1zLXRyYW5zaXRpb25cIlxuICpcbiAqIEFzIE1vZGVybml6ciBzdWdnZXN0cyAoaHR0cDovL21vZGVybml6ci5jb20vZG9jcy8jcHJlZml4ZWQpLCBhbiBgbXNgIHByZWZpeFxuICogaXMgY29udmVydGVkIHRvIGAtbXMtYC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cblxuZnVuY3Rpb24gaHlwaGVuYXRlU3R5bGVOYW1lKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnJlcGxhY2UodXBwZXJjYXNlUGF0dGVybiwgJy0kMScpLnRvTG93ZXJDYXNlKCkucmVwbGFjZShtc1BhdHRlcm4sICctbXMtJyk7XG59XG5cbi8vIFxuXG5mdW5jdGlvbiBhZGRVbml0SWZOZWVkZWQobmFtZSwgdmFsdWUpIHtcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2FtaWxhamFjay9lc2xpbnQtcGx1Z2luLWZsb3d0eXBlLWVycm9ycy9pc3N1ZXMvMTMzXG4gIC8vICRGbG93Rml4TWVcbiAgaWYgKHZhbHVlID09IG51bGwgfHwgdHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicgfHwgdmFsdWUgPT09ICcnKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgdmFsdWUgIT09IDAgJiYgIShuYW1lIGluIHVuaXRsZXNzKSkge1xuICAgIHJldHVybiB2YWx1ZSArIFwicHhcIjsgLy8gUHJlc3VtZXMgaW1wbGljaXQgJ3B4JyBzdWZmaXggZm9yIHVuaXRsZXNzIG51bWJlcnNcbiAgfVxuXG4gIHJldHVybiBTdHJpbmcodmFsdWUpLnRyaW0oKTtcbn1cblxuLy8gXG4vKipcbiAqIEl0J3MgZmFsc2lzaCBub3QgZmFsc3kgYmVjYXVzZSAwIGlzIGFsbG93ZWQuXG4gKi9cblxudmFyIGlzRmFsc2lzaCA9IGZ1bmN0aW9uIGlzRmFsc2lzaChjaHVuaykge1xuICByZXR1cm4gY2h1bmsgPT09IHVuZGVmaW5lZCB8fCBjaHVuayA9PT0gbnVsbCB8fCBjaHVuayA9PT0gZmFsc2UgfHwgY2h1bmsgPT09ICcnO1xufTtcblxudmFyIG9ialRvQ3NzQXJyYXkgPSBmdW5jdGlvbiBvYmpUb0Nzc0FycmF5KG9iaiwgcHJldktleSkge1xuICB2YXIgcnVsZXMgPSBbXTtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIGlmICghaXNGYWxzaXNoKG9ialtrZXldKSkge1xuICAgICAgaWYgKGlzUGxhaW5PYmplY3Qob2JqW2tleV0pKSB7XG4gICAgICAgIHJ1bGVzLnB1c2guYXBwbHkocnVsZXMsIG9ialRvQ3NzQXJyYXkob2JqW2tleV0sIGtleSkpO1xuICAgICAgICByZXR1cm4gcnVsZXM7XG4gICAgICB9IGVsc2UgaWYgKGlzRnVuY3Rpb24ob2JqW2tleV0pKSB7XG4gICAgICAgIHJ1bGVzLnB1c2goaHlwaGVuYXRlU3R5bGVOYW1lKGtleSkgKyBcIjpcIiwgb2JqW2tleV0sICc7Jyk7XG4gICAgICAgIHJldHVybiBydWxlcztcbiAgICAgIH1cblxuICAgICAgcnVsZXMucHVzaChoeXBoZW5hdGVTdHlsZU5hbWUoa2V5KSArIFwiOiBcIiArIGFkZFVuaXRJZk5lZWRlZChrZXksIG9ialtrZXldKSArIFwiO1wiKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcnVsZXM7XG4gIH0pO1xuICByZXR1cm4gcHJldktleSA/IFtwcmV2S2V5ICsgXCIge1wiXS5jb25jYXQocnVsZXMsIFsnfSddKSA6IHJ1bGVzO1xufTtcbmZ1bmN0aW9uIGZsYXR0ZW4oY2h1bmssIGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoY2h1bmspKSB7XG4gICAgdmFyIHJ1bGVTZXQgPSBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBjaHVuay5sZW5ndGgsIHJlc3VsdDsgaSA8IGxlbjsgaSArPSAxKSB7XG4gICAgICByZXN1bHQgPSBmbGF0dGVuKGNodW5rW2ldLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgICAgIGlmIChyZXN1bHQgPT09ICcnKSBjb250aW51ZTtlbHNlIGlmIChBcnJheS5pc0FycmF5KHJlc3VsdCkpIHJ1bGVTZXQucHVzaC5hcHBseShydWxlU2V0LCByZXN1bHQpO2Vsc2UgcnVsZVNldC5wdXNoKHJlc3VsdCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJ1bGVTZXQ7XG4gIH1cblxuICBpZiAoaXNGYWxzaXNoKGNodW5rKSkge1xuICAgIHJldHVybiAnJztcbiAgfVxuICAvKiBIYW5kbGUgb3RoZXIgY29tcG9uZW50cyAqL1xuXG5cbiAgaWYgKGlzU3R5bGVkQ29tcG9uZW50KGNodW5rKSkge1xuICAgIHJldHVybiBcIi5cIiArIGNodW5rLnN0eWxlZENvbXBvbmVudElkO1xuICB9XG4gIC8qIEVpdGhlciBleGVjdXRlIG9yIGRlZmVyIHRoZSBmdW5jdGlvbiAqL1xuXG5cbiAgaWYgKGlzRnVuY3Rpb24oY2h1bmspKSB7XG4gICAgaWYgKGlzU3RhdGVsZXNzRnVuY3Rpb24oY2h1bmspICYmIGV4ZWN1dGlvbkNvbnRleHQpIHtcbiAgICAgIHZhciBfcmVzdWx0ID0gY2h1bmsoZXhlY3V0aW9uQ29udGV4dCk7XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGlzRWxlbWVudChfcmVzdWx0KSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICBjb25zb2xlLndhcm4oZ2V0Q29tcG9uZW50TmFtZShjaHVuaykgKyBcIiBpcyBub3QgYSBzdHlsZWQgY29tcG9uZW50IGFuZCBjYW5ub3QgYmUgcmVmZXJyZWQgdG8gdmlhIGNvbXBvbmVudCBzZWxlY3Rvci4gU2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FkdmFuY2VkI3JlZmVycmluZy10by1vdGhlci1jb21wb25lbnRzIGZvciBtb3JlIGRldGFpbHMuXCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmxhdHRlbihfcmVzdWx0LCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgICB9IGVsc2UgcmV0dXJuIGNodW5rO1xuICB9XG5cbiAgaWYgKGNodW5rIGluc3RhbmNlb2YgS2V5ZnJhbWVzKSB7XG4gICAgaWYgKHN0eWxlU2hlZXQpIHtcbiAgICAgIGNodW5rLmluamVjdChzdHlsZVNoZWV0KTtcbiAgICAgIHJldHVybiBjaHVuay5nZXROYW1lKCk7XG4gICAgfSBlbHNlIHJldHVybiBjaHVuaztcbiAgfVxuICAvKiBIYW5kbGUgb2JqZWN0cyAqL1xuXG5cbiAgcmV0dXJuIGlzUGxhaW5PYmplY3QoY2h1bmspID8gb2JqVG9Dc3NBcnJheShjaHVuaykgOiBjaHVuay50b1N0cmluZygpO1xufVxuXG4vLyBcbmZ1bmN0aW9uIGNzcyhzdHlsZXMpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGludGVycG9sYXRpb25zID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBpbnRlcnBvbGF0aW9uc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICBpZiAoaXNGdW5jdGlvbihzdHlsZXMpIHx8IGlzUGxhaW5PYmplY3Qoc3R5bGVzKSkge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICByZXR1cm4gZmxhdHRlbihpbnRlcmxlYXZlKEVNUFRZX0FSUkFZLCBbc3R5bGVzXS5jb25jYXQoaW50ZXJwb2xhdGlvbnMpKSk7XG4gIH1cblxuICBpZiAoaW50ZXJwb2xhdGlvbnMubGVuZ3RoID09PSAwICYmIHN0eWxlcy5sZW5ndGggPT09IDEgJiYgdHlwZW9mIHN0eWxlc1swXSA9PT0gXCJzdHJpbmdcIikge1xuICAgIC8vICRGbG93Rml4TWVcbiAgICByZXR1cm4gc3R5bGVzO1xuICB9IC8vICRGbG93Rml4TWVcblxuXG4gIHJldHVybiBmbGF0dGVuKGludGVybGVhdmUoc3R5bGVzLCBpbnRlcnBvbGF0aW9ucykpO1xufVxuXG5mdW5jdGlvbiBjb25zdHJ1Y3RXaXRoT3B0aW9ucyhjb21wb25lbnRDb25zdHJ1Y3RvciwgdGFnLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0gRU1QVFlfT0JKRUNUO1xuICB9XG5cbiAgaWYgKCFpc1ZhbGlkRWxlbWVudFR5cGUodGFnKSkge1xuICAgIHJldHVybiB0aHJvd1N0eWxlZENvbXBvbmVudHNFcnJvcigxLCBTdHJpbmcodGFnKSk7XG4gIH1cbiAgLyogVGhpcyBpcyBjYWxsYWJsZSBkaXJlY3RseSBhcyBhIHRlbXBsYXRlIGZ1bmN0aW9uICovXG4gIC8vICRGbG93Rml4TWU6IE5vdCB0eXBlZCB0byBhdm9pZCBkZXN0cnVjdHVyaW5nIGFyZ3VtZW50c1xuXG5cbiAgdmFyIHRlbXBsYXRlRnVuY3Rpb24gPSBmdW5jdGlvbiB0ZW1wbGF0ZUZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb21wb25lbnRDb25zdHJ1Y3Rvcih0YWcsIG9wdGlvbnMsIGNzcy5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cykpO1xuICB9O1xuICAvKiBJZiBjb25maWcgbWV0aG9kcyBhcmUgY2FsbGVkLCB3cmFwIHVwIGEgbmV3IHRlbXBsYXRlIGZ1bmN0aW9uIGFuZCBtZXJnZSBvcHRpb25zICovXG5cblxuICB0ZW1wbGF0ZUZ1bmN0aW9uLndpdGhDb25maWcgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgcmV0dXJuIGNvbnN0cnVjdFdpdGhPcHRpb25zKGNvbXBvbmVudENvbnN0cnVjdG9yLCB0YWcsIF9leHRlbmRzKHt9LCBvcHRpb25zLCB7fSwgY29uZmlnKSk7XG4gIH07XG4gIC8qIE1vZGlmeS9pbmplY3QgbmV3IHByb3BzIGF0IHJ1bnRpbWUgKi9cblxuXG4gIHRlbXBsYXRlRnVuY3Rpb24uYXR0cnMgPSBmdW5jdGlvbiAoYXR0cnMpIHtcbiAgICByZXR1cm4gY29uc3RydWN0V2l0aE9wdGlvbnMoY29tcG9uZW50Q29uc3RydWN0b3IsIHRhZywgX2V4dGVuZHMoe30sIG9wdGlvbnMsIHtcbiAgICAgIGF0dHJzOiBBcnJheS5wcm90b3R5cGUuY29uY2F0KG9wdGlvbnMuYXR0cnMsIGF0dHJzKS5maWx0ZXIoQm9vbGVhbilcbiAgICB9KSk7XG4gIH07XG5cbiAgcmV0dXJuIHRlbXBsYXRlRnVuY3Rpb247XG59XG5cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbi8qKlxuICBtaXhpbi1kZWVwOyBodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9taXhpbi1kZWVwXG4gIElubGluZWQgc3VjaCB0aGF0IGl0IHdpbGwgYmUgY29uc2lzdGVudGx5IHRyYW5zcGlsZWQgdG8gYW4gSUUtY29tcGF0aWJsZSBzeW50YXguXG5cbiAgVGhlIE1JVCBMaWNlbnNlIChNSVQpXG5cbiAgQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEpvbiBTY2hsaW5rZXJ0LlxuXG4gIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbiAgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuICBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4gIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbiAgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4gIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG5cbiAgVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbiAgYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG5cbiAgVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuICBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbiAgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4gIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbiAgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbiAgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuICBUSEUgU09GVFdBUkUuXG4qL1xudmFyIGlzT2JqZWN0ID0gZnVuY3Rpb24gaXNPYmplY3QodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiB2YWwgPT09ICdvYmplY3QnICYmIHZhbCAhPT0gbnVsbCAmJiAhQXJyYXkuaXNBcnJheSh2YWwpO1xufTtcblxudmFyIGlzVmFsaWRLZXkgPSBmdW5jdGlvbiBpc1ZhbGlkS2V5KGtleSkge1xuICByZXR1cm4ga2V5ICE9PSAnX19wcm90b19fJyAmJiBrZXkgIT09ICdjb25zdHJ1Y3RvcicgJiYga2V5ICE9PSAncHJvdG90eXBlJztcbn07XG5cbmZ1bmN0aW9uIG1peGluKHRhcmdldCwgdmFsLCBrZXkpIHtcbiAgdmFyIG9iaiA9IHRhcmdldFtrZXldO1xuXG4gIGlmIChpc09iamVjdCh2YWwpICYmIGlzT2JqZWN0KG9iaikpIHtcbiAgICBtaXhpbkRlZXAob2JqLCB2YWwpO1xuICB9IGVsc2Uge1xuICAgIHRhcmdldFtrZXldID0gdmFsO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1peGluRGVlcCh0YXJnZXQpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHJlc3QgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIHJlc3RbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgZm9yICh2YXIgX2kgPSAwLCBfcmVzdCA9IHJlc3Q7IF9pIDwgX3Jlc3QubGVuZ3RoOyBfaSsrKSB7XG4gICAgdmFyIG9iaiA9IF9yZXN0W19pXTtcblxuICAgIGlmIChpc09iamVjdChvYmopKSB7XG4gICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICAgIGlmIChpc1ZhbGlkS2V5KGtleSkpIHtcbiAgICAgICAgICBtaXhpbih0YXJnZXQsIG9ialtrZXldLCBrZXkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuLy8gXG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UgKi9cbnZhciBBRF9SRVBMQUNFUl9SID0gLyhhKShkKS9naTtcbi8qIFRoaXMgaXMgdGhlIFwiY2FwYWNpdHlcIiBvZiBvdXIgYWxwaGFiZXQgaS5lLiAyeDI2IGZvciBhbGwgbGV0dGVycyBwbHVzIHRoZWlyIGNhcGl0YWxpc2VkXG4gKiBjb3VudGVycGFydHMgKi9cblxudmFyIGNoYXJzTGVuZ3RoID0gNTI7XG4vKiBzdGFydCBhdCA3NSBmb3IgJ2EnIHVudGlsICd6JyAoMjUpIGFuZCB0aGVuIHN0YXJ0IGF0IDY1IGZvciBjYXBpdGFsaXNlZCBsZXR0ZXJzICovXG5cbnZhciBnZXRBbHBoYWJldGljQ2hhciA9IGZ1bmN0aW9uIGdldEFscGhhYmV0aWNDaGFyKGNvZGUpIHtcbiAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSArIChjb2RlID4gMjUgPyAzOSA6IDk3KSk7XG59O1xuLyogaW5wdXQgYSBudW1iZXIsIHVzdWFsbHkgYSBoYXNoIGFuZCBjb252ZXJ0IGl0IHRvIGJhc2UtNTIgKi9cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZUFscGhhYmV0aWNOYW1lKGNvZGUpIHtcbiAgdmFyIG5hbWUgPSAnJztcbiAgdmFyIHg7XG4gIC8qIGdldCBhIGNoYXIgYW5kIGRpdmlkZSBieSBhbHBoYWJldC1sZW5ndGggKi9cblxuICBmb3IgKHggPSBNYXRoLmFicyhjb2RlKTsgeCA+IGNoYXJzTGVuZ3RoOyB4ID0geCAvIGNoYXJzTGVuZ3RoIHwgMCkge1xuICAgIG5hbWUgPSBnZXRBbHBoYWJldGljQ2hhcih4ICUgY2hhcnNMZW5ndGgpICsgbmFtZTtcbiAgfVxuXG4gIHJldHVybiAoZ2V0QWxwaGFiZXRpY0NoYXIoeCAlIGNoYXJzTGVuZ3RoKSArIG5hbWUpLnJlcGxhY2UoQURfUkVQTEFDRVJfUiwgJyQxLSQyJyk7XG59XG5cbi8vIFxuZnVuY3Rpb24gaXNTdGF0aWNSdWxlcyhydWxlcykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdmFyIHJ1bGUgPSBydWxlc1tpXTtcblxuICAgIGlmIChpc0Z1bmN0aW9uKHJ1bGUpICYmICFpc1N0eWxlZENvbXBvbmVudChydWxlKSkge1xuICAgICAgLy8gZnVuY3Rpb25zIGFyZSBhbGxvd2VkIHRvIGJlIHN0YXRpYyBpZiB0aGV5J3JlIGp1c3QgYmVpbmdcbiAgICAgIC8vIHVzZWQgdG8gZ2V0IHRoZSBjbGFzc25hbWUgb2YgYSBuZXN0ZWQgc3R5bGVkIGNvbXBvbmVudFxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG4vLyBcbi8qXG4gQ29tcG9uZW50U3R5bGUgaXMgYWxsIHRoZSBDU1Mtc3BlY2lmaWMgc3R1ZmYsIG5vdFxuIHRoZSBSZWFjdC1zcGVjaWZpYyBzdHVmZi5cbiAqL1xuXG52YXIgQ29tcG9uZW50U3R5bGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBDb21wb25lbnRTdHlsZShydWxlcywgY29tcG9uZW50SWQpIHtcbiAgICB0aGlzLnJ1bGVzID0gcnVsZXM7XG4gICAgdGhpcy5zdGF0aWNSdWxlc0lkID0gJyc7XG4gICAgdGhpcy5pc1N0YXRpYyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgJiYgaXNTdGF0aWNSdWxlcyhydWxlcyk7XG4gICAgdGhpcy5jb21wb25lbnRJZCA9IGNvbXBvbmVudElkO1xuICAgIHRoaXMuYmFzZUhhc2ggPSBoYXNoKGNvbXBvbmVudElkKTsgLy8gTk9URTogVGhpcyByZWdpc3RlcnMgdGhlIGNvbXBvbmVudElkLCB3aGljaCBlbnN1cmVzIGEgY29uc2lzdGVudCBvcmRlclxuICAgIC8vIGZvciB0aGlzIGNvbXBvbmVudCdzIHN0eWxlcyBjb21wYXJlZCB0byBvdGhlcnNcblxuICAgIFN0eWxlU2hlZXQucmVnaXN0ZXJJZChjb21wb25lbnRJZCk7XG4gIH1cbiAgLypcbiAgICogRmxhdHRlbnMgYSBydWxlIHNldCBpbnRvIHZhbGlkIENTU1xuICAgKiBIYXNoZXMgaXQsIHdyYXBzIHRoZSB3aG9sZSBjaHVuayBpbiBhIC5oYXNoMTIzNCB7fVxuICAgKiBSZXR1cm5zIHRoZSBoYXNoIHRvIGJlIGluamVjdGVkIG9uIHJlbmRlcigpXG4gICAqICovXG5cblxuICB2YXIgX3Byb3RvID0gQ29tcG9uZW50U3R5bGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyA9IGZ1bmN0aW9uIGdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQsIHN0eWxpcykge1xuICAgIHZhciBjb21wb25lbnRJZCA9IHRoaXMuY29tcG9uZW50SWQ7IC8vIGZvcmNlIGR5bmFtaWMgY2xhc3NuYW1lcyBpZiB1c2VyLXN1cHBsaWVkIHN0eWxpcyBwbHVnaW5zIGFyZSBpbiB1c2VcblxuICAgIGlmICh0aGlzLmlzU3RhdGljICYmICFzdHlsaXMuaGFzaCkge1xuICAgICAgaWYgKHRoaXMuc3RhdGljUnVsZXNJZCAmJiBzdHlsZVNoZWV0Lmhhc05hbWVGb3JJZChjb21wb25lbnRJZCwgdGhpcy5zdGF0aWNSdWxlc0lkKSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0aWNSdWxlc0lkO1xuICAgICAgfVxuXG4gICAgICB2YXIgY3NzU3RhdGljID0gZmxhdHRlbih0aGlzLnJ1bGVzLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KS5qb2luKCcnKTtcbiAgICAgIHZhciBuYW1lID0gZ2VuZXJhdGVBbHBoYWJldGljTmFtZShwaGFzaCh0aGlzLmJhc2VIYXNoLCBjc3NTdGF0aWMubGVuZ3RoKSA+Pj4gMCk7XG5cbiAgICAgIGlmICghc3R5bGVTaGVldC5oYXNOYW1lRm9ySWQoY29tcG9uZW50SWQsIG5hbWUpKSB7XG4gICAgICAgIHZhciBjc3NTdGF0aWNGb3JtYXR0ZWQgPSBzdHlsaXMoY3NzU3RhdGljLCBcIi5cIiArIG5hbWUsIHVuZGVmaW5lZCwgY29tcG9uZW50SWQpO1xuICAgICAgICBzdHlsZVNoZWV0Lmluc2VydFJ1bGVzKGNvbXBvbmVudElkLCBuYW1lLCBjc3NTdGF0aWNGb3JtYXR0ZWQpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnN0YXRpY1J1bGVzSWQgPSBuYW1lO1xuICAgICAgcmV0dXJuIG5hbWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsZW5ndGggPSB0aGlzLnJ1bGVzLmxlbmd0aDtcbiAgICAgIHZhciBkeW5hbWljSGFzaCA9IHBoYXNoKHRoaXMuYmFzZUhhc2gsIHN0eWxpcy5oYXNoKTtcbiAgICAgIHZhciBjc3MgPSAnJztcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcGFydFJ1bGUgPSB0aGlzLnJ1bGVzW2ldO1xuXG4gICAgICAgIGlmICh0eXBlb2YgcGFydFJ1bGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgY3NzICs9IHBhcnRSdWxlO1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBkeW5hbWljSGFzaCA9IHBoYXNoKGR5bmFtaWNIYXNoLCBwYXJ0UnVsZSArIGkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwYXJ0Q2h1bmsgPSBmbGF0dGVuKHBhcnRSdWxlLCBleGVjdXRpb25Db250ZXh0LCBzdHlsZVNoZWV0KTtcbiAgICAgICAgICB2YXIgcGFydFN0cmluZyA9IEFycmF5LmlzQXJyYXkocGFydENodW5rKSA/IHBhcnRDaHVuay5qb2luKCcnKSA6IHBhcnRDaHVuaztcbiAgICAgICAgICBkeW5hbWljSGFzaCA9IHBoYXNoKGR5bmFtaWNIYXNoLCBwYXJ0U3RyaW5nICsgaSk7XG4gICAgICAgICAgY3NzICs9IHBhcnRTdHJpbmc7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdmFyIF9uYW1lID0gZ2VuZXJhdGVBbHBoYWJldGljTmFtZShkeW5hbWljSGFzaCA+Pj4gMCk7XG5cbiAgICAgIGlmICghc3R5bGVTaGVldC5oYXNOYW1lRm9ySWQoY29tcG9uZW50SWQsIF9uYW1lKSkge1xuICAgICAgICB2YXIgY3NzRm9ybWF0dGVkID0gc3R5bGlzKGNzcywgXCIuXCIgKyBfbmFtZSwgdW5kZWZpbmVkLCBjb21wb25lbnRJZCk7XG4gICAgICAgIHN0eWxlU2hlZXQuaW5zZXJ0UnVsZXMoY29tcG9uZW50SWQsIF9uYW1lLCBjc3NGb3JtYXR0ZWQpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gX25hbWU7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBDb21wb25lbnRTdHlsZTtcbn0oKTtcblxuLy8gXG52YXIgTElNSVQgPSAyMDA7XG52YXIgY3JlYXRlV2FyblRvb01hbnlDbGFzc2VzID0gKGZ1bmN0aW9uIChkaXNwbGF5TmFtZSwgY29tcG9uZW50SWQpIHtcbiAgdmFyIGdlbmVyYXRlZENsYXNzZXMgPSB7fTtcbiAgdmFyIHdhcm5pbmdTZWVuID0gZmFsc2U7XG4gIHJldHVybiBmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgaWYgKCF3YXJuaW5nU2Vlbikge1xuICAgICAgZ2VuZXJhdGVkQ2xhc3Nlc1tjbGFzc05hbWVdID0gdHJ1ZTtcblxuICAgICAgaWYgKE9iamVjdC5rZXlzKGdlbmVyYXRlZENsYXNzZXMpLmxlbmd0aCA+PSBMSU1JVCkge1xuICAgICAgICAvLyBVbmFibGUgdG8gZmluZCBsYXRlc3RSdWxlIGluIHRlc3QgZW52aXJvbm1lbnQuXG5cbiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSwgcHJlZmVyLXRlbXBsYXRlICovXG4gICAgICAgIHZhciBwYXJzZWRJZFN0cmluZyA9IGNvbXBvbmVudElkID8gXCIgd2l0aCB0aGUgaWQgb2YgXFxcIlwiICsgY29tcG9uZW50SWQgKyBcIlxcXCJcIiA6ICcnO1xuICAgICAgICBjb25zb2xlLndhcm4oXCJPdmVyIFwiICsgTElNSVQgKyBcIiBjbGFzc2VzIHdlcmUgZ2VuZXJhdGVkIGZvciBjb21wb25lbnQgXCIgKyBkaXNwbGF5TmFtZSArIHBhcnNlZElkU3RyaW5nICsgXCIuXFxuXCIgKyAnQ29uc2lkZXIgdXNpbmcgdGhlIGF0dHJzIG1ldGhvZCwgdG9nZXRoZXIgd2l0aCBhIHN0eWxlIG9iamVjdCBmb3IgZnJlcXVlbnRseSBjaGFuZ2VkIHN0eWxlcy5cXG4nICsgJ0V4YW1wbGU6XFxuJyArICcgIGNvbnN0IENvbXBvbmVudCA9IHN0eWxlZC5kaXYuYXR0cnMocHJvcHMgPT4gKHtcXG4nICsgJyAgICBzdHlsZToge1xcbicgKyAnICAgICAgYmFja2dyb3VuZDogcHJvcHMuYmFja2dyb3VuZCxcXG4nICsgJyAgICB9LFxcbicgKyAnICB9KSlgd2lkdGg6IDEwMCU7YFxcblxcbicgKyAnICA8Q29tcG9uZW50IC8+Jyk7XG4gICAgICAgIHdhcm5pbmdTZWVuID0gdHJ1ZTtcbiAgICAgICAgZ2VuZXJhdGVkQ2xhc3NlcyA9IHt9O1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn0pO1xuXG4vLyBcbnZhciBpbnZhbGlkSG9va0NhbGxSZSA9IC9pbnZhbGlkIGhvb2sgY2FsbC9pO1xudmFyIHNlZW4gPSBuZXcgU2V0KCk7XG52YXIgY2hlY2tEeW5hbWljQ3JlYXRpb24gPSBmdW5jdGlvbiBjaGVja0R5bmFtaWNDcmVhdGlvbihkaXNwbGF5TmFtZSwgY29tcG9uZW50SWQpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB2YXIgcGFyc2VkSWRTdHJpbmcgPSBjb21wb25lbnRJZCA/IFwiIHdpdGggdGhlIGlkIG9mIFxcXCJcIiArIGNvbXBvbmVudElkICsgXCJcXFwiXCIgOiAnJztcbiAgICB2YXIgbWVzc2FnZSA9IFwiVGhlIGNvbXBvbmVudCBcIiArIGRpc3BsYXlOYW1lICsgcGFyc2VkSWRTdHJpbmcgKyBcIiBoYXMgYmVlbiBjcmVhdGVkIGR5bmFtaWNhbGx5LlxcblwiICsgJ1lvdSBtYXkgc2VlIHRoaXMgd2FybmluZyBiZWNhdXNlIHlvdVxcJ3ZlIGNhbGxlZCBzdHlsZWQgaW5zaWRlIGFub3RoZXIgY29tcG9uZW50LlxcbicgKyAnVG8gcmVzb2x2ZSB0aGlzIG9ubHkgY3JlYXRlIG5ldyBTdHlsZWRDb21wb25lbnRzIG91dHNpZGUgb2YgYW55IHJlbmRlciBtZXRob2QgYW5kIGZ1bmN0aW9uIGNvbXBvbmVudC4nO1xuXG4gICAgdHJ5IHtcbiAgICAgIC8vIFdlIHB1cnBvc2VmdWxseSBjYWxsIGB1c2VSZWZgIG91dHNpZGUgb2YgYSBjb21wb25lbnQgYW5kIGV4cGVjdCBpdCB0byB0aHJvd1xuICAgICAgLy8gSWYgaXQgZG9lc24ndCwgdGhlbiB3ZSdyZSBpbnNpZGUgYW5vdGhlciBjb21wb25lbnQuXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3NcbiAgICAgIHVzZVJlZigpO1xuXG4gICAgICBpZiAoIXNlZW4uaGFzKG1lc3NhZ2UpKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgIGNvbnNvbGUud2FybihtZXNzYWdlKTtcbiAgICAgICAgc2Vlbi5hZGQobWVzc2FnZSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIC8vIFRoZSBlcnJvciBoZXJlIGlzIGV4cGVjdGVkLCBzaW5jZSB3ZSdyZSBleHBlY3RpbmcgYW55dGhpbmcgdGhhdCB1c2VzIGBjaGVja0R5bmFtaWNDcmVhdGlvbmAgdG9cbiAgICAgIC8vIGJlIGNhbGxlZCBvdXRzaWRlIG9mIGEgUmVhY3QgY29tcG9uZW50LlxuICAgICAgaWYgKGludmFsaWRIb29rQ2FsbFJlLnRlc3QoZXJyb3IubWVzc2FnZSkpIHtcbiAgICAgICAgLy8gVGhpcyBzaG91bGRuJ3QgaGFwcGVuLCBidXQgcmVzZXRzIGB3YXJuaW5nU2VlbmAgaWYgd2UgaGFkIHRoaXMgZXJyb3IgaGFwcGVuIGludGVybWl0dGVudGx5XG4gICAgICAgIHNlZW5bXCJkZWxldGVcIl0obWVzc2FnZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59O1xuXG4vLyBcbnZhciBkZXRlcm1pbmVUaGVtZSA9IChmdW5jdGlvbiAocHJvcHMsIHByb3ZpZGVkVGhlbWUsIGRlZmF1bHRQcm9wcykge1xuICBpZiAoZGVmYXVsdFByb3BzID09PSB2b2lkIDApIHtcbiAgICBkZWZhdWx0UHJvcHMgPSBFTVBUWV9PQkpFQ1Q7XG4gIH1cblxuICByZXR1cm4gcHJvcHMudGhlbWUgIT09IGRlZmF1bHRQcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZSB8fCBwcm92aWRlZFRoZW1lIHx8IGRlZmF1bHRQcm9wcy50aGVtZTtcbn0pO1xuXG4vLyBcbi8vIFNvdXJjZTogaHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzc29tLTEvI3NlcmlhbGl6ZS1hbi1pZGVudGlmaWVyXG4vLyBDb250cm9sIGNoYXJhY3RlcnMgYW5kIG5vbi1sZXR0ZXIgZmlyc3Qgc3ltYm9scyBhcmUgbm90IHN1cHBvcnRlZFxudmFyIGVzY2FwZVJlZ2V4ID0gL1shXCIjJCUmJygpKissLi86Ozw9Pj9AW1xcXFxcXF1eYHt8fX4tXSsvZztcbnZhciBkYXNoZXNBdEVuZHMgPSAvKF4tfC0kKS9nO1xuLyoqXG4gKiBUT0RPOiBFeHBsb3JlIHVzaW5nIENTUy5lc2NhcGUgd2hlbiBpdCBiZWNvbWVzIG1vcmUgYXZhaWxhYmxlXG4gKiBpbiBldmVyZ3JlZW4gYnJvd3NlcnMuXG4gKi9cblxuZnVuY3Rpb24gZXNjYXBlKHN0cikge1xuICByZXR1cm4gc3RyIC8vIFJlcGxhY2UgYWxsIHBvc3NpYmxlIENTUyBzZWxlY3RvcnNcbiAgLnJlcGxhY2UoZXNjYXBlUmVnZXgsICctJykgLy8gUmVtb3ZlIGV4dHJhbmVvdXMgaHlwaGVucyBhdCB0aGUgc3RhcnQgYW5kIGVuZFxuICAucmVwbGFjZShkYXNoZXNBdEVuZHMsICcnKTtcbn1cblxuLy8gXG5mdW5jdGlvbiBpc1RhZyh0YXJnZXQpIHtcbiAgcmV0dXJuIHR5cGVvZiB0YXJnZXQgPT09ICdzdHJpbmcnICYmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nID8gdGFyZ2V0LmNoYXJBdCgwKSA9PT0gdGFyZ2V0LmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpIDogdHJ1ZSk7XG59XG5cbi8vIFxuZnVuY3Rpb24gZ2VuZXJhdGVEaXNwbGF5TmFtZSh0YXJnZXQpIHtcbiAgLy8gJEZsb3dGaXhNZVxuICByZXR1cm4gaXNUYWcodGFyZ2V0KSA/IFwic3R5bGVkLlwiICsgdGFyZ2V0IDogXCJTdHlsZWQoXCIgKyBnZXRDb21wb25lbnROYW1lKHRhcmdldCkgKyBcIilcIjtcbn1cblxuLy8gXG52YXIgZ2VuZXJhdGVDb21wb25lbnRJZCA9IChmdW5jdGlvbiAoc3RyKSB7XG4gIHJldHVybiBnZW5lcmF0ZUFscGhhYmV0aWNOYW1lKGhhc2goc3RyKSA+Pj4gMCk7XG59KTtcblxuLyoqXG4gKiBDb252ZW5pZW5jZSBmdW5jdGlvbiBmb3Igam9pbmluZyBzdHJpbmdzIHRvIGZvcm0gY2xhc3NOYW1lIGNoYWluc1xuICovXG5mdW5jdGlvbiBqb2luU3RyaW5ncyhhLCBiKSB7XG4gIHJldHVybiBhICYmIGIgPyBhICsgXCIgXCIgKyBiIDogYSB8fCBiO1xufVxuXG52YXIgVGhlbWVDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCgpO1xudmFyIFRoZW1lQ29uc3VtZXIgPSBUaGVtZUNvbnRleHQuQ29uc3VtZXI7XG5cbmZ1bmN0aW9uIG1lcmdlVGhlbWUodGhlbWUsIG91dGVyVGhlbWUpIHtcbiAgaWYgKCF0aGVtZSkge1xuICAgIHJldHVybiB0aHJvd1N0eWxlZENvbXBvbmVudHNFcnJvcigxNCk7XG4gIH1cblxuICBpZiAoaXNGdW5jdGlvbih0aGVtZSkpIHtcbiAgICB2YXIgbWVyZ2VkVGhlbWUgPSB0aGVtZShvdXRlclRoZW1lKTtcblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIChtZXJnZWRUaGVtZSA9PT0gbnVsbCB8fCBBcnJheS5pc0FycmF5KG1lcmdlZFRoZW1lKSB8fCB0eXBlb2YgbWVyZ2VkVGhlbWUgIT09ICdvYmplY3QnKSkge1xuICAgICAgcmV0dXJuIHRocm93U3R5bGVkQ29tcG9uZW50c0Vycm9yKDcpO1xuICAgIH1cblxuICAgIHJldHVybiBtZXJnZWRUaGVtZTtcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KHRoZW1lKSB8fCB0eXBlb2YgdGhlbWUgIT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIHRocm93U3R5bGVkQ29tcG9uZW50c0Vycm9yKDgpO1xuICB9XG5cbiAgcmV0dXJuIG91dGVyVGhlbWUgPyBfZXh0ZW5kcyh7fSwgb3V0ZXJUaGVtZSwge30sIHRoZW1lKSA6IHRoZW1lO1xufVxuLyoqXG4gKiBQcm92aWRlIGEgdGhlbWUgdG8gYW4gZW50aXJlIHJlYWN0IGNvbXBvbmVudCB0cmVlIHZpYSBjb250ZXh0XG4gKi9cblxuXG5mdW5jdGlvbiBUaGVtZVByb3ZpZGVyKHByb3BzKSB7XG4gIHZhciBvdXRlclRoZW1lID0gdXNlQ29udGV4dChUaGVtZUNvbnRleHQpO1xuICB2YXIgdGhlbWVDb250ZXh0ID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIG1lcmdlVGhlbWUocHJvcHMudGhlbWUsIG91dGVyVGhlbWUpO1xuICB9LCBbcHJvcHMudGhlbWUsIG91dGVyVGhlbWVdKTtcblxuICBpZiAoIXByb3BzLmNoaWxkcmVuKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGhlbWVDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IHRoZW1lQ29udGV4dFxuICB9LCBwcm9wcy5jaGlsZHJlbik7XG59XG5cbi8qIGdsb2JhbCAkQ2FsbCAqL1xuXG52YXIgaWRlbnRpZmllcnMgPSB7fTtcbi8qIFdlIGRlcGVuZCBvbiBjb21wb25lbnRzIGhhdmluZyB1bmlxdWUgSURzICovXG5cbmZ1bmN0aW9uIGdlbmVyYXRlSWQoZGlzcGxheU5hbWUsIHBhcmVudENvbXBvbmVudElkKSB7XG4gIHZhciBuYW1lID0gdHlwZW9mIGRpc3BsYXlOYW1lICE9PSAnc3RyaW5nJyA/ICdzYycgOiBlc2NhcGUoZGlzcGxheU5hbWUpOyAvLyBFbnN1cmUgdGhhdCBubyBkaXNwbGF5TmFtZSBjYW4gbGVhZCB0byBkdXBsaWNhdGUgY29tcG9uZW50SWRzXG5cbiAgaWRlbnRpZmllcnNbbmFtZV0gPSAoaWRlbnRpZmllcnNbbmFtZV0gfHwgMCkgKyAxO1xuICB2YXIgY29tcG9uZW50SWQgPSBuYW1lICsgXCItXCIgKyBnZW5lcmF0ZUNvbXBvbmVudElkKG5hbWUgKyBpZGVudGlmaWVyc1tuYW1lXSk7XG4gIHJldHVybiBwYXJlbnRDb21wb25lbnRJZCA/IHBhcmVudENvbXBvbmVudElkICsgXCItXCIgKyBjb21wb25lbnRJZCA6IGNvbXBvbmVudElkO1xufVxuXG5mdW5jdGlvbiB1c2VSZXNvbHZlZEF0dHJzKHRoZW1lLCBwcm9wcywgYXR0cnMpIHtcbiAgaWYgKHRoZW1lID09PSB2b2lkIDApIHtcbiAgICB0aGVtZSA9IEVNUFRZX09CSkVDVDtcbiAgfVxuXG4gIC8vIE5PVEU6IGNhbid0IG1lbW9pemUgdGhpc1xuICAvLyByZXR1cm5zIFtjb250ZXh0LCByZXNvbHZlZEF0dHJzXVxuICAvLyB3aGVyZSByZXNvbHZlZEF0dHJzIGlzIG9ubHkgdGhlIHRoaW5ncyBpbmplY3RlZCBieSB0aGUgYXR0cnMgdGhlbXNlbHZlc1xuICB2YXIgY29udGV4dCA9IF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIHRoZW1lOiB0aGVtZVxuICB9KTtcblxuICB2YXIgcmVzb2x2ZWRBdHRycyA9IHt9O1xuICBhdHRycy5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyRGVmKSB7XG4gICAgdmFyIHJlc29sdmVkQXR0ckRlZiA9IGF0dHJEZWY7XG4gICAgdmFyIGtleTtcblxuICAgIGlmIChpc0Z1bmN0aW9uKHJlc29sdmVkQXR0ckRlZikpIHtcbiAgICAgIHJlc29sdmVkQXR0ckRlZiA9IHJlc29sdmVkQXR0ckRlZihjb250ZXh0KTtcbiAgICB9XG4gICAgLyogZXNsaW50LWRpc2FibGUgZ3VhcmQtZm9yLWluICovXG5cblxuICAgIGZvciAoa2V5IGluIHJlc29sdmVkQXR0ckRlZikge1xuICAgICAgY29udGV4dFtrZXldID0gcmVzb2x2ZWRBdHRyc1trZXldID0ga2V5ID09PSAnY2xhc3NOYW1lJyA/IGpvaW5TdHJpbmdzKHJlc29sdmVkQXR0cnNba2V5XSwgcmVzb2x2ZWRBdHRyRGVmW2tleV0pIDogcmVzb2x2ZWRBdHRyRGVmW2tleV07XG4gICAgfVxuICAgIC8qIGVzbGludC1lbmFibGUgZ3VhcmQtZm9yLWluICovXG5cbiAgfSk7XG4gIHJldHVybiBbY29udGV4dCwgcmVzb2x2ZWRBdHRyc107XG59XG5cbmZ1bmN0aW9uIHVzZUluamVjdGVkU3R5bGUoY29tcG9uZW50U3R5bGUsIGhhc0F0dHJzLCByZXNvbHZlZEF0dHJzLCB3YXJuVG9vTWFueUNsYXNzZXMpIHtcbiAgdmFyIHN0eWxlU2hlZXQgPSB1c2VTdHlsZVNoZWV0KCk7XG4gIHZhciBzdHlsaXMgPSB1c2VTdHlsaXMoKTsgLy8gc3RhdGljYWxseSBzdHlsZWQtY29tcG9uZW50cyBkb24ndCBuZWVkIHRvIGJ1aWxkIGFuIGV4ZWN1dGlvbiBjb250ZXh0IG9iamVjdCxcbiAgLy8gYW5kIHNob3VsZG4ndCBiZSBpbmNyZWFzaW5nIHRoZSBudW1iZXIgb2YgY2xhc3MgbmFtZXNcblxuICB2YXIgaXNTdGF0aWMgPSBjb21wb25lbnRTdHlsZS5pc1N0YXRpYyAmJiAhaGFzQXR0cnM7XG4gIHZhciBjbGFzc05hbWUgPSBpc1N0YXRpYyA/IGNvbXBvbmVudFN0eWxlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKEVNUFRZX09CSkVDVCwgc3R5bGVTaGVldCwgc3R5bGlzKSA6IGNvbXBvbmVudFN0eWxlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKHJlc29sdmVkQXR0cnMsIHN0eWxlU2hlZXQsIHN0eWxpcyk7XG4gIHVzZURlYnVnVmFsdWUoY2xhc3NOYW1lKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhaXNTdGF0aWMgJiYgd2FyblRvb01hbnlDbGFzc2VzKSB7XG4gICAgd2FyblRvb01hbnlDbGFzc2VzKGNsYXNzTmFtZSk7XG4gIH1cblxuICByZXR1cm4gY2xhc3NOYW1lO1xufVxuXG5mdW5jdGlvbiB1c2VTdHlsZWRDb21wb25lbnRJbXBsKGZvcndhcmRlZENvbXBvbmVudCwgcHJvcHMsIGZvcndhcmRlZFJlZikge1xuICB2YXIgY29tcG9uZW50QXR0cnMgPSBmb3J3YXJkZWRDb21wb25lbnQuYXR0cnMsXG4gICAgICBjb21wb25lbnRTdHlsZSA9IGZvcndhcmRlZENvbXBvbmVudC5jb21wb25lbnRTdHlsZSxcbiAgICAgIGRlZmF1bHRQcm9wcyA9IGZvcndhcmRlZENvbXBvbmVudC5kZWZhdWx0UHJvcHMsXG4gICAgICBmb2xkZWRDb21wb25lbnRJZHMgPSBmb3J3YXJkZWRDb21wb25lbnQuZm9sZGVkQ29tcG9uZW50SWRzLFxuICAgICAgc2hvdWxkRm9yd2FyZFByb3AgPSBmb3J3YXJkZWRDb21wb25lbnQuc2hvdWxkRm9yd2FyZFByb3AsXG4gICAgICBzdHlsZWRDb21wb25lbnRJZCA9IGZvcndhcmRlZENvbXBvbmVudC5zdHlsZWRDb21wb25lbnRJZCxcbiAgICAgIHRhcmdldCA9IGZvcndhcmRlZENvbXBvbmVudC50YXJnZXQ7XG4gIHVzZURlYnVnVmFsdWUoc3R5bGVkQ29tcG9uZW50SWQpOyAvLyBOT1RFOiB0aGUgbm9uLWhvb2tzIHZlcnNpb24gb25seSBzdWJzY3JpYmVzIHRvIHRoaXMgd2hlbiAhY29tcG9uZW50U3R5bGUuaXNTdGF0aWMsXG4gIC8vIGJ1dCB0aGF0J2QgYmUgYWdhaW5zdCB0aGUgcnVsZXMtb2YtaG9va3MuIFdlIGNvdWxkIGJlIG5hdWdodHkgYW5kIGRvIGl0IGFueXdheSBhcyBpdFxuICAvLyBzaG91bGQgYmUgYW4gaW1tdXRhYmxlIHZhbHVlLCBidXQgYmVoYXZlIGZvciBub3cuXG5cbiAgdmFyIHRoZW1lID0gZGV0ZXJtaW5lVGhlbWUocHJvcHMsIHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KSwgZGVmYXVsdFByb3BzKTtcblxuICB2YXIgX3VzZVJlc29sdmVkQXR0cnMgPSB1c2VSZXNvbHZlZEF0dHJzKHRoZW1lIHx8IEVNUFRZX09CSkVDVCwgcHJvcHMsIGNvbXBvbmVudEF0dHJzKSxcbiAgICAgIGNvbnRleHQgPSBfdXNlUmVzb2x2ZWRBdHRyc1swXSxcbiAgICAgIGF0dHJzID0gX3VzZVJlc29sdmVkQXR0cnNbMV07XG5cbiAgdmFyIGdlbmVyYXRlZENsYXNzTmFtZSA9IHVzZUluamVjdGVkU3R5bGUoY29tcG9uZW50U3R5bGUsIGNvbXBvbmVudEF0dHJzLmxlbmd0aCA+IDAsIGNvbnRleHQsIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgPyBmb3J3YXJkZWRDb21wb25lbnQud2FyblRvb01hbnlDbGFzc2VzIDogdW5kZWZpbmVkKTtcbiAgdmFyIHJlZlRvRm9yd2FyZCA9IGZvcndhcmRlZFJlZjtcbiAgdmFyIGVsZW1lbnRUb0JlQ3JlYXRlZCA9IGF0dHJzLiRhcyB8fCBwcm9wcy4kYXMgfHwgYXR0cnMuYXMgfHwgcHJvcHMuYXMgfHwgdGFyZ2V0O1xuICB2YXIgaXNUYXJnZXRUYWcgPSBpc1RhZyhlbGVtZW50VG9CZUNyZWF0ZWQpO1xuICB2YXIgY29tcHV0ZWRQcm9wcyA9IGF0dHJzICE9PSBwcm9wcyA/IF9leHRlbmRzKHt9LCBwcm9wcywge30sIGF0dHJzKSA6IHByb3BzO1xuICB2YXIgcHJvcEZpbHRlckZuID0gc2hvdWxkRm9yd2FyZFByb3AgfHwgaXNUYXJnZXRUYWcgJiYgdmFsaWRBdHRyO1xuICB2YXIgcHJvcHNGb3JFbGVtZW50ID0ge307IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cblxuICBmb3IgKHZhciBrZXkgaW4gY29tcHV0ZWRQcm9wcykge1xuICAgIGlmIChrZXlbMF0gPT09ICckJyB8fCBrZXkgPT09ICdhcycpIGNvbnRpbnVlO2Vsc2UgaWYgKGtleSA9PT0gJ2ZvcndhcmRlZEFzJykge1xuICAgICAgcHJvcHNGb3JFbGVtZW50LmFzID0gY29tcHV0ZWRQcm9wc1trZXldO1xuICAgIH0gZWxzZSBpZiAoIXByb3BGaWx0ZXJGbiB8fCBwcm9wRmlsdGVyRm4oa2V5LCB2YWxpZEF0dHIpKSB7XG4gICAgICAvLyBEb24ndCBwYXNzIHRocm91Z2ggbm9uIEhUTUwgdGFncyB0aHJvdWdoIHRvIEhUTUwgZWxlbWVudHNcbiAgICAgIHByb3BzRm9yRWxlbWVudFtrZXldID0gY29tcHV0ZWRQcm9wc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIGlmIChwcm9wcy5zdHlsZSAmJiBhdHRycy5zdHlsZSAhPT0gcHJvcHMuc3R5bGUpIHtcbiAgICBwcm9wc0ZvckVsZW1lbnQuc3R5bGUgPSBfZXh0ZW5kcyh7fSwgcHJvcHMuc3R5bGUsIHt9LCBhdHRycy5zdHlsZSk7XG4gIH1cblxuICBwcm9wc0ZvckVsZW1lbnQuY2xhc3NOYW1lID0gQXJyYXkucHJvdG90eXBlLmNvbmNhdChmb2xkZWRDb21wb25lbnRJZHMsIHN0eWxlZENvbXBvbmVudElkLCBnZW5lcmF0ZWRDbGFzc05hbWUgIT09IHN0eWxlZENvbXBvbmVudElkID8gZ2VuZXJhdGVkQ2xhc3NOYW1lIDogbnVsbCwgcHJvcHMuY2xhc3NOYW1lLCBhdHRycy5jbGFzc05hbWUpLmZpbHRlcihCb29sZWFuKS5qb2luKCcgJyk7XG4gIHByb3BzRm9yRWxlbWVudC5yZWYgPSByZWZUb0ZvcndhcmQ7XG4gIHJldHVybiBjcmVhdGVFbGVtZW50KGVsZW1lbnRUb0JlQ3JlYXRlZCwgcHJvcHNGb3JFbGVtZW50KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVkQ29tcG9uZW50KHRhcmdldCwgb3B0aW9ucywgcnVsZXMpIHtcbiAgdmFyIGlzVGFyZ2V0U3R5bGVkQ29tcCA9IGlzU3R5bGVkQ29tcG9uZW50KHRhcmdldCk7XG4gIHZhciBpc0NvbXBvc2l0ZUNvbXBvbmVudCA9ICFpc1RhZyh0YXJnZXQpO1xuICB2YXIgX29wdGlvbnMkZGlzcGxheU5hbWUgPSBvcHRpb25zLmRpc3BsYXlOYW1lLFxuICAgICAgZGlzcGxheU5hbWUgPSBfb3B0aW9ucyRkaXNwbGF5TmFtZSA9PT0gdm9pZCAwID8gZ2VuZXJhdGVEaXNwbGF5TmFtZSh0YXJnZXQpIDogX29wdGlvbnMkZGlzcGxheU5hbWUsXG4gICAgICBfb3B0aW9ucyRjb21wb25lbnRJZCA9IG9wdGlvbnMuY29tcG9uZW50SWQsXG4gICAgICBjb21wb25lbnRJZCA9IF9vcHRpb25zJGNvbXBvbmVudElkID09PSB2b2lkIDAgPyBnZW5lcmF0ZUlkKG9wdGlvbnMuZGlzcGxheU5hbWUsIG9wdGlvbnMucGFyZW50Q29tcG9uZW50SWQpIDogX29wdGlvbnMkY29tcG9uZW50SWQsXG4gICAgICBfb3B0aW9ucyRhdHRycyA9IG9wdGlvbnMuYXR0cnMsXG4gICAgICBhdHRycyA9IF9vcHRpb25zJGF0dHJzID09PSB2b2lkIDAgPyBFTVBUWV9BUlJBWSA6IF9vcHRpb25zJGF0dHJzO1xuICB2YXIgc3R5bGVkQ29tcG9uZW50SWQgPSBvcHRpb25zLmRpc3BsYXlOYW1lICYmIG9wdGlvbnMuY29tcG9uZW50SWQgPyBlc2NhcGUob3B0aW9ucy5kaXNwbGF5TmFtZSkgKyBcIi1cIiArIG9wdGlvbnMuY29tcG9uZW50SWQgOiBvcHRpb25zLmNvbXBvbmVudElkIHx8IGNvbXBvbmVudElkOyAvLyBmb2xkIHRoZSB1bmRlcmx5aW5nIFN0eWxlZENvbXBvbmVudCBhdHRycyB1cCAoaW1wbGljaXQgZXh0ZW5kKVxuXG4gIHZhciBmaW5hbEF0dHJzID0gLy8gJEZsb3dGaXhNZVxuICBpc1RhcmdldFN0eWxlZENvbXAgJiYgdGFyZ2V0LmF0dHJzID8gQXJyYXkucHJvdG90eXBlLmNvbmNhdCh0YXJnZXQuYXR0cnMsIGF0dHJzKS5maWx0ZXIoQm9vbGVhbikgOiBhdHRyczsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG5cbiAgdmFyIHNob3VsZEZvcndhcmRQcm9wID0gb3B0aW9ucy5zaG91bGRGb3J3YXJkUHJvcDsgLy8gJEZsb3dGaXhNZVxuXG4gIGlmIChpc1RhcmdldFN0eWxlZENvbXAgJiYgdGFyZ2V0LnNob3VsZEZvcndhcmRQcm9wKSB7XG4gICAgaWYgKHNob3VsZEZvcndhcmRQcm9wKSB7XG4gICAgICAvLyBjb21wb3NlIG5lc3RlZCBzaG91bGRGb3J3YXJkUHJvcCBjYWxsc1xuICAgICAgc2hvdWxkRm9yd2FyZFByb3AgPSBmdW5jdGlvbiBzaG91bGRGb3J3YXJkUHJvcChwcm9wLCBmaWx0ZXJGbikge1xuICAgICAgICByZXR1cm4gKC8vICRGbG93Rml4TWVcbiAgICAgICAgICB0YXJnZXQuc2hvdWxkRm9yd2FyZFByb3AocHJvcCwgZmlsdGVyRm4pICYmIG9wdGlvbnMuc2hvdWxkRm9yd2FyZFByb3AocHJvcCwgZmlsdGVyRm4pXG4gICAgICAgICk7XG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgIHNob3VsZEZvcndhcmRQcm9wID0gdGFyZ2V0LnNob3VsZEZvcndhcmRQcm9wO1xuICAgIH1cbiAgfVxuXG4gIHZhciBjb21wb25lbnRTdHlsZSA9IG5ldyBDb21wb25lbnRTdHlsZShpc1RhcmdldFN0eWxlZENvbXAgPyAvLyBmb2xkIHRoZSB1bmRlcmx5aW5nIFN0eWxlZENvbXBvbmVudCBydWxlcyB1cCAoaW1wbGljaXQgZXh0ZW5kKVxuICAvLyAkRmxvd0ZpeE1lXG4gIHRhcmdldC5jb21wb25lbnRTdHlsZS5ydWxlcy5jb25jYXQocnVsZXMpIDogcnVsZXMsIHN0eWxlZENvbXBvbmVudElkKTtcbiAgLyoqXG4gICAqIGZvcndhcmRSZWYgY3JlYXRlcyBhIG5ldyBpbnRlcmltIGNvbXBvbmVudCwgd2hpY2ggd2UnbGwgdGFrZSBhZHZhbnRhZ2Ugb2ZcbiAgICogaW5zdGVhZCBvZiBleHRlbmRpbmcgUGFyZW50Q29tcG9uZW50IHRvIGNyZWF0ZSBfYW5vdGhlcl8gaW50ZXJpbSBjbGFzc1xuICAgKi9cblxuICB2YXIgV3JhcHBlZFN0eWxlZENvbXBvbmVudDsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL3J1bGVzLW9mLWhvb2tzXG5cbiAgdmFyIGZvcndhcmRSZWYgPSBmdW5jdGlvbiBmb3J3YXJkUmVmKHByb3BzLCByZWYpIHtcbiAgICByZXR1cm4gdXNlU3R5bGVkQ29tcG9uZW50SW1wbChXcmFwcGVkU3R5bGVkQ29tcG9uZW50LCBwcm9wcywgcmVmKTtcbiAgfTtcblxuICBmb3J3YXJkUmVmLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7IC8vICRGbG93Rml4TWUgdGhpcyBpcyBhIGZvcmNlZCBjYXN0IHRvIG1lcmdlIGl0IFN0eWxlZENvbXBvbmVudFdyYXBwZXJQcm9wZXJ0aWVzXG5cbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudCA9IFJlYWN0LmZvcndhcmRSZWYoZm9yd2FyZFJlZik7XG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuYXR0cnMgPSBmaW5hbEF0dHJzO1xuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LmNvbXBvbmVudFN0eWxlID0gY29tcG9uZW50U3R5bGU7XG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC5zaG91bGRGb3J3YXJkUHJvcCA9IHNob3VsZEZvcndhcmRQcm9wOyAvLyB0aGlzIHN0YXRpYyBpcyB1c2VkIHRvIHByZXNlcnZlIHRoZSBjYXNjYWRlIG9mIHN0YXRpYyBjbGFzc2VzIGZvciBjb21wb25lbnQgc2VsZWN0b3JcbiAgLy8gcHVycG9zZXM7IHRoaXMgaXMgZXNwZWNpYWxseSBpbXBvcnRhbnQgd2l0aCB1c2FnZSBvZiB0aGUgY3NzIHByb3BcblxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LmZvbGRlZENvbXBvbmVudElkcyA9IGlzVGFyZ2V0U3R5bGVkQ29tcCA/IC8vICRGbG93Rml4TWVcbiAgQXJyYXkucHJvdG90eXBlLmNvbmNhdCh0YXJnZXQuZm9sZGVkQ29tcG9uZW50SWRzLCB0YXJnZXQuc3R5bGVkQ29tcG9uZW50SWQpIDogRU1QVFlfQVJSQVk7XG4gIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuc3R5bGVkQ29tcG9uZW50SWQgPSBzdHlsZWRDb21wb25lbnRJZDsgLy8gZm9sZCB0aGUgdW5kZXJseWluZyBTdHlsZWRDb21wb25lbnQgdGFyZ2V0IHVwIHNpbmNlIHdlIGZvbGRlZCB0aGUgc3R5bGVzXG5cbiAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC50YXJnZXQgPSBpc1RhcmdldFN0eWxlZENvbXAgPyAvLyAkRmxvd0ZpeE1lXG4gIHRhcmdldC50YXJnZXQgOiB0YXJnZXQ7IC8vICRGbG93Rml4TWVcblxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LndpdGhDb21wb25lbnQgPSBmdW5jdGlvbiB3aXRoQ29tcG9uZW50KHRhZykge1xuICAgIHZhciBwcmV2aW91c0NvbXBvbmVudElkID0gb3B0aW9ucy5jb21wb25lbnRJZCxcbiAgICAgICAgb3B0aW9uc1RvQ29weSA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKG9wdGlvbnMsIFtcImNvbXBvbmVudElkXCJdKTtcblxuICAgIHZhciBuZXdDb21wb25lbnRJZCA9IHByZXZpb3VzQ29tcG9uZW50SWQgJiYgcHJldmlvdXNDb21wb25lbnRJZCArIFwiLVwiICsgKGlzVGFnKHRhZykgPyB0YWcgOiBlc2NhcGUoZ2V0Q29tcG9uZW50TmFtZSh0YWcpKSk7XG5cbiAgICB2YXIgbmV3T3B0aW9ucyA9IF9leHRlbmRzKHt9LCBvcHRpb25zVG9Db3B5LCB7XG4gICAgICBhdHRyczogZmluYWxBdHRycyxcbiAgICAgIGNvbXBvbmVudElkOiBuZXdDb21wb25lbnRJZFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNyZWF0ZVN0eWxlZENvbXBvbmVudCh0YWcsIG5ld09wdGlvbnMsIHJ1bGVzKTtcbiAgfTsgLy8gJEZsb3dGaXhNZVxuXG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFdyYXBwZWRTdHlsZWRDb21wb25lbnQsICdkZWZhdWx0UHJvcHMnLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZm9sZGVkRGVmYXVsdFByb3BzO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQob2JqKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICB0aGlzLl9mb2xkZWREZWZhdWx0UHJvcHMgPSBpc1RhcmdldFN0eWxlZENvbXAgPyBtaXhpbkRlZXAoe30sIHRhcmdldC5kZWZhdWx0UHJvcHMsIG9iaikgOiBvYmo7XG4gICAgfVxuICB9KTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGNoZWNrRHluYW1pY0NyZWF0aW9uKGRpc3BsYXlOYW1lLCBzdHlsZWRDb21wb25lbnRJZCk7XG4gICAgV3JhcHBlZFN0eWxlZENvbXBvbmVudC53YXJuVG9vTWFueUNsYXNzZXMgPSBjcmVhdGVXYXJuVG9vTWFueUNsYXNzZXMoZGlzcGxheU5hbWUsIHN0eWxlZENvbXBvbmVudElkKTtcbiAgfSAvLyAkRmxvd0ZpeE1lXG5cblxuICBXcmFwcGVkU3R5bGVkQ29tcG9uZW50LnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBcIi5cIiArIFdyYXBwZWRTdHlsZWRDb21wb25lbnQuc3R5bGVkQ29tcG9uZW50SWQ7XG4gIH07XG5cbiAgaWYgKGlzQ29tcG9zaXRlQ29tcG9uZW50KSB7XG4gICAgaG9pc3QoV3JhcHBlZFN0eWxlZENvbXBvbmVudCwgdGFyZ2V0LCB7XG4gICAgICAvLyBhbGwgU0Mtc3BlY2lmaWMgdGhpbmdzIHNob3VsZCBub3QgYmUgaG9pc3RlZFxuICAgICAgYXR0cnM6IHRydWUsXG4gICAgICBjb21wb25lbnRTdHlsZTogdHJ1ZSxcbiAgICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgICAgZm9sZGVkQ29tcG9uZW50SWRzOiB0cnVlLFxuICAgICAgc2hvdWxkRm9yd2FyZFByb3A6IHRydWUsXG4gICAgICBzZWxmOiB0cnVlLFxuICAgICAgc3R5bGVkQ29tcG9uZW50SWQ6IHRydWUsXG4gICAgICB0YXJnZXQ6IHRydWUsXG4gICAgICB3aXRoQ29tcG9uZW50OiB0cnVlXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gV3JhcHBlZFN0eWxlZENvbXBvbmVudDtcbn1cblxuLy8gXG4vLyBUaGFua3MgdG8gUmVhY3RET01GYWN0b3JpZXMgZm9yIHRoaXMgaGFuZHkgbGlzdCFcbnZhciBkb21FbGVtZW50cyA9IFsnYScsICdhYmJyJywgJ2FkZHJlc3MnLCAnYXJlYScsICdhcnRpY2xlJywgJ2FzaWRlJywgJ2F1ZGlvJywgJ2InLCAnYmFzZScsICdiZGknLCAnYmRvJywgJ2JpZycsICdibG9ja3F1b3RlJywgJ2JvZHknLCAnYnInLCAnYnV0dG9uJywgJ2NhbnZhcycsICdjYXB0aW9uJywgJ2NpdGUnLCAnY29kZScsICdjb2wnLCAnY29sZ3JvdXAnLCAnZGF0YScsICdkYXRhbGlzdCcsICdkZCcsICdkZWwnLCAnZGV0YWlscycsICdkZm4nLCAnZGlhbG9nJywgJ2RpdicsICdkbCcsICdkdCcsICdlbScsICdlbWJlZCcsICdmaWVsZHNldCcsICdmaWdjYXB0aW9uJywgJ2ZpZ3VyZScsICdmb290ZXInLCAnZm9ybScsICdoMScsICdoMicsICdoMycsICdoNCcsICdoNScsICdoNicsICdoZWFkJywgJ2hlYWRlcicsICdoZ3JvdXAnLCAnaHInLCAnaHRtbCcsICdpJywgJ2lmcmFtZScsICdpbWcnLCAnaW5wdXQnLCAnaW5zJywgJ2tiZCcsICdrZXlnZW4nLCAnbGFiZWwnLCAnbGVnZW5kJywgJ2xpJywgJ2xpbmsnLCAnbWFpbicsICdtYXAnLCAnbWFyaycsICdtYXJxdWVlJywgJ21lbnUnLCAnbWVudWl0ZW0nLCAnbWV0YScsICdtZXRlcicsICduYXYnLCAnbm9zY3JpcHQnLCAnb2JqZWN0JywgJ29sJywgJ29wdGdyb3VwJywgJ29wdGlvbicsICdvdXRwdXQnLCAncCcsICdwYXJhbScsICdwaWN0dXJlJywgJ3ByZScsICdwcm9ncmVzcycsICdxJywgJ3JwJywgJ3J0JywgJ3J1YnknLCAncycsICdzYW1wJywgJ3NjcmlwdCcsICdzZWN0aW9uJywgJ3NlbGVjdCcsICdzbWFsbCcsICdzb3VyY2UnLCAnc3BhbicsICdzdHJvbmcnLCAnc3R5bGUnLCAnc3ViJywgJ3N1bW1hcnknLCAnc3VwJywgJ3RhYmxlJywgJ3Rib2R5JywgJ3RkJywgJ3RleHRhcmVhJywgJ3Rmb290JywgJ3RoJywgJ3RoZWFkJywgJ3RpbWUnLCAndGl0bGUnLCAndHInLCAndHJhY2snLCAndScsICd1bCcsICd2YXInLCAndmlkZW8nLCAnd2JyJywgLy8gU1ZHXG4nY2lyY2xlJywgJ2NsaXBQYXRoJywgJ2RlZnMnLCAnZWxsaXBzZScsICdmb3JlaWduT2JqZWN0JywgJ2cnLCAnaW1hZ2UnLCAnbGluZScsICdsaW5lYXJHcmFkaWVudCcsICdtYXJrZXInLCAnbWFzaycsICdwYXRoJywgJ3BhdHRlcm4nLCAncG9seWdvbicsICdwb2x5bGluZScsICdyYWRpYWxHcmFkaWVudCcsICdyZWN0JywgJ3N0b3AnLCAnc3ZnJywgJ3RleHQnLCAndHNwYW4nXTtcblxuLy8gXG5cbnZhciBzdHlsZWQgPSBmdW5jdGlvbiBzdHlsZWQodGFnKSB7XG4gIHJldHVybiBjb25zdHJ1Y3RXaXRoT3B0aW9ucyhjcmVhdGVTdHlsZWRDb21wb25lbnQsIHRhZyk7XG59OyAvLyBTaG9ydGhhbmRzIGZvciBhbGwgdmFsaWQgSFRNTCBFbGVtZW50c1xuXG5cbmRvbUVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24gKGRvbUVsZW1lbnQpIHtcbiAgc3R5bGVkW2RvbUVsZW1lbnRdID0gc3R5bGVkKGRvbUVsZW1lbnQpO1xufSk7XG5cbi8vIFxuXG52YXIgR2xvYmFsU3R5bGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBHbG9iYWxTdHlsZShydWxlcywgY29tcG9uZW50SWQpIHtcbiAgICB0aGlzLnJ1bGVzID0gcnVsZXM7XG4gICAgdGhpcy5jb21wb25lbnRJZCA9IGNvbXBvbmVudElkO1xuICAgIHRoaXMuaXNTdGF0aWMgPSBpc1N0YXRpY1J1bGVzKHJ1bGVzKTtcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBHbG9iYWxTdHlsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNyZWF0ZVN0eWxlcyA9IGZ1bmN0aW9uIGNyZWF0ZVN0eWxlcyhpbnN0YW5jZSwgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCwgc3R5bGlzKSB7XG4gICAgdmFyIGZsYXRDU1MgPSBmbGF0dGVuKHRoaXMucnVsZXMsIGV4ZWN1dGlvbkNvbnRleHQsIHN0eWxlU2hlZXQpO1xuICAgIHZhciBjc3MgPSBzdHlsaXMoZmxhdENTUy5qb2luKCcnKSwgJycpO1xuICAgIHZhciBpZCA9IHRoaXMuY29tcG9uZW50SWQgKyBpbnN0YW5jZTsgLy8gTk9URTogV2UgdXNlIHRoZSBpZCBhcyBhIG5hbWUgYXMgd2VsbCwgc2luY2UgdGhlc2UgcnVsZXMgbmV2ZXIgY2hhbmdlXG5cbiAgICBzdHlsZVNoZWV0Lmluc2VydFJ1bGVzKGlkLCBpZCwgY3NzKTtcbiAgfTtcblxuICBfcHJvdG8ucmVtb3ZlU3R5bGVzID0gZnVuY3Rpb24gcmVtb3ZlU3R5bGVzKGluc3RhbmNlLCBzdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVTaGVldC5jbGVhclJ1bGVzKHRoaXMuY29tcG9uZW50SWQgKyBpbnN0YW5jZSk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlclN0eWxlcyA9IGZ1bmN0aW9uIHJlbmRlclN0eWxlcyhpbnN0YW5jZSwgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCwgc3R5bGlzKSB7XG4gICAgU3R5bGVTaGVldC5yZWdpc3RlcklkKHRoaXMuY29tcG9uZW50SWQgKyBpbnN0YW5jZSk7IC8vIE5PVEU6IFJlbW92ZSBvbGQgc3R5bGVzLCB0aGVuIGluamVjdCB0aGUgbmV3IG9uZXNcblxuICAgIHRoaXMucmVtb3ZlU3R5bGVzKGluc3RhbmNlLCBzdHlsZVNoZWV0KTtcbiAgICB0aGlzLmNyZWF0ZVN0eWxlcyhpbnN0YW5jZSwgZXhlY3V0aW9uQ29udGV4dCwgc3R5bGVTaGVldCwgc3R5bGlzKTtcbiAgfTtcblxuICByZXR1cm4gR2xvYmFsU3R5bGU7XG59KCk7XG5cbmZ1bmN0aW9uIGNyZWF0ZUdsb2JhbFN0eWxlKHN0cmluZ3MpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGludGVycG9sYXRpb25zID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBpbnRlcnBvbGF0aW9uc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICB2YXIgcnVsZXMgPSBjc3MuYXBwbHkodm9pZCAwLCBbc3RyaW5nc10uY29uY2F0KGludGVycG9sYXRpb25zKSk7XG4gIHZhciBzdHlsZWRDb21wb25lbnRJZCA9IFwic2MtZ2xvYmFsLVwiICsgZ2VuZXJhdGVDb21wb25lbnRJZChKU09OLnN0cmluZ2lmeShydWxlcykpO1xuICB2YXIgZ2xvYmFsU3R5bGUgPSBuZXcgR2xvYmFsU3R5bGUocnVsZXMsIHN0eWxlZENvbXBvbmVudElkKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGNoZWNrRHluYW1pY0NyZWF0aW9uKHN0eWxlZENvbXBvbmVudElkKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEdsb2JhbFN0eWxlQ29tcG9uZW50KHByb3BzKSB7XG4gICAgdmFyIHN0eWxlU2hlZXQgPSB1c2VTdHlsZVNoZWV0KCk7XG4gICAgdmFyIHN0eWxpcyA9IHVzZVN0eWxpcygpO1xuICAgIHZhciB0aGVtZSA9IHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcbiAgICB2YXIgaW5zdGFuY2VSZWYgPSB1c2VSZWYobnVsbCk7XG5cbiAgICBpZiAoaW5zdGFuY2VSZWYuY3VycmVudCA9PT0gbnVsbCkge1xuICAgICAgaW5zdGFuY2VSZWYuY3VycmVudCA9IHN0eWxlU2hlZXQuYWxsb2NhdGVHU0luc3RhbmNlKHN0eWxlZENvbXBvbmVudElkKTtcbiAgICB9XG5cbiAgICB2YXIgaW5zdGFuY2UgPSBpbnN0YW5jZVJlZi5jdXJyZW50O1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgUmVhY3QuQ2hpbGRyZW4uY291bnQocHJvcHMuY2hpbGRyZW4pKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgY29uc29sZS53YXJuKFwiVGhlIGdsb2JhbCBzdHlsZSBjb21wb25lbnQgXCIgKyBzdHlsZWRDb21wb25lbnRJZCArIFwiIHdhcyBnaXZlbiBjaGlsZCBKU1guIGNyZWF0ZUdsb2JhbFN0eWxlIGRvZXMgbm90IHJlbmRlciBjaGlsZHJlbi5cIik7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgcnVsZXMuc29tZShmdW5jdGlvbiAocnVsZSkge1xuICAgICAgcmV0dXJuIHR5cGVvZiBydWxlID09PSAnc3RyaW5nJyAmJiBydWxlLmluZGV4T2YoJ0BpbXBvcnQnKSAhPT0gLTE7XG4gICAgfSkpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIlBsZWFzZSBkbyBub3QgdXNlIEBpbXBvcnQgQ1NTIHN5bnRheCBpbiBjcmVhdGVHbG9iYWxTdHlsZSBhdCB0aGlzIHRpbWUsIGFzIHRoZSBDU1NPTSBBUElzIHdlIHVzZSBpbiBwcm9kdWN0aW9uIGRvIG5vdCBoYW5kbGUgaXQgd2VsbC4gSW5zdGVhZCwgd2UgcmVjb21tZW5kIHVzaW5nIGEgbGlicmFyeSBzdWNoIGFzIHJlYWN0LWhlbG1ldCB0byBpbmplY3QgYSB0eXBpY2FsIDxsaW5rPiBtZXRhIHRhZyB0byB0aGUgc3R5bGVzaGVldCwgb3Igc2ltcGx5IGVtYmVkZGluZyBpdCBtYW51YWxseSBpbiB5b3VyIGluZGV4Lmh0bWwgPGhlYWQ+IHNlY3Rpb24gZm9yIGEgc2ltcGxlciBhcHAuXCIpO1xuICAgIH1cblxuICAgIGlmIChnbG9iYWxTdHlsZS5pc1N0YXRpYykge1xuICAgICAgZ2xvYmFsU3R5bGUucmVuZGVyU3R5bGVzKGluc3RhbmNlLCBTVEFUSUNfRVhFQ1VUSU9OX0NPTlRFWFQsIHN0eWxlU2hlZXQsIHN0eWxpcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBjb250ZXh0ID0gX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICAgIHRoZW1lOiBkZXRlcm1pbmVUaGVtZShwcm9wcywgdGhlbWUsIEdsb2JhbFN0eWxlQ29tcG9uZW50LmRlZmF1bHRQcm9wcylcbiAgICAgIH0pO1xuXG4gICAgICBnbG9iYWxTdHlsZS5yZW5kZXJTdHlsZXMoaW5zdGFuY2UsIGNvbnRleHQsIHN0eWxlU2hlZXQsIHN0eWxpcyk7XG4gICAgfVxuXG4gICAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBnbG9iYWxTdHlsZS5yZW1vdmVTdHlsZXMoaW5zdGFuY2UsIHN0eWxlU2hlZXQpO1xuICAgICAgfTtcbiAgICB9LCBFTVBUWV9BUlJBWSk7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0gLy8gJEZsb3dGaXhNZVxuXG5cbiAgcmV0dXJuIFJlYWN0Lm1lbW8oR2xvYmFsU3R5bGVDb21wb25lbnQpO1xufVxuXG4vLyBcbmZ1bmN0aW9uIGtleWZyYW1lcyhzdHJpbmdzKSB7XG4gIC8qIFdhcm5pbmcgaWYgeW91J3ZlIHVzZWQga2V5ZnJhbWVzIG9uIFJlYWN0IE5hdGl2ZSAqL1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgY29uc29sZS53YXJuKCdga2V5ZnJhbWVzYCBjYW5ub3QgYmUgdXNlZCBvbiBSZWFjdE5hdGl2ZSwgb25seSBvbiB0aGUgd2ViLiBUbyBkbyBhbmltYXRpb24gaW4gUmVhY3ROYXRpdmUgcGxlYXNlIHVzZSBBbmltYXRlZC4nKTtcbiAgfVxuXG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBpbnRlcnBvbGF0aW9ucyA9IG5ldyBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgaW50ZXJwb2xhdGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgdmFyIHJ1bGVzID0gY3NzLmFwcGx5KHZvaWQgMCwgW3N0cmluZ3NdLmNvbmNhdChpbnRlcnBvbGF0aW9ucykpLmpvaW4oJycpO1xuICB2YXIgbmFtZSA9IGdlbmVyYXRlQ29tcG9uZW50SWQocnVsZXMpO1xuICByZXR1cm4gbmV3IEtleWZyYW1lcyhuYW1lLCBbcnVsZXMsIG5hbWUsICdAa2V5ZnJhbWVzJ10pO1xufVxuXG52YXIgU2VydmVyU3R5bGVTaGVldCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFNlcnZlclN0eWxlU2hlZXQoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHRoaXMuX2VtaXRTaGVldENTUyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBjc3MgPSBfdGhpcy5pbnN0YW5jZS50b1N0cmluZygpO1xuXG4gICAgICB2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuICAgICAgdmFyIGF0dHJzID0gW25vbmNlICYmIFwibm9uY2U9XFxcIlwiICsgbm9uY2UgKyBcIlxcXCJcIiwgU0NfQVRUUiArIFwiPVxcXCJ0cnVlXFxcIlwiLCBTQ19BVFRSX1ZFUlNJT04gKyBcIj1cXFwiXCIgKyBTQ19WRVJTSU9OICsgXCJcXFwiXCJdO1xuICAgICAgdmFyIGh0bWxBdHRyID0gYXR0cnMuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJyAnKTtcbiAgICAgIHJldHVybiBcIjxzdHlsZSBcIiArIGh0bWxBdHRyICsgXCI+XCIgKyBjc3MgKyBcIjwvc3R5bGU+XCI7XG4gICAgfTtcblxuICAgIHRoaXMuZ2V0U3R5bGVUYWdzID0gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKF90aGlzLnNlYWxlZCkge1xuICAgICAgICByZXR1cm4gdGhyb3dTdHlsZWRDb21wb25lbnRzRXJyb3IoMik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfdGhpcy5fZW1pdFNoZWV0Q1NTKCk7XG4gICAgfTtcblxuICAgIHRoaXMuZ2V0U3R5bGVFbGVtZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF9wcm9wcztcblxuICAgICAgaWYgKF90aGlzLnNlYWxlZCkge1xuICAgICAgICByZXR1cm4gdGhyb3dTdHlsZWRDb21wb25lbnRzRXJyb3IoMik7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcm9wcyA9IChfcHJvcHMgPSB7fSwgX3Byb3BzW1NDX0FUVFJdID0gJycsIF9wcm9wc1tTQ19BVFRSX1ZFUlNJT05dID0gU0NfVkVSU0lPTiwgX3Byb3BzLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MID0ge1xuICAgICAgICBfX2h0bWw6IF90aGlzLmluc3RhbmNlLnRvU3RyaW5nKClcbiAgICAgIH0sIF9wcm9wcyk7XG4gICAgICB2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuXG4gICAgICBpZiAobm9uY2UpIHtcbiAgICAgICAgcHJvcHMubm9uY2UgPSBub25jZTtcbiAgICAgIH0gLy8gdjQgcmV0dXJuZWQgYW4gYXJyYXkgZm9yIHRoaXMgZm4sIHNvIHdlJ2xsIGRvIHRoZSBzYW1lIGZvciB2NSBmb3IgYmFja3dhcmQgY29tcGF0XG5cblxuICAgICAgcmV0dXJuIFsvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInN0eWxlXCIsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICBrZXk6IFwic2MtMC0wXCJcbiAgICAgIH0pKV07XG4gICAgfTtcblxuICAgIHRoaXMuc2VhbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLnNlYWxlZCA9IHRydWU7XG4gICAgfTtcblxuICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgU3R5bGVTaGVldCh7XG4gICAgICBpc1NlcnZlcjogdHJ1ZVxuICAgIH0pO1xuICAgIHRoaXMuc2VhbGVkID0gZmFsc2U7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU2VydmVyU3R5bGVTaGVldC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbGxlY3RTdHlsZXMgPSBmdW5jdGlvbiBjb2xsZWN0U3R5bGVzKGNoaWxkcmVuKSB7XG4gICAgaWYgKHRoaXMuc2VhbGVkKSB7XG4gICAgICByZXR1cm4gdGhyb3dTdHlsZWRDb21wb25lbnRzRXJyb3IoMik7XG4gICAgfVxuXG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFN0eWxlU2hlZXRNYW5hZ2VyLCB7XG4gICAgICBzaGVldDogdGhpcy5pbnN0YW5jZVxuICAgIH0sIGNoaWxkcmVuKTtcbiAgfTtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbiAgX3Byb3RvLmludGVybGVhdmVXaXRoTm9kZVN0cmVhbSA9IGZ1bmN0aW9uIGludGVybGVhdmVXaXRoTm9kZVN0cmVhbShpbnB1dCkge1xuICAgIHtcbiAgICAgIHJldHVybiB0aHJvd1N0eWxlZENvbXBvbmVudHNFcnJvcigzKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIFNlcnZlclN0eWxlU2hlZXQ7XG59KCk7XG5cbi8vIGV4cG9ydCBkZWZhdWx0IDxDb25maWc6IHsgdGhlbWU/OiBhbnkgfSwgSW5zdGFuY2U+KFxuLy8gIENvbXBvbmVudDogQWJzdHJhY3RDb21wb25lbnQ8Q29uZmlnLCBJbnN0YW5jZT5cbi8vICk6IEFic3RyYWN0Q29tcG9uZW50PCREaWZmPENvbmZpZywgeyB0aGVtZT86IGFueSB9PiAmIHsgdGhlbWU/OiBhbnkgfSwgSW5zdGFuY2U+XG4vL1xuLy8gYnV0IHRoZSBvbGQgYnVpbGQgc3lzdGVtIHRvb2xpbmcgZG9lc24ndCBzdXBwb3J0IHRoZSBzeW50YXhcblxudmFyIHdpdGhUaGVtZSA9IChmdW5jdGlvbiAoQ29tcG9uZW50KSB7XG4gIC8vICRGbG93Rml4TWUgVGhpcyBzaG91bGQgYmUgUmVhY3QuZm9yd2FyZFJlZjxDb25maWcsIEluc3RhbmNlPlxuICB2YXIgV2l0aFRoZW1lID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiAocHJvcHMsIHJlZikge1xuICAgIHZhciB0aGVtZSA9IHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTsgLy8gJEZsb3dGaXhNZSBkZWZhdWx0UHJvcHMgaXNuJ3QgZGVjbGFyZWQgc28gaXQgY2FuIGJlIGluZmVycmFibGVcblxuICAgIHZhciBkZWZhdWx0UHJvcHMgPSBDb21wb25lbnQuZGVmYXVsdFByb3BzO1xuICAgIHZhciB0aGVtZVByb3AgPSBkZXRlcm1pbmVUaGVtZShwcm9wcywgdGhlbWUsIGRlZmF1bHRQcm9wcyk7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0aGVtZVByb3AgPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUud2FybihcIlt3aXRoVGhlbWVdIFlvdSBhcmUgbm90IHVzaW5nIGEgVGhlbWVQcm92aWRlciBub3IgcGFzc2luZyBhIHRoZW1lIHByb3Agb3IgYSB0aGVtZSBpbiBkZWZhdWx0UHJvcHMgaW4gY29tcG9uZW50IGNsYXNzIFxcXCJcIiArIGdldENvbXBvbmVudE5hbWUoQ29tcG9uZW50KSArIFwiXFxcIlwiKTtcbiAgICB9XG5cbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgIHRoZW1lOiB0aGVtZVByb3AsXG4gICAgICByZWY6IHJlZlxuICAgIH0pKTtcbiAgfSk7XG4gIGhvaXN0KFdpdGhUaGVtZSwgQ29tcG9uZW50KTtcbiAgV2l0aFRoZW1lLmRpc3BsYXlOYW1lID0gXCJXaXRoVGhlbWUoXCIgKyBnZXRDb21wb25lbnROYW1lKENvbXBvbmVudCkgKyBcIilcIjtcbiAgcmV0dXJuIFdpdGhUaGVtZTtcbn0pO1xuXG4vLyBcblxudmFyIHVzZVRoZW1lID0gZnVuY3Rpb24gdXNlVGhlbWUoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG59O1xuXG4vLyBcbnZhciBfX1BSSVZBVEVfXyA9IHtcbiAgU3R5bGVTaGVldDogU3R5bGVTaGVldCxcbiAgbWFzdGVyU2hlZXQ6IG1hc3RlclNoZWV0XG59O1xuXG4vLyBcbi8qIERlZmluZSBidW5kbGUgdmVyc2lvbiBmb3IgZXhwb3J0ICovXG5cbnZhciB2ZXJzaW9uID0gXCI1LjEuMVwiO1xuLyogV2FybmluZyBpZiB5b3UndmUgaW1wb3J0ZWQgdGhpcyBmaWxlIG9uIFJlYWN0IE5hdGl2ZSAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ1JlYWN0TmF0aXZlJykge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBjb25zb2xlLndhcm4oXCJJdCBsb29rcyBsaWtlIHlvdSd2ZSBpbXBvcnRlZCAnc3R5bGVkLWNvbXBvbmVudHMnIG9uIFJlYWN0IE5hdGl2ZS5cXG5cIiArIFwiUGVyaGFwcyB5b3UncmUgbG9va2luZyB0byBpbXBvcnQgJ3N0eWxlZC1jb21wb25lbnRzL25hdGl2ZSc/XFxuXCIgKyAnUmVhZCBtb3JlIGFib3V0IHRoaXMgYXQgaHR0cHM6Ly93d3cuc3R5bGVkLWNvbXBvbmVudHMuY29tL2RvY3MvYmFzaWNzI3JlYWN0LW5hdGl2ZScpO1xufVxuLyogV2FybmluZyBpZiB0aGVyZSBhcmUgc2V2ZXJhbCBpbnN0YW5jZXMgb2Ygc3R5bGVkLWNvbXBvbmVudHMgKi9cblxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Rlc3QnICYmIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIHdpbmRvd1snX19zdHlsZWQtY29tcG9uZW50cy1pbml0X18nXSA9IHdpbmRvd1snX19zdHlsZWQtY29tcG9uZW50cy1pbml0X18nXSB8fCAwO1xuXG4gIGlmICh3aW5kb3dbJ19fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fJ10gPT09IDEpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUud2FybihcIkl0IGxvb2tzIGxpa2UgdGhlcmUgYXJlIHNldmVyYWwgaW5zdGFuY2VzIG9mICdzdHlsZWQtY29tcG9uZW50cycgaW5pdGlhbGl6ZWQgaW4gdGhpcyBhcHBsaWNhdGlvbi4gXCIgKyAnVGhpcyBtYXkgY2F1c2UgZHluYW1pYyBzdHlsZXMgbm90IHJlbmRlcmluZyBwcm9wZXJseSwgZXJyb3JzIGhhcHBlbmluZyBkdXJpbmcgcmVoeWRyYXRpb24gcHJvY2VzcywgJyArICdtaXNzaW5nIHRoZW1lIHByb3AsIGFuZCBtYWtlcyB5b3VyIGFwcGxpY2F0aW9uIGJpZ2dlciB3aXRob3V0IGEgZ29vZCByZWFzb24uXFxuXFxuJyArICdTZWUgaHR0cHM6Ly9zLWMuc2gvMkJBWHplZCBmb3IgbW9yZSBpbmZvLicpO1xuICB9XG5cbiAgd2luZG93WydfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfXyddICs9IDE7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0eWxlZDtcbmV4cG9ydCB7IFNlcnZlclN0eWxlU2hlZXQsIFN0eWxlU2hlZXRDb25zdW1lciwgU3R5bGVTaGVldENvbnRleHQsIFN0eWxlU2hlZXRNYW5hZ2VyLCBUaGVtZUNvbnN1bWVyLCBUaGVtZUNvbnRleHQsIFRoZW1lUHJvdmlkZXIsIF9fUFJJVkFURV9fLCBjcmVhdGVHbG9iYWxTdHlsZSwgY3NzLCBpc1N0eWxlZENvbXBvbmVudCwga2V5ZnJhbWVzLCB1c2VUaGVtZSwgdmVyc2lvbiwgd2l0aFRoZW1lIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHlsZWQtY29tcG9uZW50cy5icm93c2VyLmVzbS5qcy5tYXBcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bywgZnJvbSkge1xuICBpZiAoZnJvbSA9PT0gdW5kZWZpbmVkKSBmcm9tID0gJyc7XG5cbiAgdmFyIHRvUGFydHMgPSAodG8gJiYgdG8uc3BsaXQoJy8nKSkgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSAoZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2g7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG5cbiAgaWYgKFxuICAgIG11c3RFbmRBYnMgJiZcbiAgICBmcm9tUGFydHNbMF0gIT09ICcnICYmXG4gICAgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSlcbiAgKVxuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTtcbiIsImZ1bmN0aW9uIHZhbHVlT2Yob2JqKSB7XG4gIHJldHVybiBvYmoudmFsdWVPZiA/IG9iai52YWx1ZU9mKCkgOiBPYmplY3QucHJvdG90eXBlLnZhbHVlT2YuY2FsbChvYmopO1xufVxuXG5mdW5jdGlvbiB2YWx1ZUVxdWFsKGEsIGIpIHtcbiAgLy8gVGVzdCBmb3Igc3RyaWN0IGVxdWFsaXR5IGZpcnN0LlxuICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7XG5cbiAgLy8gT3RoZXJ3aXNlLCBpZiBlaXRoZXIgb2YgdGhlbSA9PSBudWxsIHRoZXkgYXJlIG5vdCBlcXVhbC5cbiAgaWYgKGEgPT0gbnVsbCB8fCBiID09IG51bGwpIHJldHVybiBmYWxzZTtcblxuICBpZiAoQXJyYXkuaXNBcnJheShhKSkge1xuICAgIHJldHVybiAoXG4gICAgICBBcnJheS5pc0FycmF5KGIpICYmXG4gICAgICBhLmxlbmd0aCA9PT0gYi5sZW5ndGggJiZcbiAgICAgIGEuZXZlcnkoZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoaXRlbSwgYltpbmRleF0pO1xuICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhID09PSAnb2JqZWN0JyB8fCB0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgYVZhbHVlID0gdmFsdWVPZihhKTtcbiAgICB2YXIgYlZhbHVlID0gdmFsdWVPZihiKTtcblxuICAgIGlmIChhVmFsdWUgIT09IGEgfHwgYlZhbHVlICE9PSBiKSByZXR1cm4gdmFsdWVFcXVhbChhVmFsdWUsIGJWYWx1ZSk7XG5cbiAgICByZXR1cm4gT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgYSwgYikpLmV2ZXJ5KGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoYVtrZXldLCBiW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWx1ZUVxdWFsO1xuIiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICAgIGlmIChjb25kaXRpb24pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXNQcm9kdWN0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4ICsgXCI6IFwiICsgKG1lc3NhZ2UgfHwgJycpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaW52YXJpYW50O1xuIiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIHBhdGgudG9Mb3dlckNhc2UoKS5pbmRleE9mKHByZWZpeC50b0xvd2VyQ2FzZSgpKSA9PT0gMCAmJiAnLz8jJy5pbmRleE9mKHBhdGguY2hhckF0KHByZWZpeC5sZW5ndGgpKSAhPT0gLTE7XG59XG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdChwYXRoLmxlbmd0aCAtIDEpID09PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICB2YXIgcGF0aG5hbWUgPSBwYXRoIHx8ICcvJztcbiAgdmFyIHNlYXJjaCA9ICcnO1xuICB2YXIgaGFzaCA9ICcnO1xuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuXG4gIGlmIChoYXNoSW5kZXggIT09IC0xKSB7XG4gICAgaGFzaCA9IHBhdGhuYW1lLnN1YnN0cihoYXNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIGhhc2hJbmRleCk7XG4gIH1cblxuICB2YXIgc2VhcmNoSW5kZXggPSBwYXRobmFtZS5pbmRleE9mKCc/Jyk7XG5cbiAgaWYgKHNlYXJjaEluZGV4ICE9PSAtMSkge1xuICAgIHNlYXJjaCA9IHBhdGhuYW1lLnN1YnN0cihzZWFyY2hJbmRleCk7XG4gICAgcGF0aG5hbWUgPSBwYXRobmFtZS5zdWJzdHIoMCwgc2VhcmNoSW5kZXgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgc2VhcmNoOiBzZWFyY2ggPT09ICc/JyA/ICcnIDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2ggPT09ICcjJyA/ICcnIDogaGFzaFxuICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlUGF0aChsb2NhdGlvbikge1xuICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIHNlYXJjaCA9IGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBsb2NhdGlvbi5oYXNoO1xuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcbiAgaWYgKHNlYXJjaCAmJiBzZWFyY2ggIT09ICc/JykgcGF0aCArPSBzZWFyY2guY2hhckF0KDApID09PSAnPycgPyBzZWFyY2ggOiBcIj9cIiArIHNlYXJjaDtcbiAgaWYgKGhhc2ggJiYgaGFzaCAhPT0gJyMnKSBwYXRoICs9IGhhc2guY2hhckF0KDApID09PSAnIycgPyBoYXNoIDogXCIjXCIgKyBoYXNoO1xuICByZXR1cm4gcGF0aDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbjtcblxuICBpZiAodHlwZW9mIHBhdGggPT09ICdzdHJpbmcnKSB7XG4gICAgLy8gVHdvLWFyZyBmb3JtOiBwdXNoKHBhdGgsIHN0YXRlKVxuICAgIGxvY2F0aW9uID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH0gZWxzZSB7XG4gICAgLy8gT25lLWFyZyBmb3JtOiBwdXNoKGxvY2F0aW9uKVxuICAgIGxvY2F0aW9uID0gX2V4dGVuZHMoe30sIHBhdGgpO1xuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcblxuICBpZiAoY3VycmVudExvY2F0aW9uKSB7XG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoICYmIGEua2V5ID09PSBiLmtleSAmJiB2YWx1ZUVxdWFsKGEuc3RhdGUsIGIuc3RhdGUpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpIHtcbiAgdmFyIHByb21wdCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByb21wdCA9PSBudWxsLCAnQSBoaXN0b3J5IHN1cHBvcnRzIG9ubHkgb25lIHByb21wdCBhdCBhIHRpbWUnKSA6IHZvaWQgMDtcbiAgICBwcm9tcHQgPSBuZXh0UHJvbXB0O1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocHJvbXB0ID09PSBuZXh0UHJvbXB0KSBwcm9tcHQgPSBudWxsO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBjb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGNhbGxiYWNrKSB7XG4gICAgLy8gVE9ETzogSWYgYW5vdGhlciB0cmFuc2l0aW9uIHN0YXJ0cyB3aGlsZSB3ZSdyZSBzdGlsbCBjb25maXJtaW5nXG4gICAgLy8gdGhlIHByZXZpb3VzIG9uZSwgd2UgbWF5IGVuZCB1cCBpbiBhIHdlaXJkIHN0YXRlLiBGaWd1cmUgb3V0IHRoZVxuICAgIC8vIGJlc3Qgd2F5IHRvIGhhbmRsZSB0aGlzLlxuICAgIGlmIChwcm9tcHQgIT0gbnVsbCkge1xuICAgICAgdmFyIHJlc3VsdCA9IHR5cGVvZiBwcm9tcHQgPT09ICdmdW5jdGlvbicgPyBwcm9tcHQobG9jYXRpb24sIGFjdGlvbikgOiBwcm9tcHQ7XG5cbiAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAodHlwZW9mIGdldFVzZXJDb25maXJtYXRpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBnZXRVc2VyQ29uZmlybWF0aW9uKHJlc3VsdCwgY2FsbGJhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdBIGhpc3RvcnkgbmVlZHMgYSBnZXRVc2VyQ29uZmlybWF0aW9uIGZ1bmN0aW9uIGluIG9yZGVyIHRvIHVzZSBhIHByb21wdCBtZXNzYWdlJykgOiB2b2lkIDA7XG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBsaXN0ZW5lcnMgPSBbXTtcblxuICBmdW5jdGlvbiBhcHBlbmRMaXN0ZW5lcihmbikge1xuICAgIHZhciBpc0FjdGl2ZSA9IHRydWU7XG5cbiAgICBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgIGlmIChpc0FjdGl2ZSkgZm4uYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICByZXR1cm4gbGlzdGVuZXIuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXG4gICAgY29uZmlybVRyYW5zaXRpb25UbzogY29uZmlybVRyYW5zaXRpb25UbyxcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcbiAgfTtcbn1cblxudmFyIGNhblVzZURPTSA9ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5mdW5jdGlvbiBnZXRDb25maXJtYXRpb24obWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgY2FsbGJhY2sod2luZG93LmNvbmZpcm0obWVzc2FnZSkpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaXMgc3VwcG9ydGVkLiBUYWtlbiBmcm9tIE1vZGVybml6ci5cbiAqXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBodHRwczovL2dpdGh1Yi5jb20vTW9kZXJuaXpyL01vZGVybml6ci9ibG9iL21hc3Rlci9mZWF0dXJlLWRldGVjdHMvaGlzdG9yeS5qc1xuICogY2hhbmdlZCB0byBhdm9pZCBmYWxzZSBuZWdhdGl2ZXMgZm9yIFdpbmRvd3MgUGhvbmVzOiBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yb3V0ZXIvaXNzdWVzLzU4NlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzSGlzdG9yeSgpIHtcbiAgdmFyIHVhID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG4gIGlmICgodWEuaW5kZXhPZignQW5kcm9pZCAyLicpICE9PSAtMSB8fCB1YS5pbmRleE9mKCdBbmRyb2lkIDQuMCcpICE9PSAtMSkgJiYgdWEuaW5kZXhPZignTW9iaWxlIFNhZmFyaScpICE9PSAtMSAmJiB1YS5pbmRleE9mKCdDaHJvbWUnKSA9PT0gLTEgJiYgdWEuaW5kZXhPZignV2luZG93cyBQaG9uZScpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gd2luZG93Lmhpc3RvcnkgJiYgJ3B1c2hTdGF0ZScgaW4gd2luZG93Lmhpc3Rvcnk7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ1RyaWRlbnQnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgZmFsc2UgaWYgdXNpbmcgZ28obikgd2l0aCBoYXNoIGhpc3RvcnkgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZC5cbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGdpdmVuIHBvcHN0YXRlIGV2ZW50IGlzIGFuIGV4dHJhbmVvdXMgV2ViS2l0IGV2ZW50LlxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXG4gKi9cblxuZnVuY3Rpb24gaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufVxuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG5mdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZm9yY2VSZWZyZXNoID0gX3Byb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgICAgbmV4dEtleXMucHVzaChsb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGFsbEtleXMgPSBuZXh0S2V5cztcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgc3RhdGU6IHN0YXRlXG4gICAgICAgIH0sIG51bGwsIGhyZWYpO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZnJlc2gpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsS2V5c1twcmV2SW5kZXhdID0gbG9jYXRpb24ua2V5O1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFBvcFN0YXRlRXZlbnQsIGhhbmRsZVBvcFN0YXRlKTtcbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQkMSA9ICdoYXNoY2hhbmdlJztcbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG5mdW5jdGlvbiBzdHJpcEhhc2godXJsKSB7XG4gIHZhciBoYXNoSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/IHVybCA6IHVybC5zbGljZSgwLCBoYXNoSW5kZXgpO1xufVxuXG5mdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn1cblxuZnVuY3Rpb24gcHVzaEhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufVxuXG5mdW5jdGlvbiByZXBsYWNlSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShzdHJpcEhhc2god2luZG93LmxvY2F0aW9uLmhyZWYpICsgJyMnICsgcGF0aCk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUhhc2hIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gICFjYW5Vc2VET00gPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdIYXNoIGhpc3RvcnkgbmVlZHMgYSBET00nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRoYXNoVHlwZSA9IF9wcm9wcy5oYXNoVHlwZSxcbiAgICAgIGhhc2hUeXBlID0gX3Byb3BzJGhhc2hUeXBlID09PSB2b2lkIDAgPyAnc2xhc2gnIDogX3Byb3BzJGhhc2hUeXBlO1xuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuICB2YXIgX0hhc2hQYXRoQ29kZXJzJGhhc2hUID0gSGFzaFBhdGhDb2RlcnNbaGFzaFR5cGVdLFxuICAgICAgZW5jb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5lbmNvZGVQYXRoLFxuICAgICAgZGVjb2RlUGF0aCA9IF9IYXNoUGF0aENvZGVycyRoYXNoVC5kZWNvZGVQYXRoO1xuXG4gIGZ1bmN0aW9uIGdldERPTUxvY2F0aW9uKCkge1xuICAgIHZhciBwYXRoID0gZGVjb2RlUGF0aChnZXRIYXNoUGF0aCgpKTtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgdmFyIGlnbm9yZVBhdGggPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGxvY2F0aW9uc0FyZUVxdWFsJCQxKGEsIGIpIHtcbiAgICByZXR1cm4gYS5wYXRobmFtZSA9PT0gYi5wYXRobmFtZSAmJiBhLnNlYXJjaCA9PT0gYi5zZWFyY2ggJiYgYS5oYXNoID09PSBiLmhhc2g7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG4gICAgICBpZiAoIWZvcmNlTmV4dFBvcCAmJiBsb2NhdGlvbnNBcmVFcXVhbCQkMShwcmV2TG9jYXRpb24sIGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBBIGhhc2hjaGFuZ2UgZG9lc24ndCBhbHdheXMgPT0gbG9jYXRpb24gY2hhbmdlLlxuXG4gICAgICBpZiAoaWdub3JlUGF0aCA9PT0gY3JlYXRlUGF0aChsb2NhdGlvbikpIHJldHVybjsgLy8gSWdub3JlIHRoaXMgY2hhbmdlOyB3ZSBhbHJlYWR5IHNldFN0YXRlIGluIHB1c2gvcmVwbGFjZS5cblxuICAgICAgaWdub3JlUGF0aCA9IG51bGw7XG4gICAgICBoYW5kbGVQb3AobG9jYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIHBhdGhzIHdlJ3ZlIHNlZW4gaW4gc2Vzc2lvblN0b3JhZ2UuXG4gICAgLy8gSW5zdGVhZCwgd2UganVzdCBkZWZhdWx0IHRvIDAgZm9yIHBhdGhzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgodG9Mb2NhdGlvbikpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoZnJvbUxvY2F0aW9uKSk7XG4gICAgaWYgKGZyb21JbmRleCA9PT0gLTEpIGZyb21JbmRleCA9IDA7XG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH0gLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG5cblxuICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgocGF0aCk7XG4gIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHZhciBiYXNlVGFnID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYmFzZScpO1xuICAgIHZhciBocmVmID0gJyc7XG5cbiAgICBpZiAoYmFzZVRhZyAmJiBiYXNlVGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpKSB7XG4gICAgICBocmVmID0gc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaHJlZiArICcjJyArIGVuY29kZVBhdGgoYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKSk7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUFVTSCwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcHVzaEhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmxhc3RJbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuICAgICAgICB2YXIgbmV4dFBhdGhzID0gYWxsUGF0aHMuc2xpY2UoMCwgcHJldkluZGV4ICsgMSk7XG4gICAgICAgIG5leHRQYXRocy5wdXNoKHBhdGgpO1xuICAgICAgICBhbGxQYXRocyA9IG5leHRQYXRocztcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKSA6IHZvaWQgMDtcbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBSRVBMQUNFLCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMuaW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxQYXRoc1twcmV2SW5kZXhdID0gcGF0aDtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnbyhuKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKSA6IHZvaWQgMDtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoSGFzaENoYW5nZUV2ZW50JDEsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZnVuY3Rpb24gY2xhbXAobiwgbG93ZXJCb3VuZCwgdXBwZXJCb3VuZCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgobiwgbG93ZXJCb3VuZCksIHVwcGVyQm91bmQpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCBzdG9yZXMgbG9jYXRpb25zIGluIG1lbW9yeS5cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgX3Byb3BzJGluaXRpYWxFbnRyaWVzID0gX3Byb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHZvaWQgMCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IF9wcm9wcy5pbml0aWFsSW5kZXgsXG4gICAgICBpbml0aWFsSW5kZXggPSBfcHJvcHMkaW5pdGlhbEluZGV4ID09PSB2b2lkIDAgPyAwIDogX3Byb3BzJGluaXRpYWxJbmRleCxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gaGlzdG9yeS5lbnRyaWVzLmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciBpbmRleCA9IGNsYW1wKGluaXRpYWxJbmRleCwgMCwgaW5pdGlhbEVudHJpZXMubGVuZ3RoIC0gMSk7XG4gIHZhciBlbnRyaWVzID0gaW5pdGlhbEVudHJpZXMubWFwKGZ1bmN0aW9uIChlbnRyeSkge1xuICAgIHJldHVybiB0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnID8gY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgY3JlYXRlS2V5KCkpIDogY3JlYXRlTG9jYXRpb24oZW50cnksIHVuZGVmaW5lZCwgZW50cnkua2V5IHx8IGNyZWF0ZUtleSgpKTtcbiAgfSk7IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGNyZWF0ZVBhdGg7XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwcmV2SW5kZXggPSBoaXN0b3J5LmluZGV4O1xuICAgICAgdmFyIG5leHRJbmRleCA9IHByZXZJbmRleCArIDE7XG4gICAgICB2YXIgbmV4dEVudHJpZXMgPSBoaXN0b3J5LmVudHJpZXMuc2xpY2UoMCk7XG5cbiAgICAgIGlmIChuZXh0RW50cmllcy5sZW5ndGggPiBuZXh0SW5kZXgpIHtcbiAgICAgICAgbmV4dEVudHJpZXMuc3BsaWNlKG5leHRJbmRleCwgbmV4dEVudHJpZXMubGVuZ3RoIC0gbmV4dEluZGV4LCBsb2NhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0RW50cmllcy5wdXNoKGxvY2F0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBpbmRleDogbmV4dEluZGV4LFxuICAgICAgICBlbnRyaWVzOiBuZXh0RW50cmllc1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgaGlzdG9yeS5lbnRyaWVzW2hpc3RvcnkuaW5kZXhdID0gbG9jYXRpb247XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHZhciBuZXh0SW5kZXggPSBjbGFtcChoaXN0b3J5LmluZGV4ICsgbiwgMCwgaGlzdG9yeS5lbnRyaWVzLmxlbmd0aCAtIDEpO1xuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKG9rKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgaW5kZXg6IG5leHRJbmRleFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE1pbWljIHRoZSBiZWhhdmlvciBvZiBET00gaGlzdG9yaWVzIGJ5XG4gICAgICAgIC8vIGNhdXNpbmcgYSByZW5kZXIgYWZ0ZXIgYSBjYW5jZWxsZWQgUE9QLlxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbkdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gaGlzdG9yeS5pbmRleCArIG47XG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gIH1cblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHJldHVybiB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGVudHJpZXMubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGVudHJpZXNbaW5kZXhdLFxuICAgIGluZGV4OiBpbmRleCxcbiAgICBlbnRyaWVzOiBlbnRyaWVzLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBjYW5HbzogY2FuR28sXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG5leHBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgcGFyc2VQYXRoLCBjcmVhdGVQYXRoIH07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgY3JlYXRlUGF0aCB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBjcmVhdGVDb250ZXh0IGZyb20gJ21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gJ3BhdGgtdG8tcmVnZXhwJztcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxudmFyIGhpc3RvcnlDb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlci1IaXN0b3J5XCIpO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQkMSA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgY29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVOYW1lZENvbnRleHQkMShcIlJvdXRlclwiKTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cblxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcblxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xuICAgICAgX3RoaXMudW5saXN0ZW4gPSBwcm9wcy5oaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgICAgaWYgKF90aGlzLl9pc01vdW50ZWQpIHtcbiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG5cbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbG9jYXRpb246IHRoaXMuX3BlbmRpbmdMb2NhdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLnN0YXRlLmxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogUm91dGVyLmNvbXB1dGVSb290TWF0Y2godGhpcy5zdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSksXG4gICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuc3RhdGljQ29udGV4dFxuICAgICAgfVxuICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoaGlzdG9yeUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIHx8IG51bGwsXG4gICAgICB2YWx1ZTogdGhpcy5wcm9wcy5oaXN0b3J5XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHN0b3JlcyBsb2NhdGlvbiBpbiBtZW1vcnkuXG4gKi9cblxudmFyIE1lbW9yeVJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShNZW1vcnlSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1lbW9yeVJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE1lbW9yeVJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIE1lbW9yeVJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBNZW1vcnlSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgaW5pdGlhbEluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbiAgfTtcblxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8TWVtb3J5Um91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgTWVtb3J5Um91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciBMaWZlY3ljbGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTGlmZWN5Y2xlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaWZlY3ljbGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IExpZmVjeWNsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Nb3VudCkgdGhpcy5wcm9wcy5vbk1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVwZGF0ZSkgdGhpcy5wcm9wcy5vblVwZGF0ZS5jYWxsKHRoaXMsIHRoaXMsIHByZXZQcm9wcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Vbm1vdW50KSB0aGlzLnByb3BzLm9uVW5tb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIExpZmVjeWNsZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHJvbXB0aW5nIHRoZSB1c2VyIGJlZm9yZSBuYXZpZ2F0aW5nIGF3YXkgZnJvbSBhIHNjcmVlbi5cbiAqL1xuXG5mdW5jdGlvbiBQcm9tcHQoX3JlZikge1xuICB2YXIgbWVzc2FnZSA9IF9yZWYubWVzc2FnZSxcbiAgICAgIF9yZWYkd2hlbiA9IF9yZWYud2hlbixcbiAgICAgIHdoZW4gPSBfcmVmJHdoZW4gPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJHdoZW47XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxQcm9tcHQ+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgaWYgKCF3aGVuIHx8IGNvbnRleHQuc3RhdGljQ29udGV4dCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIG1ldGhvZCA9IGNvbnRleHQuaGlzdG9yeS5ibG9jaztcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICBpZiAocHJldlByb3BzLm1lc3NhZ2UgIT09IG1lc3NhZ2UpIHtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvblVubW91bnQ6IGZ1bmN0aW9uIG9uVW5tb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgfSxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIG1lc3NhZ2VUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKTtcbiAgUHJvbXB0LnByb3BUeXBlcyA9IHtcbiAgICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBtZXNzYWdlOiBtZXNzYWdlVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCkge1xuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcbiAgdmFyIGdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdGgpO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdGhdID0gZ2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0b3I7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdGggYW5kIHBhcmFtZXRlcnMuXG4gKi9cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXRoID09PSB2b2lkIDApIHtcbiAgICBwYXRoID0gXCIvXCI7XG4gIH1cblxuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuXG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHtcbiAgICBwcmV0dHk6IHRydWVcbiAgfSk7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbmZ1bmN0aW9uIFJlZGlyZWN0KF9yZWYpIHtcbiAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBfcmVmJHB1c2ggPSBfcmVmLnB1c2gsXG4gICAgICBwdXNoID0gX3JlZiRwdXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkcHVzaDtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5LFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gY29udGV4dC5zdGF0aWNDb250ZXh0O1xuICAgIHZhciBtZXRob2QgPSBwdXNoID8gaGlzdG9yeS5wdXNoIDogaGlzdG9yeS5yZXBsYWNlO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKGNvbXB1dGVkTWF0Y2ggPyB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBnZW5lcmF0ZVBhdGgodG8sIGNvbXB1dGVkTWF0Y2gucGFyYW1zKSA6IF9leHRlbmRzKHt9LCB0bywge1xuICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgfSkgOiB0byk7IC8vIFdoZW4gcmVuZGVyaW5nIGluIGEgc3RhdGljIGNvbnRleHQsXG4gICAgLy8gc2V0IHRoZSBuZXcgbG9jYXRpb24gaW1tZWRpYXRlbHkuXG5cbiAgICBpZiAoc3RhdGljQ29udGV4dCkge1xuICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwcmV2UHJvcHMudG8pO1xuXG4gICAgICAgIGlmICghbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICAgICAgICBrZXk6IHByZXZMb2NhdGlvbi5rZXlcbiAgICAgICAgfSkpKSB7XG4gICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRvOiB0b1xuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSZWRpcmVjdC5wcm9wVHlwZXMgPSB7XG4gICAgcHVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlJDEgPSB7fTtcbnZhciBjYWNoZUxpbWl0JDEgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50JDEgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aCQxKHBhdGgsIG9wdGlvbnMpIHtcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhDYWNoZSA9IGNhY2hlJDFbY2FjaGVLZXldIHx8IChjYWNoZSQxW2NhY2hlS2V5XSA9IHt9KTtcbiAgaWYgKHBhdGhDYWNoZVtwYXRoXSkgcmV0dXJuIHBhdGhDYWNoZVtwYXRoXTtcbiAgdmFyIGtleXMgPSBbXTtcbiAgdmFyIHJlZ2V4cCA9IHBhdGhUb1JlZ2V4cChwYXRoLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIHJlc3VsdCA9IHtcbiAgICByZWdleHA6IHJlZ2V4cCxcbiAgICBrZXlzOiBrZXlzXG4gIH07XG5cbiAgaWYgKGNhY2hlQ291bnQkMSA8IGNhY2hlTGltaXQkMSkge1xuICAgIHBhdGhDYWNoZVtwYXRoXSA9IHJlc3VsdDtcbiAgICBjYWNoZUNvdW50JDErKztcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aC5cbiAqL1xuXG5cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucykpIHtcbiAgICBvcHRpb25zID0ge1xuICAgICAgcGF0aDogb3B0aW9uc1xuICAgIH07XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuICB2YXIgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XG4gIHJldHVybiBwYXRocy5yZWR1Y2UoZnVuY3Rpb24gKG1hdGNoZWQsIHBhdGgpIHtcbiAgICBpZiAoIXBhdGggJiYgcGF0aCAhPT0gXCJcIikgcmV0dXJuIG51bGw7XG4gICAgaWYgKG1hdGNoZWQpIHJldHVybiBtYXRjaGVkO1xuXG4gICAgdmFyIF9jb21waWxlUGF0aCA9IGNvbXBpbGVQYXRoJDEocGF0aCwge1xuICAgICAgZW5kOiBleGFjdCxcbiAgICAgIHN0cmljdDogc3RyaWN0LFxuICAgICAgc2Vuc2l0aXZlOiBzZW5zaXRpdmVcbiAgICB9KSxcbiAgICAgICAgcmVnZXhwID0gX2NvbXBpbGVQYXRoLnJlZ2V4cCxcbiAgICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gICAgdmFyIG1hdGNoID0gcmVnZXhwLmV4ZWMocGF0aG5hbWUpO1xuICAgIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuICAgIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgICAgdmFsdWVzID0gbWF0Y2guc2xpY2UoMSk7XG4gICAgdmFyIGlzRXhhY3QgPSBwYXRobmFtZSA9PT0gdXJsO1xuICAgIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IHBhdGgsXG4gICAgICAvLyB0aGUgcGF0aCB1c2VkIHRvIG1hdGNoXG4gICAgICB1cmw6IHBhdGggPT09IFwiL1wiICYmIHVybCA9PT0gXCJcIiA/IFwiL1wiIDogdXJsLFxuICAgICAgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgICBpc0V4YWN0OiBpc0V4YWN0LFxuICAgICAgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgICBwYXJhbXM6IGtleXMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBrZXksIGluZGV4KSB7XG4gICAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICB9LCB7fSlcbiAgICB9O1xuICB9LCBudWxsKTtcbn1cblxuZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59XG5cbmZ1bmN0aW9uIGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIHBhdGgpIHtcbiAgdmFyIHZhbHVlID0gY2hpbGRyZW4ocHJvcHMpO1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHZhbHVlICE9PSB1bmRlZmluZWQsIFwiWW91IHJldHVybmVkIGB1bmRlZmluZWRgIGZyb20gdGhlIGBjaGlsZHJlbmAgZnVuY3Rpb24gb2YgXCIgKyAoXCI8Um91dGVcIiArIChwYXRoID8gXCIgcGF0aD1cXFwiXCIgKyBwYXRoICsgXCJcXFwiXCIgOiBcIlwiKSArIFwiPiwgYnV0IHlvdSBcIikgKyBcInNob3VsZCBoYXZlIHJldHVybmVkIGEgUmVhY3QgZWxlbWVudCBvciBgbnVsbGBcIikgOiB2b2lkIDA7XG4gIHJldHVybiB2YWx1ZSB8fCBudWxsO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5cblxudmFyIFJvdXRlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JDEpIHtcbiAgICAgICFjb250ZXh0JDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQkMS5sb2NhdGlvbjtcbiAgICAgIHZhciBtYXRjaCA9IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggPyBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoIC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuICAgICAgOiBfdGhpcy5wcm9wcy5wYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfdGhpcy5wcm9wcykgOiBjb250ZXh0JDEubWF0Y2g7XG5cbiAgICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCBjb250ZXh0JDEsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogbWF0Y2hcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7IC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XG4gICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBwcm9wc1xuICAgICAgfSwgcHJvcHMubWF0Y2ggPyBjaGlsZHJlbiA/IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBjaGlsZHJlbiA6IGNvbXBvbmVudCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiByZW5kZXIgPyByZW5kZXIocHJvcHMpIDogbnVsbCA6IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBudWxsKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGUucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChwcm9wcywgcHJvcE5hbWUpIHtcbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gJiYgIWlzVmFsaWRFbGVtZW50VHlwZShwcm9wc1twcm9wTmFtZV0pKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgJ2NvbXBvbmVudCcgc3VwcGxpZWQgdG8gJ1JvdXRlJzogdGhlIHByb3AgaXMgbm90IGEgdmFsaWQgUmVhY3QgY29tcG9uZW50XCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXSksXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLmNvbXBvbmVudCksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgdmFyIGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZihiYXNlKSAhPT0gMCkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cihiYXNlLmxlbmd0aClcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVVSTChsb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbn1cblxuZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSkgOiBpbnZhcmlhbnQoZmFsc2UpIDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cblxuXG52YXIgU3RhdGljUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN0YXRpY1JvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3RhdGljUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX3RoaXMuaGFuZGxlUHVzaCA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUFVTSFwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlUmVwbGFjZSA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUkVQTEFDRVwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlTGlzdGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUJsb2NrID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTdGF0aWNSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5uYXZpZ2F0ZVRvID0gZnVuY3Rpb24gbmF2aWdhdGVUbyhsb2NhdGlvbiwgYWN0aW9uKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMkYmFzZW5hbWUgPSBfdGhpcyRwcm9wcy5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wcyRjb250ZXh0ID0gX3RoaXMkcHJvcHMuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMkY29udGV4dDtcbiAgICBjb250ZXh0LmFjdGlvbiA9IGFjdGlvbjtcbiAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XG4gICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzMiRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzMiRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGNvbnRleHQgPSBfdGhpcyRwcm9wczIuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzMiRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzMiRjb250ZXh0LFxuICAgICAgICBfdGhpcyRwcm9wczIkbG9jYXRpb24gPSBfdGhpcyRwcm9wczIubG9jYXRpb24sXG4gICAgICAgIGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyJGxvY2F0aW9uID09PSB2b2lkIDAgPyBcIi9cIiA6IF90aGlzJHByb3BzMiRsb2NhdGlvbixcbiAgICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzMiwgW1wiYmFzZW5hbWVcIiwgXCJjb250ZXh0XCIsIFwibG9jYXRpb25cIl0pO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB7XG4gICAgICBjcmVhdGVIcmVmOiBmdW5jdGlvbiBjcmVhdGVIcmVmKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSk7XG4gICAgICB9LFxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXG4gICAgfTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBoaXN0b3J5OiBoaXN0b3J5LFxuICAgICAgc3RhdGljQ29udGV4dDogY29udGV4dFxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gU3RhdGljUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN0YXRpY1JvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pXG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPFN0YXRpY1JvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5cbnZhciBTd2l0Y2ggPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN3aXRjaC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICAgIHZhciBlbGVtZW50LCBtYXRjaDsgLy8gV2UgdXNlIFJlYWN0LkNoaWxkcmVuLmZvckVhY2ggaW5zdGVhZCBvZiBSZWFjdC5DaGlsZHJlbi50b0FycmF5KCkuZmluZCgpXG4gICAgICAvLyBoZXJlIGJlY2F1c2UgdG9BcnJheSBhZGRzIGtleXMgdG8gYWxsIGNoaWxkIGVsZW1lbnRzIGFuZCB3ZSBkbyBub3Qgd2FudFxuICAgICAgLy8gdG8gdHJpZ2dlciBhbiB1bm1vdW50L3JlbW91bnQgZm9yIHR3byA8Um91dGU+cyB0aGF0IHJlbmRlciB0aGUgc2FtZVxuICAgICAgLy8gY29tcG9uZW50IGF0IGRpZmZlcmVudCBVUkxzLlxuXG4gICAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKF90aGlzLnByb3BzLmNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgZWxlbWVudCA9IGNoaWxkO1xuICAgICAgICAgIHZhciBwYXRoID0gY2hpbGQucHJvcHMucGF0aCB8fCBjaGlsZC5wcm9wcy5mcm9tO1xuICAgICAgICAgIG1hdGNoID0gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX2V4dGVuZHMoe30sIGNoaWxkLnByb3BzLCB7XG4gICAgICAgICAgICBwYXRoOiBwYXRoXG4gICAgICAgICAgfSkpIDogY29udGV4dC5tYXRjaDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoZWxlbWVudCwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGNvbXB1dGVkTWF0Y2g6IG1hdGNoXG4gICAgICB9KSA6IG51bGw7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFN3aXRjaDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTd2l0Y2gucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBBIHB1YmxpYyBoaWdoZXItb3JkZXIgY29tcG9uZW50IHRvIGFjY2VzcyB0aGUgaW1wZXJhdGl2ZSBBUElcbiAqL1xuXG5mdW5jdGlvbiB3aXRoUm91dGVyKENvbXBvbmVudCkge1xuICB2YXIgZGlzcGxheU5hbWUgPSBcIndpdGhSb3V0ZXIoXCIgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArIFwiKVwiO1xuXG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wid3JhcHBlZENvbXBvbmVudFJlZlwiXSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxcIiArIGRpc3BsYXlOYW1lICsgXCIgLz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHJlbWFpbmluZ1Byb3BzLCBjb250ZXh0LCB7XG4gICAgICAgIHJlZjogd3JhcHBlZENvbXBvbmVudFJlZlxuICAgICAgfSkpO1xuICAgIH0pO1xuICB9O1xuXG4gIEMuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBDLnByb3BUeXBlcyA9IHtcbiAgICAgIHdyYXBwZWRDb21wb25lbnRSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGhvaXN0U3RhdGljcyhDLCBDb21wb25lbnQpO1xufVxuXG52YXIgdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQ7XG5mdW5jdGlvbiB1c2VIaXN0b3J5KCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlSGlzdG9yeSgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGhpc3RvcnlDb250ZXh0KTtcbn1cbmZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlTG9jYXRpb24oKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KS5sb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIHVzZVBhcmFtcygpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVBhcmFtcygpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG4gIHJldHVybiBtYXRjaCA/IG1hdGNoLnBhcmFtcyA6IHt9O1xufVxuZnVuY3Rpb24gdXNlUm91dGVNYXRjaChwYXRoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VSb3V0ZU1hdGNoKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHBhdGgpIDogbWF0Y2g7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgZ2xvYmFsID0gd2luZG93O1xuICAgIHZhciBrZXkgPSBcIl9fcmVhY3Rfcm91dGVyX2J1aWxkX19cIjtcbiAgICB2YXIgYnVpbGROYW1lcyA9IHtcbiAgICAgIGNqczogXCJDb21tb25KU1wiLFxuICAgICAgZXNtOiBcIkVTIG1vZHVsZXNcIixcbiAgICAgIHVtZDogXCJVTURcIlxuICAgIH07XG5cbiAgICBpZiAoZ2xvYmFsW2tleV0gJiYgZ2xvYmFsW2tleV0gIT09IFwiZXNtXCIpIHtcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWxba2V5XV07XG4gICAgICB2YXIgc2Vjb25kYXJ5QnVpbGROYW1lID0gYnVpbGROYW1lc1tcImVzbVwiXTsgLy8gVE9ETzogQWRkIGxpbmsgdG8gYXJ0aWNsZSB0aGF0IGV4cGxhaW5zIGluIGRldGFpbCBob3cgdG8gYXZvaWRcbiAgICAgIC8vIGxvYWRpbmcgMiBkaWZmZXJlbnQgYnVpbGRzLlxuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgYXJlIGxvYWRpbmcgdGhlIFwiICsgc2Vjb25kYXJ5QnVpbGROYW1lICsgXCIgYnVpbGQgb2YgUmVhY3QgUm91dGVyIFwiICsgKFwib24gYSBwYWdlIHRoYXQgaXMgYWxyZWFkeSBydW5uaW5nIHRoZSBcIiArIGluaXRpYWxCdWlsZE5hbWUgKyBcIiBcIikgKyBcImJ1aWxkLCBzbyB0aGluZ3Mgd29uJ3Qgd29yayByaWdodC5cIik7XG4gICAgfVxuXG4gICAgZ2xvYmFsW2tleV0gPSBcImVzbVwiO1xuICB9XG59XG5cbmV4cG9ydCB7IE1lbW9yeVJvdXRlciwgUHJvbXB0LCBSZWRpcmVjdCwgUm91dGUsIFJvdXRlciwgU3RhdGljUm91dGVyLCBTd2l0Y2gsIGhpc3RvcnlDb250ZXh0IGFzIF9fSGlzdG9yeUNvbnRleHQsIGNvbnRleHQgYXMgX19Sb3V0ZXJDb250ZXh0LCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLmpzLm1hcFxuIiwiaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIG1hdGNoUGF0aCB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVCcm93c2VySGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXG4gKi9cblxudmFyIEhhc2hSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoSGFzaFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGFzaEhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBIYXNoUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciByZXNvbHZlVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJmdW5jdGlvblwiID8gdG8oY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcbnZhciBub3JtYWxpemVUb0xvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcblxudmFyIGZvcndhcmRSZWZTaGltID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cblxudmFyIExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIG5hdmlnYXRlID0gX3JlZi5uYXZpZ2F0ZSxcbiAgICAgIF9vbkNsaWNrID0gX3JlZi5vbkNsaWNrLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImlubmVyUmVmXCIsIFwibmF2aWdhdGVcIiwgXCJvbkNsaWNrXCJdKTtcblxuICB2YXIgdGFyZ2V0ID0gcmVzdC50YXJnZXQ7XG5cbiAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoX29uQ2xpY2spIF9vbkNsaWNrKGV2ZW50KTtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRocm93IGV4O1xuICAgICAgfVxuXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbmF2aWdhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICB9IGVsc2Uge1xuICAgIHByb3BzLnJlZiA9IGlubmVyUmVmO1xuICB9XG4gIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnQgKi9cblxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBwcm9wcyk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG5cbnZhciBMaW5rID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZjIsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZjIkY29tcG9uZW50ID0gX3JlZjIuY29tcG9uZW50LFxuICAgICAgY29tcG9uZW50ID0gX3JlZjIkY29tcG9uZW50ID09PSB2b2lkIDAgPyBMaW5rQW5jaG9yIDogX3JlZjIkY29tcG9uZW50LFxuICAgICAgcmVwbGFjZSA9IF9yZWYyLnJlcGxhY2UsXG4gICAgICB0byA9IF9yZWYyLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmMi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiY29tcG9uZW50XCIsIFwicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3Rvcnk7XG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xuICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBocmVmOiBocmVmLFxuICAgICAgbmF2aWdhdGU6IGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfVxuICAgIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGZvcndhcmRSZWZTaGltJDEgPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiQxID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbnZhciBOYXZMaW5rID0gZm9yd2FyZFJlZiQxKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvblByb3AgPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmUsXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzZW5zaXRpdmVcIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPE5hdkxpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGN1cnJlbnRMb2NhdGlvbiA9IGxvY2F0aW9uUHJvcCB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgIHZhciB0b0xvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSwgY3VycmVudExvY2F0aW9uKTtcbiAgICB2YXIgcGF0aCA9IHRvTG9jYXRpb24ucGF0aG5hbWU7IC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG5cbiAgICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuICAgIHZhciBtYXRjaCA9IGVzY2FwZWRQYXRoID8gbWF0Y2hQYXRoKGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSwge1xuICAgICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgICBleGFjdDogZXhhY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZSxcbiAgICAgIHN0cmljdDogc3RyaWN0XG4gICAgfSkgOiBudWxsO1xuICAgIHZhciBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcCA/IGlzQWN0aXZlUHJvcChtYXRjaCwgY3VycmVudExvY2F0aW9uKSA6IG1hdGNoKTtcbiAgICB2YXIgY2xhc3NOYW1lID0gaXNBY3RpdmUgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpIDogY2xhc3NOYW1lUHJvcDtcbiAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIHt9LCBhY3RpdmVTdHlsZSkgOiBzdHlsZVByb3A7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7XG4gICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICBzdHlsZTogc3R5bGUsXG4gICAgICB0bzogdG9Mb2NhdGlvblxuICAgIH0sIHJlc3QpOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltJDEgIT09IGZvcndhcmRSZWYkMSkge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHByb3BzKTtcbiAgfSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG4gIHZhciBhcmlhQ3VycmVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiXSk7XG4gIE5hdkxpbmsucHJvcFR5cGVzID0gX2V4dGVuZHMoe30sIExpbmsucHJvcFR5cGVzLCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5cbnZhciBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgPSAxMDczNzQxODIzO1xudmFyIGNvbW1vbmpzR2xvYmFsID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsVGhpcyA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDogdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOiB7fTtcblxuZnVuY3Rpb24gZ2V0VW5pcXVlSWQoKSB7XG4gIHZhciBrZXkgPSAnX19nbG9iYWxfdW5pcXVlX2lkX18nO1xuICByZXR1cm4gY29tbW9uanNHbG9iYWxba2V5XSA9IChjb21tb25qc0dsb2JhbFtrZXldIHx8IDApICsgMTtcbn1cblxuZnVuY3Rpb24gb2JqZWN0SXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50RW1pdHRlcih2YWx1ZSkge1xuICB2YXIgaGFuZGxlcnMgPSBbXTtcbiAgcmV0dXJuIHtcbiAgICBvbjogZnVuY3Rpb24gb24oaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMucHVzaChoYW5kbGVyKTtcbiAgICB9LFxuICAgIG9mZjogZnVuY3Rpb24gb2ZmKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzID0gaGFuZGxlcnMuZmlsdGVyKGZ1bmN0aW9uIChoKSB7XG4gICAgICAgIHJldHVybiBoICE9PSBoYW5kbGVyO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gc2V0KG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgdmFsdWUgPSBuZXdWYWx1ZTtcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIodmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gb25seUNoaWxkKGNoaWxkcmVuKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuWzBdIDogY2hpbGRyZW47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlYWN0Q29udGV4dChkZWZhdWx0VmFsdWUsIGNhbGN1bGF0ZUNoYW5nZWRCaXRzKSB7XG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXgsIF9Db25zdW1lciRjb250ZXh0VHlwZTtcblxuICB2YXIgY29udGV4dFByb3AgPSAnX19jcmVhdGUtcmVhY3QtY29udGV4dC0nICsgZ2V0VW5pcXVlSWQoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gICAgX2luaGVyaXRzTG9vc2UoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIF90aGlzID0gX0NvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpcy5lbWl0dGVyID0gY3JlYXRlRXZlbnRFbWl0dGVyKF90aGlzLnByb3BzLnZhbHVlKTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvID0gUHJvdmlkZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgIHZhciBfcmVmO1xuXG4gICAgICByZXR1cm4gX3JlZiA9IHt9LCBfcmVmW2NvbnRleHRQcm9wXSA9IHRoaXMuZW1pdHRlciwgX3JlZjtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgaWYgKHRoaXMucHJvcHMudmFsdWUgIT09IG5leHRQcm9wcy52YWx1ZSkge1xuICAgICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgbmV3VmFsdWUgPSBuZXh0UHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBjaGFuZ2VkQml0cztcblxuICAgICAgICBpZiAob2JqZWN0SXMob2xkVmFsdWUsIG5ld1ZhbHVlKSkge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IHR5cGVvZiBjYWxjdWxhdGVDaGFuZ2VkQml0cyA9PT0gJ2Z1bmN0aW9uJyA/IGNhbGN1bGF0ZUNoYW5nZWRCaXRzKG9sZFZhbHVlLCBuZXdWYWx1ZSkgOiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQ7XG5cbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgd2FybmluZygoY2hhbmdlZEJpdHMgJiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQpID09PSBjaGFuZ2VkQml0cywgJ2NhbGN1bGF0ZUNoYW5nZWRCaXRzOiBFeHBlY3RlZCB0aGUgcmV0dXJuIHZhbHVlIHRvIGJlIGEgJyArICczMS1iaXQgaW50ZWdlci4gSW5zdGVhZCByZWNlaXZlZDogJyArIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjaGFuZ2VkQml0cyB8PSAwO1xuXG4gICAgICAgICAgaWYgKGNoYW5nZWRCaXRzICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuc2V0KG5leHRQcm9wcy52YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfTtcblxuICAgIHJldHVybiBQcm92aWRlcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIFByb3ZpZGVyLmNoaWxkQ29udGV4dFR5cGVzID0gKF9Qcm92aWRlciRjaGlsZENvbnRleCA9IHt9LCBfUHJvdmlkZXIkY2hpbGRDb250ZXhbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xuXG4gIHZhciBDb25zdW1lciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudDIpIHtcbiAgICBfaW5oZXJpdHNMb29zZShDb25zdW1lciwgX0NvbXBvbmVudDIpO1xuXG4gICAgZnVuY3Rpb24gQ29uc3VtZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyO1xuXG4gICAgICBfdGhpczIgPSBfQ29tcG9uZW50Mi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICBfdGhpczIuc3RhdGUgPSB7XG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgfTtcblxuICAgICAgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gX3RoaXMyLm9ic2VydmVkQml0cyB8IDA7XG5cbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcbiAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBfdGhpczI7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90bzIgPSBDb25zdW1lci5wcm90b3R5cGU7XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IG5leHRQcm9wcy5vYnNlcnZlZEJpdHM7XG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vbih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cblxuICAgICAgdmFyIG9ic2VydmVkQml0cyA9IHRoaXMucHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub2ZmKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5nZXQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIF9wcm90bzIucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIG9ubHlDaGlsZCh0aGlzLnByb3BzLmNoaWxkcmVuKSh0aGlzLnN0YXRlLnZhbHVlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIENvbnN1bWVyO1xuICB9KENvbXBvbmVudCk7XG5cbiAgQ29uc3VtZXIuY29udGV4dFR5cGVzID0gKF9Db25zdW1lciRjb250ZXh0VHlwZSA9IHt9LCBfQ29uc3VtZXIkY29udGV4dFR5cGVbY29udGV4dFByb3BdID0gUHJvcFR5cGVzLm9iamVjdCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlKTtcbiAgcmV0dXJuIHtcbiAgICBQcm92aWRlcjogUHJvdmlkZXIsXG4gICAgQ29uc3VtZXI6IENvbnN1bWVyXG4gIH07XG59XG5cbnZhciBpbmRleCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQgfHwgY3JlYXRlUmVhY3RDb250ZXh0O1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsInZhciBpc2FycmF5ID0gcmVxdWlyZSgnaXNhcnJheScpXG5cbi8qKlxuICogRXhwb3NlIGBwYXRoVG9SZWdleHBgLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGhUb1JlZ2V4cFxubW9kdWxlLmV4cG9ydHMucGFyc2UgPSBwYXJzZVxubW9kdWxlLmV4cG9ydHMuY29tcGlsZSA9IGNvbXBpbGVcbm1vZHVsZS5leHBvcnRzLnRva2Vuc1RvRnVuY3Rpb24gPSB0b2tlbnNUb0Z1bmN0aW9uXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb1JlZ0V4cCA9IHRva2Vuc1RvUmVnRXhwXG5cbi8qKlxuICogVGhlIG1haW4gcGF0aCBtYXRjaGluZyByZWdleHAgdXRpbGl0eS5cbiAqXG4gKiBAdHlwZSB7UmVnRXhwfVxuICovXG52YXIgUEFUSF9SRUdFWFAgPSBuZXcgUmVnRXhwKFtcbiAgLy8gTWF0Y2ggZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgd291bGQgb3RoZXJ3aXNlIGFwcGVhciBpbiBmdXR1cmUgbWF0Y2hlcy5cbiAgLy8gVGhpcyBhbGxvd3MgdGhlIHVzZXIgdG8gZXNjYXBlIHNwZWNpYWwgY2hhcmFjdGVycyB0aGF0IHdvbid0IHRyYW5zZm9ybS5cbiAgJyhcXFxcXFxcXC4pJyxcbiAgLy8gTWF0Y2ggRXhwcmVzcy1zdHlsZSBwYXJhbWV0ZXJzIGFuZCB1bi1uYW1lZCBwYXJhbWV0ZXJzIHdpdGggYSBwcmVmaXhcbiAgLy8gYW5kIG9wdGlvbmFsIHN1ZmZpeGVzLiBNYXRjaGVzIGFwcGVhciBhczpcbiAgLy9cbiAgLy8gXCIvOnRlc3QoXFxcXGQrKT9cIiA9PiBbXCIvXCIsIFwidGVzdFwiLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCBcIj9cIiwgdW5kZWZpbmVkXVxuICAvLyBcIi9yb3V0ZShcXFxcZCspXCIgID0+IFt1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIlxcZCtcIiwgdW5kZWZpbmVkLCB1bmRlZmluZWRdXG4gIC8vIFwiLypcIiAgICAgICAgICAgID0+IFtcIi9cIiwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBcIipcIl1cbiAgJyhbXFxcXC8uXSk/KD86KD86XFxcXDooXFxcXHcrKSg/OlxcXFwoKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKCldKSspXFxcXCkpP3xcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKShbKyo/XSk/fChcXFxcKikpJ1xuXS5qb2luKCd8JyksICdnJylcblxuLyoqXG4gKiBQYXJzZSBhIHN0cmluZyBmb3IgdGhlIHJhdyB0b2tlbnMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSBvcHRpb25zXG4gKiBAcmV0dXJuIHshQXJyYXl9XG4gKi9cbmZ1bmN0aW9uIHBhcnNlIChzdHIsIG9wdGlvbnMpIHtcbiAgdmFyIHRva2VucyA9IFtdXG4gIHZhciBrZXkgPSAwXG4gIHZhciBpbmRleCA9IDBcbiAgdmFyIHBhdGggPSAnJ1xuICB2YXIgZGVmYXVsdERlbGltaXRlciA9IG9wdGlvbnMgJiYgb3B0aW9ucy5kZWxpbWl0ZXIgfHwgJy8nXG4gIHZhciByZXNcblxuICB3aGlsZSAoKHJlcyA9IFBBVEhfUkVHRVhQLmV4ZWMoc3RyKSkgIT0gbnVsbCkge1xuICAgIHZhciBtID0gcmVzWzBdXG4gICAgdmFyIGVzY2FwZWQgPSByZXNbMV1cbiAgICB2YXIgb2Zmc2V0ID0gcmVzLmluZGV4XG4gICAgcGF0aCArPSBzdHIuc2xpY2UoaW5kZXgsIG9mZnNldClcbiAgICBpbmRleCA9IG9mZnNldCArIG0ubGVuZ3RoXG5cbiAgICAvLyBJZ25vcmUgYWxyZWFkeSBlc2NhcGVkIHNlcXVlbmNlcy5cbiAgICBpZiAoZXNjYXBlZCkge1xuICAgICAgcGF0aCArPSBlc2NhcGVkWzFdXG4gICAgICBjb250aW51ZVxuICAgIH1cblxuICAgIHZhciBuZXh0ID0gc3RyW2luZGV4XVxuICAgIHZhciBwcmVmaXggPSByZXNbMl1cbiAgICB2YXIgbmFtZSA9IHJlc1szXVxuICAgIHZhciBjYXB0dXJlID0gcmVzWzRdXG4gICAgdmFyIGdyb3VwID0gcmVzWzVdXG4gICAgdmFyIG1vZGlmaWVyID0gcmVzWzZdXG4gICAgdmFyIGFzdGVyaXNrID0gcmVzWzddXG5cbiAgICAvLyBQdXNoIHRoZSBjdXJyZW50IHBhdGggb250byB0aGUgdG9rZW5zLlxuICAgIGlmIChwYXRoKSB7XG4gICAgICB0b2tlbnMucHVzaChwYXRoKVxuICAgICAgcGF0aCA9ICcnXG4gICAgfVxuXG4gICAgdmFyIHBhcnRpYWwgPSBwcmVmaXggIT0gbnVsbCAmJiBuZXh0ICE9IG51bGwgJiYgbmV4dCAhPT0gcHJlZml4XG4gICAgdmFyIHJlcGVhdCA9IG1vZGlmaWVyID09PSAnKycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBvcHRpb25hbCA9IG1vZGlmaWVyID09PSAnPycgfHwgbW9kaWZpZXIgPT09ICcqJ1xuICAgIHZhciBkZWxpbWl0ZXIgPSByZXNbMl0gfHwgZGVmYXVsdERlbGltaXRlclxuICAgIHZhciBwYXR0ZXJuID0gY2FwdHVyZSB8fCBncm91cFxuXG4gICAgdG9rZW5zLnB1c2goe1xuICAgICAgbmFtZTogbmFtZSB8fCBrZXkrKyxcbiAgICAgIHByZWZpeDogcHJlZml4IHx8ICcnLFxuICAgICAgZGVsaW1pdGVyOiBkZWxpbWl0ZXIsXG4gICAgICBvcHRpb25hbDogb3B0aW9uYWwsXG4gICAgICByZXBlYXQ6IHJlcGVhdCxcbiAgICAgIHBhcnRpYWw6IHBhcnRpYWwsXG4gICAgICBhc3RlcmlzazogISFhc3RlcmlzayxcbiAgICAgIHBhdHRlcm46IHBhdHRlcm4gPyBlc2NhcGVHcm91cChwYXR0ZXJuKSA6IChhc3RlcmlzayA/ICcuKicgOiAnW14nICsgZXNjYXBlU3RyaW5nKGRlbGltaXRlcikgKyAnXSs/JylcbiAgICB9KVxuICB9XG5cbiAgLy8gTWF0Y2ggYW55IGNoYXJhY3RlcnMgc3RpbGwgcmVtYWluaW5nLlxuICBpZiAoaW5kZXggPCBzdHIubGVuZ3RoKSB7XG4gICAgcGF0aCArPSBzdHIuc3Vic3RyKGluZGV4KVxuICB9XG5cbiAgLy8gSWYgdGhlIHBhdGggZXhpc3RzLCBwdXNoIGl0IG9udG8gdGhlIGVuZC5cbiAgaWYgKHBhdGgpIHtcbiAgICB0b2tlbnMucHVzaChwYXRoKVxuICB9XG5cbiAgcmV0dXJuIHRva2Vuc1xufVxuXG4vKipcbiAqIENvbXBpbGUgYSBzdHJpbmcgdG8gYSB0ZW1wbGF0ZSBmdW5jdGlvbiBmb3IgdGhlIHBhdGguXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgICAgICAgICAgICBzdHJcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IWZ1bmN0aW9uKE9iamVjdD0sIE9iamVjdD0pfVxuICovXG5mdW5jdGlvbiBjb21waWxlIChzdHIsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvRnVuY3Rpb24ocGFyc2Uoc3RyLCBvcHRpb25zKSwgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBQcmV0dGllciBlbmNvZGluZyBvZiBVUkkgcGF0aCBzZWdtZW50cy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVVSSUNvbXBvbmVudFByZXR0eSAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bXFwvPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEVuY29kZSB0aGUgYXN0ZXJpc2sgcGFyYW1ldGVyLiBTaW1pbGFyIHRvIGBwcmV0dHlgLCBidXQgYWxsb3dzIHNsYXNoZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVBc3RlcmlzayAoc3RyKSB7XG4gIHJldHVybiBlbmNvZGVVUkkoc3RyKS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICclJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKVxuICB9KVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIG1ldGhvZCBmb3IgdHJhbnNmb3JtaW5nIHRva2VucyBpbnRvIHRoZSBwYXRoIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiB0b2tlbnNUb0Z1bmN0aW9uICh0b2tlbnMsIG9wdGlvbnMpIHtcbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHRva2VucyBpbnRvIHJlZ2V4cHMuXG4gIHZhciBtYXRjaGVzID0gbmV3IEFycmF5KHRva2Vucy5sZW5ndGgpXG5cbiAgLy8gQ29tcGlsZSBhbGwgdGhlIHBhdHRlcm5zIGJlZm9yZSBjb21waWxhdGlvbi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAodHlwZW9mIHRva2Vuc1tpXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1hdGNoZXNbaV0gPSBuZXcgUmVnRXhwKCdeKD86JyArIHRva2Vuc1tpXS5wYXR0ZXJuICsgJykkJywgZmxhZ3Mob3B0aW9ucykpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zICYmIG9wdGlvbnMuc2Vuc2l0aXZlID8gJycgOiAnaSdcbn1cblxuLyoqXG4gKiBQdWxsIG91dCBrZXlzIGZyb20gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gcmVnZXhwVG9SZWdleHAgKHBhdGgsIGtleXMpIHtcbiAgLy8gVXNlIGEgbmVnYXRpdmUgbG9va2FoZWFkIHRvIG1hdGNoIG9ubHkgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgdmFyIGdyb3VwcyA9IHBhdGguc291cmNlLm1hdGNoKC9cXCgoPyFcXD8pL2cpXG5cbiAgaWYgKGdyb3Vwcykge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZ3JvdXBzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBrZXlzLnB1c2goe1xuICAgICAgICBuYW1lOiBpLFxuICAgICAgICBwcmVmaXg6IG51bGwsXG4gICAgICAgIGRlbGltaXRlcjogbnVsbCxcbiAgICAgICAgb3B0aW9uYWw6IGZhbHNlLFxuICAgICAgICByZXBlYXQ6IGZhbHNlLFxuICAgICAgICBwYXJ0aWFsOiBmYWxzZSxcbiAgICAgICAgYXN0ZXJpc2s6IGZhbHNlLFxuICAgICAgICBwYXR0ZXJuOiBudWxsXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKHBhdGgsIGtleXMpXG59XG5cbi8qKlxuICogVHJhbnNmb3JtIGFuIGFycmF5IGludG8gYSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgcGF0aFxuICogQHBhcmFtICB7QXJyYXl9ICAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gYXJyYXlUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICB2YXIgcGFydHMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgIHBhcnRzLnB1c2gocGF0aFRvUmVnZXhwKHBhdGhbaV0sIGtleXMsIG9wdGlvbnMpLnNvdXJjZSlcbiAgfVxuXG4gIHZhciByZWdleHAgPSBuZXcgUmVnRXhwKCcoPzonICsgcGFydHMuam9pbignfCcpICsgJyknLCBmbGFncyhvcHRpb25zKSlcblxuICByZXR1cm4gYXR0YWNoS2V5cyhyZWdleHAsIGtleXMpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgcGF0aCByZWdleHAgZnJvbSBzdHJpbmcgaW5wdXQuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgcGF0aFxuICogQHBhcmFtICB7IUFycmF5fSAga2V5c1xuICogQHBhcmFtICB7IU9iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRva2Vuc1RvUmVnRXhwKHBhcnNlKHBhdGgsIG9wdGlvbnMpLCBrZXlzLCBvcHRpb25zKVxufVxuXG4vKipcbiAqIEV4cG9zZSBhIGZ1bmN0aW9uIGZvciB0YWtpbmcgdG9rZW5zIGFuZCByZXR1cm5pbmcgYSBSZWdFeHAuXG4gKlxuICogQHBhcmFtICB7IUFycmF5fSAgICAgICAgICB0b2tlbnNcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0ga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiB0b2tlbnNUb1JlZ0V4cCAodG9rZW5zLCBrZXlzLCBvcHRpb25zKSB7XG4gIGlmICghaXNhcnJheShrZXlzKSkge1xuICAgIG9wdGlvbnMgPSAvKiogQHR5cGUgeyFPYmplY3R9ICovIChrZXlzIHx8IG9wdGlvbnMpXG4gICAga2V5cyA9IFtdXG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuXG4gIHZhciBzdHJpY3QgPSBvcHRpb25zLnN0cmljdFxuICB2YXIgZW5kID0gb3B0aW9ucy5lbmQgIT09IGZhbHNlXG4gIHZhciByb3V0ZSA9ICcnXG5cbiAgLy8gSXRlcmF0ZSBvdmVyIHRoZSB0b2tlbnMgYW5kIGNyZWF0ZSBvdXIgcmVnZXhwIHN0cmluZy5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICByb3V0ZSArPSBlc2NhcGVTdHJpbmcodG9rZW4pXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBwcmVmaXggPSBlc2NhcGVTdHJpbmcodG9rZW4ucHJlZml4KVxuICAgICAgdmFyIGNhcHR1cmUgPSAnKD86JyArIHRva2VuLnBhdHRlcm4gKyAnKSdcblxuICAgICAga2V5cy5wdXNoKHRva2VuKVxuXG4gICAgICBpZiAodG9rZW4ucmVwZWF0KSB7XG4gICAgICAgIGNhcHR1cmUgKz0gJyg/OicgKyBwcmVmaXggKyBjYXB0dXJlICsgJykqJ1xuICAgICAgfVxuXG4gICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgY2FwdHVyZSA9ICcoPzonICsgcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpKT8nXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2FwdHVyZSA9IHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKT8nXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyknXG4gICAgICB9XG5cbiAgICAgIHJvdXRlICs9IGNhcHR1cmVcbiAgICB9XG4gIH1cblxuICB2YXIgZGVsaW1pdGVyID0gZXNjYXBlU3RyaW5nKG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJylcbiAgdmFyIGVuZHNXaXRoRGVsaW1pdGVyID0gcm91dGUuc2xpY2UoLWRlbGltaXRlci5sZW5ndGgpID09PSBkZWxpbWl0ZXJcblxuICAvLyBJbiBub24tc3RyaWN0IG1vZGUgd2UgYWxsb3cgYSBzbGFzaCBhdCB0aGUgZW5kIG9mIG1hdGNoLiBJZiB0aGUgcGF0aCB0b1xuICAvLyBtYXRjaCBhbHJlYWR5IGVuZHMgd2l0aCBhIHNsYXNoLCB3ZSByZW1vdmUgaXQgZm9yIGNvbnNpc3RlbmN5LiBUaGUgc2xhc2hcbiAgLy8gaXMgdmFsaWQgYXQgdGhlIGVuZCBvZiBhIHBhdGggbWF0Y2gsIG5vdCBpbiB0aGUgbWlkZGxlLiBUaGlzIGlzIGltcG9ydGFudFxuICAvLyBpbiBub24tZW5kaW5nIG1vZGUsIHdoZXJlIFwiL3Rlc3QvXCIgc2hvdWxkbid0IG1hdGNoIFwiL3Rlc3QvL3JvdXRlXCIuXG4gIGlmICghc3RyaWN0KSB7XG4gICAgcm91dGUgPSAoZW5kc1dpdGhEZWxpbWl0ZXIgPyByb3V0ZS5zbGljZSgwLCAtZGVsaW1pdGVyLmxlbmd0aCkgOiByb3V0ZSkgKyAnKD86JyArIGRlbGltaXRlciArICcoPz0kKSk/J1xuICB9XG5cbiAgaWYgKGVuZCkge1xuICAgIHJvdXRlICs9ICckJ1xuICB9IGVsc2Uge1xuICAgIC8vIEluIG5vbi1lbmRpbmcgbW9kZSwgd2UgbmVlZCB0aGUgY2FwdHVyaW5nIGdyb3VwcyB0byBtYXRjaCBhcyBtdWNoIGFzXG4gICAgLy8gcG9zc2libGUgYnkgdXNpbmcgYSBwb3NpdGl2ZSBsb29rYWhlYWQgdG8gdGhlIGVuZCBvciBuZXh0IHBhdGggc2VnbWVudC5cbiAgICByb3V0ZSArPSBzdHJpY3QgJiYgZW5kc1dpdGhEZWxpbWl0ZXIgPyAnJyA6ICcoPz0nICsgZGVsaW1pdGVyICsgJ3wkKSdcbiAgfVxuXG4gIHJldHVybiBhdHRhY2hLZXlzKG5ldyBSZWdFeHAoJ14nICsgcm91dGUsIGZsYWdzKG9wdGlvbnMpKSwga2V5cylcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIGdpdmVuIHBhdGggc3RyaW5nLCByZXR1cm5pbmcgYSByZWd1bGFyIGV4cHJlc3Npb24uXG4gKlxuICogQW4gZW1wdHkgYXJyYXkgY2FuIGJlIHBhc3NlZCBpbiBmb3IgdGhlIGtleXMsIHdoaWNoIHdpbGwgaG9sZCB0aGVcbiAqIHBsYWNlaG9sZGVyIGtleSBkZXNjcmlwdGlvbnMuIEZvciBleGFtcGxlLCB1c2luZyBgL3VzZXIvOmlkYCwgYGtleXNgIHdpbGxcbiAqIGNvbnRhaW4gYFt7IG5hbWU6ICdpZCcsIGRlbGltaXRlcjogJy8nLCBvcHRpb25hbDogZmFsc2UsIHJlcGVhdDogZmFsc2UgfV1gLlxuICpcbiAqIEBwYXJhbSAgeyhzdHJpbmd8UmVnRXhwfEFycmF5KX0gcGF0aFxuICogQHBhcmFtICB7KEFycmF5fE9iamVjdCk9fSAgICAgICBrZXlzXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHBhdGhUb1JlZ2V4cCAocGF0aCwga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBpZiAocGF0aCBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiByZWdleHBUb1JlZ2V4cChwYXRoLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpKVxuICB9XG5cbiAgaWYgKGlzYXJyYXkocGF0aCkpIHtcbiAgICByZXR1cm4gYXJyYXlUb1JlZ2V4cCgvKiogQHR5cGUgeyFBcnJheX0gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxuICB9XG5cbiAgcmV0dXJuIHN0cmluZ1RvUmVnZXhwKC8qKiBAdHlwZSB7c3RyaW5nfSAqLyAocGF0aCksIC8qKiBAdHlwZSB7IUFycmF5fSAqLyAoa2V5cyksIG9wdGlvbnMpXG59XG4iLCJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIiwiaW1wb3J0IG1lbW9pemUgZnJvbSAnQGVtb3Rpb24vbWVtb2l6ZSc7XG5cbnZhciByZWFjdFByb3BzUmVnZXggPSAvXigoY2hpbGRyZW58ZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUx8a2V5fHJlZnxhdXRvRm9jdXN8ZGVmYXVsdFZhbHVlfGRlZmF1bHRDaGVja2VkfGlubmVySFRNTHxzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmd8c3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nfHZhbHVlTGlua3xhY2NlcHR8YWNjZXB0Q2hhcnNldHxhY2Nlc3NLZXl8YWN0aW9ufGFsbG93fGFsbG93VXNlck1lZGlhfGFsbG93UGF5bWVudFJlcXVlc3R8YWxsb3dGdWxsU2NyZWVufGFsbG93VHJhbnNwYXJlbmN5fGFsdHxhc3luY3xhdXRvQ29tcGxldGV8YXV0b1BsYXl8Y2FwdHVyZXxjZWxsUGFkZGluZ3xjZWxsU3BhY2luZ3xjaGFsbGVuZ2V8Y2hhclNldHxjaGVja2VkfGNpdGV8Y2xhc3NJRHxjbGFzc05hbWV8Y29sc3xjb2xTcGFufGNvbnRlbnR8Y29udGVudEVkaXRhYmxlfGNvbnRleHRNZW51fGNvbnRyb2xzfGNvbnRyb2xzTGlzdHxjb29yZHN8Y3Jvc3NPcmlnaW58ZGF0YXxkYXRlVGltZXxkZWNvZGluZ3xkZWZhdWx0fGRlZmVyfGRpcnxkaXNhYmxlZHxkaXNhYmxlUGljdHVyZUluUGljdHVyZXxkb3dubG9hZHxkcmFnZ2FibGV8ZW5jVHlwZXxmb3JtfGZvcm1BY3Rpb258Zm9ybUVuY1R5cGV8Zm9ybU1ldGhvZHxmb3JtTm9WYWxpZGF0ZXxmb3JtVGFyZ2V0fGZyYW1lQm9yZGVyfGhlYWRlcnN8aGVpZ2h0fGhpZGRlbnxoaWdofGhyZWZ8aHJlZkxhbmd8aHRtbEZvcnxodHRwRXF1aXZ8aWR8aW5wdXRNb2RlfGludGVncml0eXxpc3xrZXlQYXJhbXN8a2V5VHlwZXxraW5kfGxhYmVsfGxhbmd8bGlzdHxsb2FkaW5nfGxvb3B8bG93fG1hcmdpbkhlaWdodHxtYXJnaW5XaWR0aHxtYXh8bWF4TGVuZ3RofG1lZGlhfG1lZGlhR3JvdXB8bWV0aG9kfG1pbnxtaW5MZW5ndGh8bXVsdGlwbGV8bXV0ZWR8bmFtZXxub25jZXxub1ZhbGlkYXRlfG9wZW58b3B0aW11bXxwYXR0ZXJufHBsYWNlaG9sZGVyfHBsYXlzSW5saW5lfHBvc3RlcnxwcmVsb2FkfHByb2ZpbGV8cmFkaW9Hcm91cHxyZWFkT25seXxyZWZlcnJlclBvbGljeXxyZWx8cmVxdWlyZWR8cmV2ZXJzZWR8cm9sZXxyb3dzfHJvd1NwYW58c2FuZGJveHxzY29wZXxzY29wZWR8c2Nyb2xsaW5nfHNlYW1sZXNzfHNlbGVjdGVkfHNoYXBlfHNpemV8c2l6ZXN8c2xvdHxzcGFufHNwZWxsQ2hlY2t8c3JjfHNyY0RvY3xzcmNMYW5nfHNyY1NldHxzdGFydHxzdGVwfHN0eWxlfHN1bW1hcnl8dGFiSW5kZXh8dGFyZ2V0fHRpdGxlfHR5cGV8dXNlTWFwfHZhbHVlfHdpZHRofHdtb2RlfHdyYXB8YWJvdXR8ZGF0YXR5cGV8aW5saXN0fHByZWZpeHxwcm9wZXJ0eXxyZXNvdXJjZXx0eXBlb2Z8dm9jYWJ8YXV0b0NhcGl0YWxpemV8YXV0b0NvcnJlY3R8YXV0b1NhdmV8Y29sb3J8aW5lcnR8aXRlbVByb3B8aXRlbVNjb3BlfGl0ZW1UeXBlfGl0ZW1JRHxpdGVtUmVmfG9ufHJlc3VsdHN8c2VjdXJpdHl8dW5zZWxlY3RhYmxlfGFjY2VudEhlaWdodHxhY2N1bXVsYXRlfGFkZGl0aXZlfGFsaWdubWVudEJhc2VsaW5lfGFsbG93UmVvcmRlcnxhbHBoYWJldGljfGFtcGxpdHVkZXxhcmFiaWNGb3JtfGFzY2VudHxhdHRyaWJ1dGVOYW1lfGF0dHJpYnV0ZVR5cGV8YXV0b1JldmVyc2V8YXppbXV0aHxiYXNlRnJlcXVlbmN5fGJhc2VsaW5lU2hpZnR8YmFzZVByb2ZpbGV8YmJveHxiZWdpbnxiaWFzfGJ5fGNhbGNNb2RlfGNhcEhlaWdodHxjbGlwfGNsaXBQYXRoVW5pdHN8Y2xpcFBhdGh8Y2xpcFJ1bGV8Y29sb3JJbnRlcnBvbGF0aW9ufGNvbG9ySW50ZXJwb2xhdGlvbkZpbHRlcnN8Y29sb3JQcm9maWxlfGNvbG9yUmVuZGVyaW5nfGNvbnRlbnRTY3JpcHRUeXBlfGNvbnRlbnRTdHlsZVR5cGV8Y3Vyc29yfGN4fGN5fGR8ZGVjZWxlcmF0ZXxkZXNjZW50fGRpZmZ1c2VDb25zdGFudHxkaXJlY3Rpb258ZGlzcGxheXxkaXZpc29yfGRvbWluYW50QmFzZWxpbmV8ZHVyfGR4fGR5fGVkZ2VNb2RlfGVsZXZhdGlvbnxlbmFibGVCYWNrZ3JvdW5kfGVuZHxleHBvbmVudHxleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkfGZpbGx8ZmlsbE9wYWNpdHl8ZmlsbFJ1bGV8ZmlsdGVyfGZpbHRlclJlc3xmaWx0ZXJVbml0c3xmbG9vZENvbG9yfGZsb29kT3BhY2l0eXxmb2N1c2FibGV8Zm9udEZhbWlseXxmb250U2l6ZXxmb250U2l6ZUFkanVzdHxmb250U3RyZXRjaHxmb250U3R5bGV8Zm9udFZhcmlhbnR8Zm9udFdlaWdodHxmb3JtYXR8ZnJvbXxmcnxmeHxmeXxnMXxnMnxnbHlwaE5hbWV8Z2x5cGhPcmllbnRhdGlvbkhvcml6b250YWx8Z2x5cGhPcmllbnRhdGlvblZlcnRpY2FsfGdseXBoUmVmfGdyYWRpZW50VHJhbnNmb3JtfGdyYWRpZW50VW5pdHN8aGFuZ2luZ3xob3JpekFkdlh8aG9yaXpPcmlnaW5YfGlkZW9ncmFwaGljfGltYWdlUmVuZGVyaW5nfGlufGluMnxpbnRlcmNlcHR8a3xrMXxrMnxrM3xrNHxrZXJuZWxNYXRyaXh8a2VybmVsVW5pdExlbmd0aHxrZXJuaW5nfGtleVBvaW50c3xrZXlTcGxpbmVzfGtleVRpbWVzfGxlbmd0aEFkanVzdHxsZXR0ZXJTcGFjaW5nfGxpZ2h0aW5nQ29sb3J8bGltaXRpbmdDb25lQW5nbGV8bG9jYWx8bWFya2VyRW5kfG1hcmtlck1pZHxtYXJrZXJTdGFydHxtYXJrZXJIZWlnaHR8bWFya2VyVW5pdHN8bWFya2VyV2lkdGh8bWFza3xtYXNrQ29udGVudFVuaXRzfG1hc2tVbml0c3xtYXRoZW1hdGljYWx8bW9kZXxudW1PY3RhdmVzfG9mZnNldHxvcGFjaXR5fG9wZXJhdG9yfG9yZGVyfG9yaWVudHxvcmllbnRhdGlvbnxvcmlnaW58b3ZlcmZsb3d8b3ZlcmxpbmVQb3NpdGlvbnxvdmVybGluZVRoaWNrbmVzc3xwYW5vc2UxfHBhaW50T3JkZXJ8cGF0aExlbmd0aHxwYXR0ZXJuQ29udGVudFVuaXRzfHBhdHRlcm5UcmFuc2Zvcm18cGF0dGVyblVuaXRzfHBvaW50ZXJFdmVudHN8cG9pbnRzfHBvaW50c0F0WHxwb2ludHNBdFl8cG9pbnRzQXRafHByZXNlcnZlQWxwaGF8cHJlc2VydmVBc3BlY3RSYXRpb3xwcmltaXRpdmVVbml0c3xyfHJhZGl1c3xyZWZYfHJlZll8cmVuZGVyaW5nSW50ZW50fHJlcGVhdENvdW50fHJlcGVhdER1cnxyZXF1aXJlZEV4dGVuc2lvbnN8cmVxdWlyZWRGZWF0dXJlc3xyZXN0YXJ0fHJlc3VsdHxyb3RhdGV8cnh8cnl8c2NhbGV8c2VlZHxzaGFwZVJlbmRlcmluZ3xzbG9wZXxzcGFjaW5nfHNwZWN1bGFyQ29uc3RhbnR8c3BlY3VsYXJFeHBvbmVudHxzcGVlZHxzcHJlYWRNZXRob2R8c3RhcnRPZmZzZXR8c3RkRGV2aWF0aW9ufHN0ZW1ofHN0ZW12fHN0aXRjaFRpbGVzfHN0b3BDb2xvcnxzdG9wT3BhY2l0eXxzdHJpa2V0aHJvdWdoUG9zaXRpb258c3RyaWtldGhyb3VnaFRoaWNrbmVzc3xzdHJpbmd8c3Ryb2tlfHN0cm9rZURhc2hhcnJheXxzdHJva2VEYXNob2Zmc2V0fHN0cm9rZUxpbmVjYXB8c3Ryb2tlTGluZWpvaW58c3Ryb2tlTWl0ZXJsaW1pdHxzdHJva2VPcGFjaXR5fHN0cm9rZVdpZHRofHN1cmZhY2VTY2FsZXxzeXN0ZW1MYW5ndWFnZXx0YWJsZVZhbHVlc3x0YXJnZXRYfHRhcmdldFl8dGV4dEFuY2hvcnx0ZXh0RGVjb3JhdGlvbnx0ZXh0UmVuZGVyaW5nfHRleHRMZW5ndGh8dG98dHJhbnNmb3JtfHUxfHUyfHVuZGVybGluZVBvc2l0aW9ufHVuZGVybGluZVRoaWNrbmVzc3x1bmljb2RlfHVuaWNvZGVCaWRpfHVuaWNvZGVSYW5nZXx1bml0c1BlckVtfHZBbHBoYWJldGljfHZIYW5naW5nfHZJZGVvZ3JhcGhpY3x2TWF0aGVtYXRpY2FsfHZhbHVlc3x2ZWN0b3JFZmZlY3R8dmVyc2lvbnx2ZXJ0QWR2WXx2ZXJ0T3JpZ2luWHx2ZXJ0T3JpZ2luWXx2aWV3Qm94fHZpZXdUYXJnZXR8dmlzaWJpbGl0eXx3aWR0aHN8d29yZFNwYWNpbmd8d3JpdGluZ01vZGV8eHx4SGVpZ2h0fHgxfHgyfHhDaGFubmVsU2VsZWN0b3J8eGxpbmtBY3R1YXRlfHhsaW5rQXJjcm9sZXx4bGlua0hyZWZ8eGxpbmtSb2xlfHhsaW5rU2hvd3x4bGlua1RpdGxlfHhsaW5rVHlwZXx4bWxCYXNlfHhtbG5zfHhtbG5zWGxpbmt8eG1sTGFuZ3x4bWxTcGFjZXx5fHkxfHkyfHlDaGFubmVsU2VsZWN0b3J8enx6b29tQW5kUGFufGZvcnxjbGFzc3xhdXRvZm9jdXMpfCgoW0RkXVtBYV1bVHRdW0FhXXxbQWFdW1JyXVtJaV1bQWFdfHgpLS4qKSkkLzsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YmZlZTY4YTRjZDdlNjAwOWVmNjFkMjNcblxudmFyIGluZGV4ID0gbWVtb2l6ZShmdW5jdGlvbiAocHJvcCkge1xuICByZXR1cm4gcmVhY3RQcm9wc1JlZ2V4LnRlc3QocHJvcCkgfHwgcHJvcC5jaGFyQ29kZUF0KDApID09PSAxMTFcbiAgLyogbyAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMSkgPT09IDExMFxuICAvKiBuICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgyKSA8IDkxO1xufVxuLyogWisxICovXG4pO1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYmluZChmbiwgdGhpc0FyZykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcCgpIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gZW5jb2RlKHZhbCkge1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbCkuXG4gICAgcmVwbGFjZSgvJTQwL2dpLCAnQCcpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkVVJMKHVybCwgcGFyYW1zLCBwYXJhbXNTZXJpYWxpemVyKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZFBhcmFtcztcbiAgaWYgKHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zU2VyaWFsaXplcihwYXJhbXMpO1xuICB9IGVsc2UgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKHBhcmFtcykpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHBhcnRzID0gW107XG5cbiAgICB1dGlscy5mb3JFYWNoKHBhcmFtcywgZnVuY3Rpb24gc2VyaWFsaXplKHZhbCwga2V5KSB7XG4gICAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodmFsKSkge1xuICAgICAgICBrZXkgPSBrZXkgKyAnW10nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsID0gW3ZhbF07XG4gICAgICB9XG5cbiAgICAgIHV0aWxzLmZvckVhY2godmFsLCBmdW5jdGlvbiBwYXJzZVZhbHVlKHYpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzRGF0ZSh2KSkge1xuICAgICAgICAgIHYgPSB2LnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3QodikpIHtcbiAgICAgICAgICB2ID0gSlNPTi5zdHJpbmdpZnkodik7XG4gICAgICAgIH1cbiAgICAgICAgcGFydHMucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2KSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJ0cy5qb2luKCcmJyk7XG4gIH1cblxuICBpZiAoc2VyaWFsaXplZFBhcmFtcykge1xuICAgIHZhciBoYXNobWFya0luZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgICBpZiAoaGFzaG1hcmtJbmRleCAhPT0gLTEpIHtcbiAgICAgIHVybCA9IHVybC5zbGljZSgwLCBoYXNobWFya0luZGV4KTtcbiAgICB9XG5cbiAgICB1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPT09IC0xID8gJz8nIDogJyYnKSArIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0NhbmNlbCh2YWx1ZSkge1xuICByZXR1cm4gISEodmFsdWUgJiYgdmFsdWUuX19DQU5DRUxfXyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgbm9ybWFsaXplSGVhZGVyTmFtZSA9IHJlcXVpcmUoJy4vaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lJyk7XG5cbnZhciBERUZBVUxUX0NPTlRFTlRfVFlQRSA9IHtcbiAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnXG59O1xuXG5mdW5jdGlvbiBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgdmFsdWUpIHtcbiAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzKSAmJiB1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzWydDb250ZW50LVR5cGUnXSkpIHtcbiAgICBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9IHZhbHVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRBZGFwdGVyKCkge1xuICB2YXIgYWRhcHRlcjtcbiAgaWYgKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBGb3IgYnJvd3NlcnMgdXNlIFhIUiBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMveGhyJyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChwcm9jZXNzKSA9PT0gJ1tvYmplY3QgcHJvY2Vzc10nKSB7XG4gICAgLy8gRm9yIG5vZGUgdXNlIEhUVFAgYWRhcHRlclxuICAgIGFkYXB0ZXIgPSByZXF1aXJlKCcuL2FkYXB0ZXJzL2h0dHAnKTtcbiAgfVxuICByZXR1cm4gYWRhcHRlcjtcbn1cblxudmFyIGRlZmF1bHRzID0ge1xuICBhZGFwdGVyOiBnZXREZWZhdWx0QWRhcHRlcigpLFxuXG4gIHRyYW5zZm9ybVJlcXVlc3Q6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXF1ZXN0KGRhdGEsIGhlYWRlcnMpIHtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdBY2NlcHQnKTtcbiAgICBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsICdDb250ZW50LVR5cGUnKTtcbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNBcnJheUJ1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzU3RyZWFtKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0ZpbGUoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQmxvYihkYXRhKVxuICAgICkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyVmlldyhkYXRhKSkge1xuICAgICAgcmV0dXJuIGRhdGEuYnVmZmVyO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBkYXRhLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc09iamVjdChkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIHRyYW5zZm9ybVJlc3BvbnNlOiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVzcG9uc2UoZGF0YSkge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgfSBjYXRjaCAoZSkgeyAvKiBJZ25vcmUgKi8gfVxuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgLyoqXG4gICAqIEEgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgdG8gYWJvcnQgYSByZXF1ZXN0LiBJZiBzZXQgdG8gMCAoZGVmYXVsdCkgYVxuICAgKiB0aW1lb3V0IGlzIG5vdCBjcmVhdGVkLlxuICAgKi9cbiAgdGltZW91dDogMCxcblxuICB4c3JmQ29va2llTmFtZTogJ1hTUkYtVE9LRU4nLFxuICB4c3JmSGVhZGVyTmFtZTogJ1gtWFNSRi1UT0tFTicsXG5cbiAgbWF4Q29udGVudExlbmd0aDogLTEsXG5cbiAgdmFsaWRhdGVTdGF0dXM6IGZ1bmN0aW9uIHZhbGlkYXRlU3RhdHVzKHN0YXR1cykge1xuICAgIHJldHVybiBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMDtcbiAgfVxufTtcblxuZGVmYXVsdHMuaGVhZGVycyA9IHtcbiAgY29tbW9uOiB7XG4gICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyonXG4gIH1cbn07XG5cbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0ge307XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0gdXRpbHMubWVyZ2UoREVGQVVMVF9DT05URU5UX1RZUEUpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmYXVsdHM7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBidWlsZEZ1bGxQYXRoID0gcmVxdWlyZSgnLi4vY29yZS9idWlsZEZ1bGxQYXRoJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvY3JlYXRlRXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4aHJBZGFwdGVyKGNvbmZpZykge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZGlzcGF0Y2hYaHJSZXF1ZXN0KHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0RGF0YSA9IGNvbmZpZy5kYXRhO1xuICAgIHZhciByZXF1ZXN0SGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEocmVxdWVzdERhdGEpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfVxuXG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgIC8vIEhUVFAgYmFzaWMgYXV0aGVudGljYXRpb25cbiAgICBpZiAoY29uZmlnLmF1dGgpIHtcbiAgICAgIHZhciB1c2VybmFtZSA9IGNvbmZpZy5hdXRoLnVzZXJuYW1lIHx8ICcnO1xuICAgICAgdmFyIHBhc3N3b3JkID0gY29uZmlnLmF1dGgucGFzc3dvcmQgfHwgJyc7XG4gICAgICByZXF1ZXN0SGVhZGVycy5BdXRob3JpemF0aW9uID0gJ0Jhc2ljICcgKyBidG9hKHVzZXJuYW1lICsgJzonICsgcGFzc3dvcmQpO1xuICAgIH1cblxuICAgIHZhciBmdWxsUGF0aCA9IGJ1aWxkRnVsbFBhdGgoY29uZmlnLmJhc2VVUkwsIGNvbmZpZy51cmwpO1xuICAgIHJlcXVlc3Qub3Blbihjb25maWcubWV0aG9kLnRvVXBwZXJDYXNlKCksIGJ1aWxkVVJMKGZ1bGxQYXRoLCBjb25maWcucGFyYW1zLCBjb25maWcucGFyYW1zU2VyaWFsaXplciksIHRydWUpO1xuXG4gICAgLy8gU2V0IHRoZSByZXF1ZXN0IHRpbWVvdXQgaW4gTVNcbiAgICByZXF1ZXN0LnRpbWVvdXQgPSBjb25maWcudGltZW91dDtcblxuICAgIC8vIExpc3RlbiBmb3IgcmVhZHkgc3RhdGVcbiAgICByZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uIGhhbmRsZUxvYWQoKSB7XG4gICAgICBpZiAoIXJlcXVlc3QgfHwgcmVxdWVzdC5yZWFkeVN0YXRlICE9PSA0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gVGhlIHJlcXVlc3QgZXJyb3JlZCBvdXQgYW5kIHdlIGRpZG4ndCBnZXQgYSByZXNwb25zZSwgdGhpcyB3aWxsIGJlXG4gICAgICAvLyBoYW5kbGVkIGJ5IG9uZXJyb3IgaW5zdGVhZFxuICAgICAgLy8gV2l0aCBvbmUgZXhjZXB0aW9uOiByZXF1ZXN0IHRoYXQgdXNpbmcgZmlsZTogcHJvdG9jb2wsIG1vc3QgYnJvd3NlcnNcbiAgICAgIC8vIHdpbGwgcmV0dXJuIHN0YXR1cyBhcyAwIGV2ZW4gdGhvdWdoIGl0J3MgYSBzdWNjZXNzZnVsIHJlcXVlc3RcbiAgICAgIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gMCAmJiAhKHJlcXVlc3QucmVzcG9uc2VVUkwgJiYgcmVxdWVzdC5yZXNwb25zZVVSTC5pbmRleE9mKCdmaWxlOicpID09PSAwKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFByZXBhcmUgdGhlIHJlc3BvbnNlXG4gICAgICB2YXIgcmVzcG9uc2VIZWFkZXJzID0gJ2dldEFsbFJlc3BvbnNlSGVhZGVycycgaW4gcmVxdWVzdCA/IHBhcnNlSGVhZGVycyhyZXF1ZXN0LmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSA6IG51bGw7XG4gICAgICB2YXIgcmVzcG9uc2VEYXRhID0gIWNvbmZpZy5yZXNwb25zZVR5cGUgfHwgY29uZmlnLnJlc3BvbnNlVHlwZSA9PT0gJ3RleHQnID8gcmVxdWVzdC5yZXNwb25zZVRleHQgOiByZXF1ZXN0LnJlc3BvbnNlO1xuICAgICAgdmFyIHJlc3BvbnNlID0ge1xuICAgICAgICBkYXRhOiByZXNwb25zZURhdGEsXG4gICAgICAgIHN0YXR1czogcmVxdWVzdC5zdGF0dXMsXG4gICAgICAgIHN0YXR1c1RleHQ6IHJlcXVlc3Quc3RhdHVzVGV4dCxcbiAgICAgICAgaGVhZGVyczogcmVzcG9uc2VIZWFkZXJzLFxuICAgICAgICBjb25maWc6IGNvbmZpZyxcbiAgICAgICAgcmVxdWVzdDogcmVxdWVzdFxuICAgICAgfTtcblxuICAgICAgc2V0dGxlKHJlc29sdmUsIHJlamVjdCwgcmVzcG9uc2UpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIGJyb3dzZXIgcmVxdWVzdCBjYW5jZWxsYXRpb24gKGFzIG9wcG9zZWQgdG8gYSBtYW51YWwgY2FuY2VsbGF0aW9uKVxuICAgIHJlcXVlc3Qub25hYm9ydCA9IGZ1bmN0aW9uIGhhbmRsZUFib3J0KCkge1xuICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKCdSZXF1ZXN0IGFib3J0ZWQnLCBjb25maWcsICdFQ09OTkFCT1JURUQnLCByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgbG93IGxldmVsIG5ldHdvcmsgZXJyb3JzXG4gICAgcmVxdWVzdC5vbmVycm9yID0gZnVuY3Rpb24gaGFuZGxlRXJyb3IoKSB7XG4gICAgICAvLyBSZWFsIGVycm9ycyBhcmUgaGlkZGVuIGZyb20gdXMgYnkgdGhlIGJyb3dzZXJcbiAgICAgIC8vIG9uZXJyb3Igc2hvdWxkIG9ubHkgZmlyZSBpZiBpdCdzIGEgbmV0d29yayBlcnJvclxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKCdOZXR3b3JrIEVycm9yJywgY29uZmlnLCBudWxsLCByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgdGltZW91dFxuICAgIHJlcXVlc3Qub250aW1lb3V0ID0gZnVuY3Rpb24gaGFuZGxlVGltZW91dCgpIHtcbiAgICAgIHZhciB0aW1lb3V0RXJyb3JNZXNzYWdlID0gJ3RpbWVvdXQgb2YgJyArIGNvbmZpZy50aW1lb3V0ICsgJ21zIGV4Y2VlZGVkJztcbiAgICAgIGlmIChjb25maWcudGltZW91dEVycm9yTWVzc2FnZSkge1xuICAgICAgICB0aW1lb3V0RXJyb3JNZXNzYWdlID0gY29uZmlnLnRpbWVvdXRFcnJvck1lc3NhZ2U7XG4gICAgICB9XG4gICAgICByZWplY3QoY3JlYXRlRXJyb3IodGltZW91dEVycm9yTWVzc2FnZSwgY29uZmlnLCAnRUNPTk5BQk9SVEVEJyxcbiAgICAgICAgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gQWRkIHhzcmYgaGVhZGVyXG4gICAgLy8gVGhpcyBpcyBvbmx5IGRvbmUgaWYgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnQuXG4gICAgLy8gU3BlY2lmaWNhbGx5IG5vdCBpZiB3ZSdyZSBpbiBhIHdlYiB3b3JrZXIsIG9yIHJlYWN0LW5hdGl2ZS5cbiAgICBpZiAodXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSkge1xuICAgICAgdmFyIGNvb2tpZXMgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvY29va2llcycpO1xuXG4gICAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAgIHZhciB4c3JmVmFsdWUgPSAoY29uZmlnLndpdGhDcmVkZW50aWFscyB8fCBpc1VSTFNhbWVPcmlnaW4oZnVsbFBhdGgpKSAmJiBjb25maWcueHNyZkNvb2tpZU5hbWUgP1xuICAgICAgICBjb29raWVzLnJlYWQoY29uZmlnLnhzcmZDb29raWVOYW1lKSA6XG4gICAgICAgIHVuZGVmaW5lZDtcblxuICAgICAgaWYgKHhzcmZWYWx1ZSkge1xuICAgICAgICByZXF1ZXN0SGVhZGVyc1tjb25maWcueHNyZkhlYWRlck5hbWVdID0geHNyZlZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCBoZWFkZXJzIHRvIHRoZSByZXF1ZXN0XG4gICAgaWYgKCdzZXRSZXF1ZXN0SGVhZGVyJyBpbiByZXF1ZXN0KSB7XG4gICAgICB1dGlscy5mb3JFYWNoKHJlcXVlc3RIZWFkZXJzLCBmdW5jdGlvbiBzZXRSZXF1ZXN0SGVhZGVyKHZhbCwga2V5KSB7XG4gICAgICAgIGlmICh0eXBlb2YgcmVxdWVzdERhdGEgPT09ICd1bmRlZmluZWQnICYmIGtleS50b0xvd2VyQ2FzZSgpID09PSAnY29udGVudC10eXBlJykge1xuICAgICAgICAgIC8vIFJlbW92ZSBDb250ZW50LVR5cGUgaWYgZGF0YSBpcyB1bmRlZmluZWRcbiAgICAgICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNba2V5XTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBPdGhlcndpc2UgYWRkIGhlYWRlciB0byB0aGUgcmVxdWVzdFxuICAgICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcihrZXksIHZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEFkZCB3aXRoQ3JlZGVudGlhbHMgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZy53aXRoQ3JlZGVudGlhbHMpKSB7XG4gICAgICByZXF1ZXN0LndpdGhDcmVkZW50aWFscyA9ICEhY29uZmlnLndpdGhDcmVkZW50aWFscztcbiAgICB9XG5cbiAgICAvLyBBZGQgcmVzcG9uc2VUeXBlIHRvIHJlcXVlc3QgaWYgbmVlZGVkXG4gICAgaWYgKGNvbmZpZy5yZXNwb25zZVR5cGUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJlcXVlc3QucmVzcG9uc2VUeXBlID0gY29uZmlnLnJlc3BvbnNlVHlwZTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gRXhwZWN0ZWQgRE9NRXhjZXB0aW9uIHRocm93biBieSBicm93c2VycyBub3QgY29tcGF0aWJsZSBYTUxIdHRwUmVxdWVzdCBMZXZlbCAyLlxuICAgICAgICAvLyBCdXQsIHRoaXMgY2FuIGJlIHN1cHByZXNzZWQgZm9yICdqc29uJyB0eXBlIGFzIGl0IGNhbiBiZSBwYXJzZWQgYnkgZGVmYXVsdCAndHJhbnNmb3JtUmVzcG9uc2UnIGZ1bmN0aW9uLlxuICAgICAgICBpZiAoY29uZmlnLnJlc3BvbnNlVHlwZSAhPT0gJ2pzb24nKSB7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEhhbmRsZSBwcm9ncmVzcyBpZiBuZWVkZWRcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25Eb3dubG9hZFByb2dyZXNzKTtcbiAgICB9XG5cbiAgICAvLyBOb3QgYWxsIGJyb3dzZXJzIHN1cHBvcnQgdXBsb2FkIGV2ZW50c1xuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicgJiYgcmVxdWVzdC51cGxvYWQpIHtcbiAgICAgIHJlcXVlc3QudXBsb2FkLmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIGlmIChjb25maWcuY2FuY2VsVG9rZW4pIHtcbiAgICAgIC8vIEhhbmRsZSBjYW5jZWxsYXRpb25cbiAgICAgIGNvbmZpZy5jYW5jZWxUb2tlbi5wcm9taXNlLnRoZW4oZnVuY3Rpb24gb25DYW5jZWxlZChjYW5jZWwpIHtcbiAgICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVxdWVzdC5hYm9ydCgpO1xuICAgICAgICByZWplY3QoY2FuY2VsKTtcbiAgICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChyZXF1ZXN0RGF0YSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXF1ZXN0RGF0YSA9IG51bGw7XG4gICAgfVxuXG4gICAgLy8gU2VuZCB0aGUgcmVxdWVzdFxuICAgIHJlcXVlc3Quc2VuZChyZXF1ZXN0RGF0YSk7XG4gIH0pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGVuaGFuY2VFcnJvciA9IHJlcXVpcmUoJy4vZW5oYW5jZUVycm9yJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBtZXNzYWdlLCBjb25maWcsIGVycm9yIGNvZGUsIHJlcXVlc3QgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIFRoZSBlcnJvciBtZXNzYWdlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBjcmVhdGVkIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZUVycm9yKG1lc3NhZ2UsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgdmFyIGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICByZXR1cm4gZW5oYW5jZUVycm9yKGVycm9yLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbi8qKlxuICogQ29uZmlnLXNwZWNpZmljIG1lcmdlLWZ1bmN0aW9uIHdoaWNoIGNyZWF0ZXMgYSBuZXcgY29uZmlnLW9iamVjdFxuICogYnkgbWVyZ2luZyB0d28gY29uZmlndXJhdGlvbiBvYmplY3RzIHRvZ2V0aGVyLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcxXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnMlxuICogQHJldHVybnMge09iamVjdH0gTmV3IG9iamVjdCByZXN1bHRpbmcgZnJvbSBtZXJnaW5nIGNvbmZpZzIgdG8gY29uZmlnMVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1lcmdlQ29uZmlnKGNvbmZpZzEsIGNvbmZpZzIpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIGNvbmZpZzIgPSBjb25maWcyIHx8IHt9O1xuICB2YXIgY29uZmlnID0ge307XG5cbiAgdmFyIHZhbHVlRnJvbUNvbmZpZzJLZXlzID0gWyd1cmwnLCAnbWV0aG9kJywgJ3BhcmFtcycsICdkYXRhJ107XG4gIHZhciBtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cyA9IFsnaGVhZGVycycsICdhdXRoJywgJ3Byb3h5J107XG4gIHZhciBkZWZhdWx0VG9Db25maWcyS2V5cyA9IFtcbiAgICAnYmFzZVVSTCcsICd1cmwnLCAndHJhbnNmb3JtUmVxdWVzdCcsICd0cmFuc2Zvcm1SZXNwb25zZScsICdwYXJhbXNTZXJpYWxpemVyJyxcbiAgICAndGltZW91dCcsICd3aXRoQ3JlZGVudGlhbHMnLCAnYWRhcHRlcicsICdyZXNwb25zZVR5cGUnLCAneHNyZkNvb2tpZU5hbWUnLFxuICAgICd4c3JmSGVhZGVyTmFtZScsICdvblVwbG9hZFByb2dyZXNzJywgJ29uRG93bmxvYWRQcm9ncmVzcycsXG4gICAgJ21heENvbnRlbnRMZW5ndGgnLCAndmFsaWRhdGVTdGF0dXMnLCAnbWF4UmVkaXJlY3RzJywgJ2h0dHBBZ2VudCcsXG4gICAgJ2h0dHBzQWdlbnQnLCAnY2FuY2VsVG9rZW4nLCAnc29ja2V0UGF0aCdcbiAgXTtcblxuICB1dGlscy5mb3JFYWNoKHZhbHVlRnJvbUNvbmZpZzJLZXlzLCBmdW5jdGlvbiB2YWx1ZUZyb21Db25maWcyKHByb3ApIHtcbiAgICBpZiAodHlwZW9mIGNvbmZpZzJbcHJvcF0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBjb25maWcyW3Byb3BdO1xuICAgIH1cbiAgfSk7XG5cbiAgdXRpbHMuZm9yRWFjaChtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cywgZnVuY3Rpb24gbWVyZ2VEZWVwUHJvcGVydGllcyhwcm9wKSB7XG4gICAgaWYgKHV0aWxzLmlzT2JqZWN0KGNvbmZpZzJbcHJvcF0pKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSB1dGlscy5kZWVwTWVyZ2UoY29uZmlnMVtwcm9wXSwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgY29uZmlnMltwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzJbcHJvcF07XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc09iamVjdChjb25maWcxW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gdXRpbHMuZGVlcE1lcmdlKGNvbmZpZzFbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGNvbmZpZzFbcHJvcF0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBjb25maWcxW3Byb3BdO1xuICAgIH1cbiAgfSk7XG5cbiAgdXRpbHMuZm9yRWFjaChkZWZhdWx0VG9Db25maWcyS2V5cywgZnVuY3Rpb24gZGVmYXVsdFRvQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKHR5cGVvZiBjb25maWcyW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMltwcm9wXTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb25maWcxW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMVtwcm9wXTtcbiAgICB9XG4gIH0pO1xuXG4gIHZhciBheGlvc0tleXMgPSB2YWx1ZUZyb21Db25maWcyS2V5c1xuICAgIC5jb25jYXQobWVyZ2VEZWVwUHJvcGVydGllc0tleXMpXG4gICAgLmNvbmNhdChkZWZhdWx0VG9Db25maWcyS2V5cyk7XG5cbiAgdmFyIG90aGVyS2V5cyA9IE9iamVjdFxuICAgIC5rZXlzKGNvbmZpZzIpXG4gICAgLmZpbHRlcihmdW5jdGlvbiBmaWx0ZXJBeGlvc0tleXMoa2V5KSB7XG4gICAgICByZXR1cm4gYXhpb3NLZXlzLmluZGV4T2Yoa2V5KSA9PT0gLTE7XG4gICAgfSk7XG5cbiAgdXRpbHMuZm9yRWFjaChvdGhlcktleXMsIGZ1bmN0aW9uIG90aGVyS2V5c0RlZmF1bHRUb0NvbmZpZzIocHJvcCkge1xuICAgIGlmICh0eXBlb2YgY29uZmlnMltwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzJbcHJvcF07XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgY29uZmlnMVtwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzFbcHJvcF07XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gY29uZmlnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBBIGBDYW5jZWxgIGlzIGFuIG9iamVjdCB0aGF0IGlzIHRocm93biB3aGVuIGFuIG9wZXJhdGlvbiBpcyBjYW5jZWxlZC5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7c3RyaW5nPX0gbWVzc2FnZSBUaGUgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsKG1lc3NhZ2UpIHtcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbn1cblxuQ2FuY2VsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gJ0NhbmNlbCcgKyAodGhpcy5tZXNzYWdlID8gJzogJyArIHRoaXMubWVzc2FnZSA6ICcnKTtcbn07XG5cbkNhbmNlbC5wcm90b3R5cGUuX19DQU5DRUxfXyA9IHRydWU7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsO1xuIiwiLy9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzaGFsbG93RXF1YWwob2JqQSwgb2JqQiwgY29tcGFyZSwgY29tcGFyZUNvbnRleHQpIHtcbiAgdmFyIHJldCA9IGNvbXBhcmUgPyBjb21wYXJlLmNhbGwoY29tcGFyZUNvbnRleHQsIG9iakEsIG9iakIpIDogdm9pZCAwO1xuXG4gIGlmIChyZXQgIT09IHZvaWQgMCkge1xuICAgIHJldHVybiAhIXJldDtcbiAgfVxuXG4gIGlmIChvYmpBID09PSBvYmpCKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAodHlwZW9mIG9iakEgIT09IFwib2JqZWN0XCIgfHwgIW9iakEgfHwgdHlwZW9mIG9iakIgIT09IFwib2JqZWN0XCIgfHwgIW9iakIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIga2V5c0EgPSBPYmplY3Qua2V5cyhvYmpBKTtcbiAgdmFyIGtleXNCID0gT2JqZWN0LmtleXMob2JqQik7XG5cbiAgaWYgKGtleXNBLmxlbmd0aCAhPT0ga2V5c0IubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGJIYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuYmluZChvYmpCKTtcblxuICAvLyBUZXN0IGZvciBBJ3Mga2V5cyBkaWZmZXJlbnQgZnJvbSBCLlxuICBmb3IgKHZhciBpZHggPSAwOyBpZHggPCBrZXlzQS5sZW5ndGg7IGlkeCsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNBW2lkeF07XG5cbiAgICBpZiAoIWJIYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHZhbHVlQSA9IG9iakFba2V5XTtcbiAgICB2YXIgdmFsdWVCID0gb2JqQltrZXldO1xuXG4gICAgcmV0ID0gY29tcGFyZSA/IGNvbXBhcmUuY2FsbChjb21wYXJlQ29udGV4dCwgdmFsdWVBLCB2YWx1ZUIsIGtleSkgOiB2b2lkIDA7XG5cbiAgICBpZiAocmV0ID09PSBmYWxzZSB8fCAocmV0ID09PSB2b2lkIDAgJiYgdmFsdWVBICE9PSB2YWx1ZUIpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuIiwiZnVuY3Rpb24gc3R5bGlzX21pbiAoVykge1xuICBmdW5jdGlvbiBNKGQsIGMsIGUsIGgsIGEpIHtcbiAgICBmb3IgKHZhciBtID0gMCwgYiA9IDAsIHYgPSAwLCBuID0gMCwgcSwgZywgeCA9IDAsIEsgPSAwLCBrLCB1ID0gayA9IHEgPSAwLCBsID0gMCwgciA9IDAsIEkgPSAwLCB0ID0gMCwgQiA9IGUubGVuZ3RoLCBKID0gQiAtIDEsIHksIGYgPSAnJywgcCA9ICcnLCBGID0gJycsIEcgPSAnJywgQzsgbCA8IEI7KSB7XG4gICAgICBnID0gZS5jaGFyQ29kZUF0KGwpO1xuICAgICAgbCA9PT0gSiAmJiAwICE9PSBiICsgbiArIHYgKyBtICYmICgwICE9PSBiICYmIChnID0gNDcgPT09IGIgPyAxMCA6IDQ3KSwgbiA9IHYgPSBtID0gMCwgQisrLCBKKyspO1xuXG4gICAgICBpZiAoMCA9PT0gYiArIG4gKyB2ICsgbSkge1xuICAgICAgICBpZiAobCA9PT0gSiAmJiAoMCA8IHIgJiYgKGYgPSBmLnJlcGxhY2UoTiwgJycpKSwgMCA8IGYudHJpbSgpLmxlbmd0aCkpIHtcbiAgICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICBjYXNlIDU5OlxuICAgICAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICBmICs9IGUuY2hhckF0KGwpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGcgPSA1OTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgIGNhc2UgMTIzOlxuICAgICAgICAgICAgZiA9IGYudHJpbSgpO1xuICAgICAgICAgICAgcSA9IGYuY2hhckNvZGVBdCgwKTtcbiAgICAgICAgICAgIGsgPSAxO1xuXG4gICAgICAgICAgICBmb3IgKHQgPSArK2w7IGwgPCBCOykge1xuICAgICAgICAgICAgICBzd2l0Y2ggKGcgPSBlLmNoYXJDb2RlQXQobCkpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDEyMzpcbiAgICAgICAgICAgICAgICAgIGsrKztcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAxMjU6XG4gICAgICAgICAgICAgICAgICBrLS07XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgICAgICBzd2l0Y2ggKGcgPSBlLmNoYXJDb2RlQXQobCArIDEpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgICAgICAgICAgYToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh1ID0gbCArIDE7IHUgPCBKOyArK3UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChlLmNoYXJDb2RlQXQodSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDQyID09PSBnICYmIDQyID09PSBlLmNoYXJDb2RlQXQodSAtIDEpICYmIGwgKyAyICE9PSB1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1ICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsgYTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDQ3ID09PSBnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1ICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsgYTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1O1xuICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgOTE6XG4gICAgICAgICAgICAgICAgICBnKys7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICAgICAgZysrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAgICAgICBjYXNlIDM5OlxuICAgICAgICAgICAgICAgICAgZm9yICg7IGwrKyA8IEogJiYgZS5jaGFyQ29kZUF0KGwpICE9PSBnOykge1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoMCA9PT0gaykgYnJlYWs7XG4gICAgICAgICAgICAgIGwrKztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgayA9IGUuc3Vic3RyaW5nKHQsIGwpO1xuICAgICAgICAgICAgMCA9PT0gcSAmJiAocSA9IChmID0gZi5yZXBsYWNlKGNhLCAnJykudHJpbSgpKS5jaGFyQ29kZUF0KDApKTtcblxuICAgICAgICAgICAgc3dpdGNoIChxKSB7XG4gICAgICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICAgICAgMCA8IHIgJiYgKGYgPSBmLnJlcGxhY2UoTiwgJycpKTtcbiAgICAgICAgICAgICAgICBnID0gZi5jaGFyQ29kZUF0KDEpO1xuXG4gICAgICAgICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlIDEwMDpcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTA5OlxuICAgICAgICAgICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICAgICAgICBjYXNlIDQ1OlxuICAgICAgICAgICAgICAgICAgICByID0gYztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHIgPSBPO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGsgPSBNKGMsIHIsIGssIGcsIGEgKyAxKTtcbiAgICAgICAgICAgICAgICB0ID0gay5sZW5ndGg7XG4gICAgICAgICAgICAgICAgMCA8IEEgJiYgKHIgPSBYKE8sIGYsIEkpLCBDID0gSCgzLCBrLCByLCBjLCBELCB6LCB0LCBnLCBhLCBoKSwgZiA9IHIuam9pbignJyksIHZvaWQgMCAhPT0gQyAmJiAwID09PSAodCA9IChrID0gQy50cmltKCkpLmxlbmd0aCkgJiYgKGcgPSAwLCBrID0gJycpKTtcbiAgICAgICAgICAgICAgICBpZiAoMCA8IHQpIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICAgICAgICAgIGYgPSBmLnJlcGxhY2UoZGEsIGVhKTtcblxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDA6XG4gICAgICAgICAgICAgICAgICBjYXNlIDEwOTpcbiAgICAgICAgICAgICAgICAgIGNhc2UgNDU6XG4gICAgICAgICAgICAgICAgICAgIGsgPSBmICsgJ3snICsgayArICd9JztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGNhc2UgMTA3OlxuICAgICAgICAgICAgICAgICAgICBmID0gZi5yZXBsYWNlKGZhLCAnJDEgJDInKTtcbiAgICAgICAgICAgICAgICAgICAgayA9IGYgKyAneycgKyBrICsgJ30nO1xuICAgICAgICAgICAgICAgICAgICBrID0gMSA9PT0gdyB8fCAyID09PSB3ICYmIEwoJ0AnICsgaywgMykgPyAnQC13ZWJraXQtJyArIGsgKyAnQCcgKyBrIDogJ0AnICsgaztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGsgPSBmICsgaywgMTEyID09PSBoICYmIChrID0gKHAgKz0gaywgJycpKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgayA9ICcnO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgayA9IE0oYywgWChjLCBmLCBJKSwgaywgaCwgYSArIDEpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBGICs9IGs7XG4gICAgICAgICAgICBrID0gSSA9IHIgPSB1ID0gcSA9IDA7XG4gICAgICAgICAgICBmID0gJyc7XG4gICAgICAgICAgICBnID0gZS5jaGFyQ29kZUF0KCsrbCk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgIGNhc2UgNTk6XG4gICAgICAgICAgICBmID0gKDAgPCByID8gZi5yZXBsYWNlKE4sICcnKSA6IGYpLnRyaW0oKTtcbiAgICAgICAgICAgIGlmICgxIDwgKHQgPSBmLmxlbmd0aCkpIHN3aXRjaCAoMCA9PT0gdSAmJiAocSA9IGYuY2hhckNvZGVBdCgwKSwgNDUgPT09IHEgfHwgOTYgPCBxICYmIDEyMyA+IHEpICYmICh0ID0gKGYgPSBmLnJlcGxhY2UoJyAnLCAnOicpKS5sZW5ndGgpLCAwIDwgQSAmJiB2b2lkIDAgIT09IChDID0gSCgxLCBmLCBjLCBkLCBELCB6LCBwLmxlbmd0aCwgaCwgYSwgaCkpICYmIDAgPT09ICh0ID0gKGYgPSBDLnRyaW0oKSkubGVuZ3RoKSAmJiAoZiA9ICdcXHgwMFxceDAwJyksIHEgPSBmLmNoYXJDb2RlQXQoMCksIGcgPSBmLmNoYXJDb2RlQXQoMSksIHEpIHtcbiAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICAgICAgaWYgKDEwNSA9PT0gZyB8fCA5OSA9PT0gZykge1xuICAgICAgICAgICAgICAgICAgRyArPSBmICsgZS5jaGFyQXQobCk7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICA1OCAhPT0gZi5jaGFyQ29kZUF0KHQgLSAxKSAmJiAocCArPSBQKGYsIHEsIGcsIGYuY2hhckNvZGVBdCgyKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgSSA9IHIgPSB1ID0gcSA9IDA7XG4gICAgICAgICAgICBmID0gJyc7XG4gICAgICAgICAgICBnID0gZS5jaGFyQ29kZUF0KCsrbCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgIGNhc2UgMTM6XG4gICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgNDcgPT09IGIgPyBiID0gMCA6IDAgPT09IDEgKyBxICYmIDEwNyAhPT0gaCAmJiAwIDwgZi5sZW5ndGggJiYgKHIgPSAxLCBmICs9ICdcXHgwMCcpO1xuICAgICAgICAgIDAgPCBBICogWSAmJiBIKDAsIGYsIGMsIGQsIEQsIHosIHAubGVuZ3RoLCBoLCBhLCBoKTtcbiAgICAgICAgICB6ID0gMTtcbiAgICAgICAgICBEKys7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgY2FzZSAxMjU6XG4gICAgICAgICAgaWYgKDAgPT09IGIgKyBuICsgdiArIG0pIHtcbiAgICAgICAgICAgIHorKztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHorKztcbiAgICAgICAgICB5ID0gZS5jaGFyQXQobCk7XG5cbiAgICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgbSArIGIpIHN3aXRjaCAoeCkge1xuICAgICAgICAgICAgICAgIGNhc2UgNDQ6XG4gICAgICAgICAgICAgICAgY2FzZSA1ODpcbiAgICAgICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICAgICAgY2FzZSAzMjpcbiAgICAgICAgICAgICAgICAgIHkgPSAnJztcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgIDMyICE9PSBnICYmICh5ID0gJyAnKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICB5ID0gJ1xcXFwwJztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTI6XG4gICAgICAgICAgICAgIHkgPSAnXFxcXGYnO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxMTpcbiAgICAgICAgICAgICAgeSA9ICdcXFxcdic7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDM4OlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIG0gJiYgKHIgPSBJID0gMSwgeSA9ICdcXGYnICsgeSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDEwODpcbiAgICAgICAgICAgICAgaWYgKDAgPT09IG4gKyBiICsgbSArIEUgJiYgMCA8IHUpIHN3aXRjaCAobCAtIHUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAxMTIgPT09IHggJiYgNTggPT09IGUuY2hhckNvZGVBdChsIC0gMykgJiYgKEUgPSB4KTtcblxuICAgICAgICAgICAgICAgIGNhc2UgODpcbiAgICAgICAgICAgICAgICAgIDExMSA9PT0gSyAmJiAoRSA9IEspO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDU4OlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIG0gJiYgKHUgPSBsKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDQ6XG4gICAgICAgICAgICAgIDAgPT09IGIgKyB2ICsgbiArIG0gJiYgKHIgPSAxLCB5ICs9ICdcXHInKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMzQ6XG4gICAgICAgICAgICBjYXNlIDM5OlxuICAgICAgICAgICAgICAwID09PSBiICYmIChuID0gbiA9PT0gZyA/IDAgOiAwID09PSBuID8gZyA6IG4pO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA5MTpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyB2ICYmIG0rKztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgOTM6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgdiAmJiBtLS07XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQxOlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIG0gJiYgdi0tO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICAgICAgaWYgKDAgPT09IG4gKyBiICsgbSkge1xuICAgICAgICAgICAgICAgIGlmICgwID09PSBxKSBzd2l0Y2ggKDIgKiB4ICsgMyAqIEspIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgNTMzOlxuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgcSA9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHYrKztcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAwID09PSBiICsgdiArIG4gKyBtICsgdSArIGsgJiYgKGsgPSAxKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICBpZiAoISgwIDwgbiArIG0gKyB2KSkgc3dpdGNoIChiKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgc3dpdGNoICgyICogZyArIDMgKiBlLmNoYXJDb2RlQXQobCArIDEpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjM1OlxuICAgICAgICAgICAgICAgICAgICAgIGIgPSA0NztcbiAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICBjYXNlIDIyMDpcbiAgICAgICAgICAgICAgICAgICAgICB0ID0gbCwgYiA9IDQyO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICAgICAgICA0NyA9PT0gZyAmJiA0MiA9PT0geCAmJiB0ICsgMiAhPT0gbCAmJiAoMzMgPT09IGUuY2hhckNvZGVBdCh0ICsgMikgJiYgKHAgKz0gZS5zdWJzdHJpbmcodCwgbCArIDEpKSwgeSA9ICcnLCBiID0gMCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAwID09PSBiICYmIChmICs9IHkpO1xuICAgICAgfVxuXG4gICAgICBLID0geDtcbiAgICAgIHggPSBnO1xuICAgICAgbCsrO1xuICAgIH1cblxuICAgIHQgPSBwLmxlbmd0aDtcblxuICAgIGlmICgwIDwgdCkge1xuICAgICAgciA9IGM7XG4gICAgICBpZiAoMCA8IEEgJiYgKEMgPSBIKDIsIHAsIHIsIGQsIEQsIHosIHQsIGgsIGEsIGgpLCB2b2lkIDAgIT09IEMgJiYgMCA9PT0gKHAgPSBDKS5sZW5ndGgpKSByZXR1cm4gRyArIHAgKyBGO1xuICAgICAgcCA9IHIuam9pbignLCcpICsgJ3snICsgcCArICd9JztcblxuICAgICAgaWYgKDAgIT09IHcgKiBFKSB7XG4gICAgICAgIDIgIT09IHcgfHwgTChwLCAyKSB8fCAoRSA9IDApO1xuXG4gICAgICAgIHN3aXRjaCAoRSkge1xuICAgICAgICAgIGNhc2UgMTExOlxuICAgICAgICAgICAgcCA9IHAucmVwbGFjZShoYSwgJzotbW96LSQxJykgKyBwO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDExMjpcbiAgICAgICAgICAgIHAgPSBwLnJlcGxhY2UoUSwgJzo6LXdlYmtpdC1pbnB1dC0kMScpICsgcC5yZXBsYWNlKFEsICc6Oi1tb3otJDEnKSArIHAucmVwbGFjZShRLCAnOi1tcy1pbnB1dC0kMScpICsgcDtcbiAgICAgICAgfVxuXG4gICAgICAgIEUgPSAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBHICsgcCArIEY7XG4gIH1cblxuICBmdW5jdGlvbiBYKGQsIGMsIGUpIHtcbiAgICB2YXIgaCA9IGMudHJpbSgpLnNwbGl0KGlhKTtcbiAgICBjID0gaDtcbiAgICB2YXIgYSA9IGgubGVuZ3RoLFxuICAgICAgICBtID0gZC5sZW5ndGg7XG5cbiAgICBzd2l0Y2ggKG0pIHtcbiAgICAgIGNhc2UgMDpcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgdmFyIGIgPSAwO1xuXG4gICAgICAgIGZvciAoZCA9IDAgPT09IG0gPyAnJyA6IGRbMF0gKyAnICc7IGIgPCBhOyArK2IpIHtcbiAgICAgICAgICBjW2JdID0gWihkLCBjW2JdLCBlKS50cmltKCk7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdmFyIHYgPSBiID0gMDtcblxuICAgICAgICBmb3IgKGMgPSBbXTsgYiA8IGE7ICsrYikge1xuICAgICAgICAgIGZvciAodmFyIG4gPSAwOyBuIDwgbTsgKytuKSB7XG4gICAgICAgICAgICBjW3YrK10gPSBaKGRbbl0gKyAnICcsIGhbYl0sIGUpLnRyaW0oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIHJldHVybiBjO1xuICB9XG5cbiAgZnVuY3Rpb24gWihkLCBjLCBlKSB7XG4gICAgdmFyIGggPSBjLmNoYXJDb2RlQXQoMCk7XG4gICAgMzMgPiBoICYmIChoID0gKGMgPSBjLnRyaW0oKSkuY2hhckNvZGVBdCgwKSk7XG5cbiAgICBzd2l0Y2ggKGgpIHtcbiAgICAgIGNhc2UgMzg6XG4gICAgICAgIHJldHVybiBjLnJlcGxhY2UoRiwgJyQxJyArIGQudHJpbSgpKTtcblxuICAgICAgY2FzZSA1ODpcbiAgICAgICAgcmV0dXJuIGQudHJpbSgpICsgYy5yZXBsYWNlKEYsICckMScgKyBkLnRyaW0oKSk7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmICgwIDwgMSAqIGUgJiYgMCA8IGMuaW5kZXhPZignXFxmJykpIHJldHVybiBjLnJlcGxhY2UoRiwgKDU4ID09PSBkLmNoYXJDb2RlQXQoMCkgPyAnJyA6ICckMScpICsgZC50cmltKCkpO1xuICAgIH1cblxuICAgIHJldHVybiBkICsgYztcbiAgfVxuXG4gIGZ1bmN0aW9uIFAoZCwgYywgZSwgaCkge1xuICAgIHZhciBhID0gZCArICc7JyxcbiAgICAgICAgbSA9IDIgKiBjICsgMyAqIGUgKyA0ICogaDtcblxuICAgIGlmICg5NDQgPT09IG0pIHtcbiAgICAgIGQgPSBhLmluZGV4T2YoJzonLCA5KSArIDE7XG4gICAgICB2YXIgYiA9IGEuc3Vic3RyaW5nKGQsIGEubGVuZ3RoIC0gMSkudHJpbSgpO1xuICAgICAgYiA9IGEuc3Vic3RyaW5nKDAsIGQpLnRyaW0oKSArIGIgKyAnOyc7XG4gICAgICByZXR1cm4gMSA9PT0gdyB8fCAyID09PSB3ICYmIEwoYiwgMSkgPyAnLXdlYmtpdC0nICsgYiArIGIgOiBiO1xuICAgIH1cblxuICAgIGlmICgwID09PSB3IHx8IDIgPT09IHcgJiYgIUwoYSwgMSkpIHJldHVybiBhO1xuXG4gICAgc3dpdGNoIChtKSB7XG4gICAgICBjYXNlIDEwMTU6XG4gICAgICAgIHJldHVybiA5NyA9PT0gYS5jaGFyQ29kZUF0KDEwKSA/ICctd2Via2l0LScgKyBhICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgOTUxOlxuICAgICAgICByZXR1cm4gMTE2ID09PSBhLmNoYXJDb2RlQXQoMykgPyAnLXdlYmtpdC0nICsgYSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDk2MzpcbiAgICAgICAgcmV0dXJuIDExMCA9PT0gYS5jaGFyQ29kZUF0KDUpID8gJy13ZWJraXQtJyArIGEgKyBhIDogYTtcblxuICAgICAgY2FzZSAxMDA5OlxuICAgICAgICBpZiAoMTAwICE9PSBhLmNoYXJDb2RlQXQoNCkpIGJyZWFrO1xuXG4gICAgICBjYXNlIDk2OTpcbiAgICAgIGNhc2UgOTQyOlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDk3ODpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tb3otJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDEwMTk6XG4gICAgICBjYXNlIDk4MzpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tb3otJyArIGEgKyAnLW1zLScgKyBhICsgYTtcblxuICAgICAgY2FzZSA4ODM6XG4gICAgICAgIGlmICg0NSA9PT0gYS5jaGFyQ29kZUF0KDgpKSByZXR1cm4gJy13ZWJraXQtJyArIGEgKyBhO1xuICAgICAgICBpZiAoMCA8IGEuaW5kZXhPZignaW1hZ2Utc2V0KCcsIDExKSkgcmV0dXJuIGEucmVwbGFjZShqYSwgJyQxLXdlYmtpdC0kMicpICsgYTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTMyOlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg0KSkgc3dpdGNoIChhLmNoYXJDb2RlQXQoNSkpIHtcbiAgICAgICAgICBjYXNlIDEwMzpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC1ib3gtJyArIGEucmVwbGFjZSgnLWdyb3cnLCAnJykgKyAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnZ3JvdycsICdwb3NpdGl2ZScpICsgYTtcblxuICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYS5yZXBsYWNlKCdzaHJpbmsnLCAnbmVnYXRpdmUnKSArIGE7XG5cbiAgICAgICAgICBjYXNlIDk4OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYS5yZXBsYWNlKCdiYXNpcycsICdwcmVmZXJyZWQtc2l6ZScpICsgYTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhICsgYTtcblxuICAgICAgY2FzZSA5NjQ6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgMTAyMzpcbiAgICAgICAgaWYgKDk5ICE9PSBhLmNoYXJDb2RlQXQoOCkpIGJyZWFrO1xuICAgICAgICBiID0gYS5zdWJzdHJpbmcoYS5pbmRleE9mKCc6JywgMTUpKS5yZXBsYWNlKCdmbGV4LScsICcnKS5yZXBsYWNlKCdzcGFjZS1iZXR3ZWVuJywgJ2p1c3RpZnknKTtcbiAgICAgICAgcmV0dXJuICctd2Via2l0LWJveC1wYWNrJyArIGIgKyAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC1wYWNrJyArIGIgKyBhO1xuXG4gICAgICBjYXNlIDEwMDU6XG4gICAgICAgIHJldHVybiBrYS50ZXN0KGEpID8gYS5yZXBsYWNlKGFhLCAnOi13ZWJraXQtJykgKyBhLnJlcGxhY2UoYWEsICc6LW1vei0nKSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDFlMzpcbiAgICAgICAgYiA9IGEuc3Vic3RyaW5nKDEzKS50cmltKCk7XG4gICAgICAgIGMgPSBiLmluZGV4T2YoJy0nKSArIDE7XG5cbiAgICAgICAgc3dpdGNoIChiLmNoYXJDb2RlQXQoMCkgKyBiLmNoYXJDb2RlQXQoYykpIHtcbiAgICAgICAgICBjYXNlIDIyNjpcbiAgICAgICAgICAgIGIgPSBhLnJlcGxhY2UoRywgJ3RiJyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjMyOlxuICAgICAgICAgICAgYiA9IGEucmVwbGFjZShHLCAndGItcmwnKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAyMjA6XG4gICAgICAgICAgICBiID0gYS5yZXBsYWNlKEcsICdscicpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGE7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBiICsgYTtcblxuICAgICAgY2FzZSAxMDE3OlxuICAgICAgICBpZiAoLTEgPT09IGEuaW5kZXhPZignc3RpY2t5JywgOSkpIGJyZWFrO1xuXG4gICAgICBjYXNlIDk3NTpcbiAgICAgICAgYyA9IChhID0gZCkubGVuZ3RoIC0gMTA7XG4gICAgICAgIGIgPSAoMzMgPT09IGEuY2hhckNvZGVBdChjKSA/IGEuc3Vic3RyaW5nKDAsIGMpIDogYSkuc3Vic3RyaW5nKGQuaW5kZXhPZignOicsIDcpICsgMSkudHJpbSgpO1xuXG4gICAgICAgIHN3aXRjaCAobSA9IGIuY2hhckNvZGVBdCgwKSArIChiLmNoYXJDb2RlQXQoNykgfCAwKSkge1xuICAgICAgICAgIGNhc2UgMjAzOlxuICAgICAgICAgICAgaWYgKDExMSA+IGIuY2hhckNvZGVBdCg4KSkgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgIGEgPSBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgJzsnICsgYTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAyMDc6XG4gICAgICAgICAgY2FzZSAxMDI6XG4gICAgICAgICAgICBhID0gYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyAoMTAyIDwgbSA/ICdpbmxpbmUtJyA6ICcnKSArICdib3gnKSArICc7JyArIGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgYikgKyAnOycgKyBhLnJlcGxhY2UoYiwgJy1tcy0nICsgYiArICdib3gnKSArICc7JyArIGE7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYSArICc7JztcblxuICAgICAgY2FzZSA5Mzg6XG4gICAgICAgIGlmICg0NSA9PT0gYS5jaGFyQ29kZUF0KDUpKSBzd2l0Y2ggKGEuY2hhckNvZGVBdCg2KSkge1xuICAgICAgICAgIGNhc2UgMTA1OlxuICAgICAgICAgICAgcmV0dXJuIGIgPSBhLnJlcGxhY2UoJy1pdGVtcycsICcnKSwgJy13ZWJraXQtJyArIGEgKyAnLXdlYmtpdC1ib3gtJyArIGIgKyAnLW1zLWZsZXgtJyArIGIgKyBhO1xuXG4gICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtaXRlbS0nICsgYS5yZXBsYWNlKGJhLCAnJykgKyBhO1xuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC1saW5lLXBhY2snICsgYS5yZXBsYWNlKCdhbGlnbi1jb250ZW50JywgJycpLnJlcGxhY2UoYmEsICcnKSArIGE7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTczOlxuICAgICAgY2FzZSA5ODk6XG4gICAgICAgIGlmICg0NSAhPT0gYS5jaGFyQ29kZUF0KDMpIHx8IDEyMiA9PT0gYS5jaGFyQ29kZUF0KDQpKSBicmVhaztcblxuICAgICAgY2FzZSA5MzE6XG4gICAgICBjYXNlIDk1MzpcbiAgICAgICAgaWYgKCEwID09PSBsYS50ZXN0KGQpKSByZXR1cm4gMTE1ID09PSAoYiA9IGQuc3Vic3RyaW5nKGQuaW5kZXhPZignOicpICsgMSkpLmNoYXJDb2RlQXQoMCkgPyBQKGQucmVwbGFjZSgnc3RyZXRjaCcsICdmaWxsLWF2YWlsYWJsZScpLCBjLCBlLCBoKS5yZXBsYWNlKCc6ZmlsbC1hdmFpbGFibGUnLCAnOnN0cmV0Y2gnKSA6IGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgYikgKyBhLnJlcGxhY2UoYiwgJy1tb3otJyArIGIucmVwbGFjZSgnZmlsbC0nLCAnJykpICsgYTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTYyOlxuICAgICAgICBpZiAoYSA9ICctd2Via2l0LScgKyBhICsgKDEwMiA9PT0gYS5jaGFyQ29kZUF0KDUpID8gJy1tcy0nICsgYSA6ICcnKSArIGEsIDIxMSA9PT0gZSArIGggJiYgMTA1ID09PSBhLmNoYXJDb2RlQXQoMTMpICYmIDAgPCBhLmluZGV4T2YoJ3RyYW5zZm9ybScsIDEwKSkgcmV0dXJuIGEuc3Vic3RyaW5nKDAsIGEuaW5kZXhPZignOycsIDI3KSArIDEpLnJlcGxhY2UobWEsICckMS13ZWJraXQtJDInKSArIGE7XG4gICAgfVxuXG4gICAgcmV0dXJuIGE7XG4gIH1cblxuICBmdW5jdGlvbiBMKGQsIGMpIHtcbiAgICB2YXIgZSA9IGQuaW5kZXhPZigxID09PSBjID8gJzonIDogJ3snKSxcbiAgICAgICAgaCA9IGQuc3Vic3RyaW5nKDAsIDMgIT09IGMgPyBlIDogMTApO1xuICAgIGUgPSBkLnN1YnN0cmluZyhlICsgMSwgZC5sZW5ndGggLSAxKTtcbiAgICByZXR1cm4gUigyICE9PSBjID8gaCA6IGgucmVwbGFjZShuYSwgJyQxJyksIGUsIGMpO1xuICB9XG5cbiAgZnVuY3Rpb24gZWEoZCwgYykge1xuICAgIHZhciBlID0gUChjLCBjLmNoYXJDb2RlQXQoMCksIGMuY2hhckNvZGVBdCgxKSwgYy5jaGFyQ29kZUF0KDIpKTtcbiAgICByZXR1cm4gZSAhPT0gYyArICc7JyA/IGUucmVwbGFjZShvYSwgJyBvciAoJDEpJykuc3Vic3RyaW5nKDQpIDogJygnICsgYyArICcpJztcbiAgfVxuXG4gIGZ1bmN0aW9uIEgoZCwgYywgZSwgaCwgYSwgbSwgYiwgdiwgbiwgcSkge1xuICAgIGZvciAodmFyIGcgPSAwLCB4ID0gYywgdzsgZyA8IEE7ICsrZykge1xuICAgICAgc3dpdGNoICh3ID0gU1tnXS5jYWxsKEIsIGQsIHgsIGUsIGgsIGEsIG0sIGIsIHYsIG4sIHEpKSB7XG4gICAgICAgIGNhc2Ugdm9pZCAwOlxuICAgICAgICBjYXNlICExOlxuICAgICAgICBjYXNlICEwOlxuICAgICAgICBjYXNlIG51bGw6XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB4ID0gdztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoeCAhPT0gYykgcmV0dXJuIHg7XG4gIH1cblxuICBmdW5jdGlvbiBUKGQpIHtcbiAgICBzd2l0Y2ggKGQpIHtcbiAgICAgIGNhc2Ugdm9pZCAwOlxuICAgICAgY2FzZSBudWxsOlxuICAgICAgICBBID0gUy5sZW5ndGggPSAwO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBkKSBTW0ErK10gPSBkO2Vsc2UgaWYgKCdvYmplY3QnID09PSB0eXBlb2YgZCkgZm9yICh2YXIgYyA9IDAsIGUgPSBkLmxlbmd0aDsgYyA8IGU7ICsrYykge1xuICAgICAgICAgIFQoZFtjXSk7XG4gICAgICAgIH0gZWxzZSBZID0gISFkIHwgMDtcbiAgICB9XG5cbiAgICByZXR1cm4gVDtcbiAgfVxuXG4gIGZ1bmN0aW9uIFUoZCkge1xuICAgIGQgPSBkLnByZWZpeDtcbiAgICB2b2lkIDAgIT09IGQgJiYgKFIgPSBudWxsLCBkID8gJ2Z1bmN0aW9uJyAhPT0gdHlwZW9mIGQgPyB3ID0gMSA6ICh3ID0gMiwgUiA9IGQpIDogdyA9IDApO1xuICAgIHJldHVybiBVO1xuICB9XG5cbiAgZnVuY3Rpb24gQihkLCBjKSB7XG4gICAgdmFyIGUgPSBkO1xuICAgIDMzID4gZS5jaGFyQ29kZUF0KDApICYmIChlID0gZS50cmltKCkpO1xuICAgIFYgPSBlO1xuICAgIGUgPSBbVl07XG5cbiAgICBpZiAoMCA8IEEpIHtcbiAgICAgIHZhciBoID0gSCgtMSwgYywgZSwgZSwgRCwgeiwgMCwgMCwgMCwgMCk7XG4gICAgICB2b2lkIDAgIT09IGggJiYgJ3N0cmluZycgPT09IHR5cGVvZiBoICYmIChjID0gaCk7XG4gICAgfVxuXG4gICAgdmFyIGEgPSBNKE8sIGUsIGMsIDAsIDApO1xuICAgIDAgPCBBICYmIChoID0gSCgtMiwgYSwgZSwgZSwgRCwgeiwgYS5sZW5ndGgsIDAsIDAsIDApLCB2b2lkIDAgIT09IGggJiYgKGEgPSBoKSk7XG4gICAgViA9ICcnO1xuICAgIEUgPSAwO1xuICAgIHogPSBEID0gMTtcbiAgICByZXR1cm4gYTtcbiAgfVxuXG4gIHZhciBjYSA9IC9eXFwwKy9nLFxuICAgICAgTiA9IC9bXFwwXFxyXFxmXS9nLFxuICAgICAgYWEgPSAvOiAqL2csXG4gICAgICBrYSA9IC96b298Z3JhLyxcbiAgICAgIG1hID0gLyhbLDogXSkodHJhbnNmb3JtKS9nLFxuICAgICAgaWEgPSAvLFxccis/L2csXG4gICAgICBGID0gLyhbXFx0XFxyXFxuIF0pKlxcZj8mL2csXG4gICAgICBmYSA9IC9AKGtcXHcrKVxccyooXFxTKilcXHMqLyxcbiAgICAgIFEgPSAvOjoocGxhY2UpL2csXG4gICAgICBoYSA9IC86KHJlYWQtb25seSkvZyxcbiAgICAgIEcgPSAvW3N2aF1cXHcrLVt0YmxyXXsyfS8sXG4gICAgICBkYSA9IC9cXChcXHMqKC4qKVxccypcXCkvZyxcbiAgICAgIG9hID0gLyhbXFxzXFxTXSo/KTsvZyxcbiAgICAgIGJhID0gLy1zZWxmfGZsZXgtL2csXG4gICAgICBuYSA9IC9bXl0qPyg6W3JwXVtlbF1hW1xcdy1dKylbXl0qLyxcbiAgICAgIGxhID0gL3N0cmV0Y2h8OlxccypcXHcrXFwtKD86Y29udGV8YXZhaWwpLyxcbiAgICAgIGphID0gLyhbXi1dKShpbWFnZS1zZXRcXCgpLyxcbiAgICAgIHogPSAxLFxuICAgICAgRCA9IDEsXG4gICAgICBFID0gMCxcbiAgICAgIHcgPSAxLFxuICAgICAgTyA9IFtdLFxuICAgICAgUyA9IFtdLFxuICAgICAgQSA9IDAsXG4gICAgICBSID0gbnVsbCxcbiAgICAgIFkgPSAwLFxuICAgICAgViA9ICcnO1xuICBCLnVzZSA9IFQ7XG4gIEIuc2V0ID0gVTtcbiAgdm9pZCAwICE9PSBXICYmIFUoVyk7XG4gIHJldHVybiBCO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdHlsaXNfbWluO1xuIiwidmFyIHVuaXRsZXNzS2V5cyA9IHtcbiAgYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6IDEsXG4gIGJvcmRlckltYWdlT3V0c2V0OiAxLFxuICBib3JkZXJJbWFnZVNsaWNlOiAxLFxuICBib3JkZXJJbWFnZVdpZHRoOiAxLFxuICBib3hGbGV4OiAxLFxuICBib3hGbGV4R3JvdXA6IDEsXG4gIGJveE9yZGluYWxHcm91cDogMSxcbiAgY29sdW1uQ291bnQ6IDEsXG4gIGNvbHVtbnM6IDEsXG4gIGZsZXg6IDEsXG4gIGZsZXhHcm93OiAxLFxuICBmbGV4UG9zaXRpdmU6IDEsXG4gIGZsZXhTaHJpbms6IDEsXG4gIGZsZXhOZWdhdGl2ZTogMSxcbiAgZmxleE9yZGVyOiAxLFxuICBncmlkUm93OiAxLFxuICBncmlkUm93RW5kOiAxLFxuICBncmlkUm93U3BhbjogMSxcbiAgZ3JpZFJvd1N0YXJ0OiAxLFxuICBncmlkQ29sdW1uOiAxLFxuICBncmlkQ29sdW1uRW5kOiAxLFxuICBncmlkQ29sdW1uU3BhbjogMSxcbiAgZ3JpZENvbHVtblN0YXJ0OiAxLFxuICBtc0dyaWRSb3c6IDEsXG4gIG1zR3JpZFJvd1NwYW46IDEsXG4gIG1zR3JpZENvbHVtbjogMSxcbiAgbXNHcmlkQ29sdW1uU3BhbjogMSxcbiAgZm9udFdlaWdodDogMSxcbiAgbGluZUhlaWdodDogMSxcbiAgb3BhY2l0eTogMSxcbiAgb3JkZXI6IDEsXG4gIG9ycGhhbnM6IDEsXG4gIHRhYlNpemU6IDEsXG4gIHdpZG93czogMSxcbiAgekluZGV4OiAxLFxuICB6b29tOiAxLFxuICBXZWJraXRMaW5lQ2xhbXA6IDEsXG4gIC8vIFNWRy1yZWxhdGVkIHByb3BlcnRpZXNcbiAgZmlsbE9wYWNpdHk6IDEsXG4gIGZsb29kT3BhY2l0eTogMSxcbiAgc3RvcE9wYWNpdHk6IDEsXG4gIHN0cm9rZURhc2hhcnJheTogMSxcbiAgc3Ryb2tlRGFzaG9mZnNldDogMSxcbiAgc3Ryb2tlTWl0ZXJsaW1pdDogMSxcbiAgc3Ryb2tlT3BhY2l0eTogMSxcbiAgc3Ryb2tlV2lkdGg6IDFcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVuaXRsZXNzS2V5cztcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTpcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgRD17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRT17fTtmdW5jdGlvbiBGKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQyg4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBHKCl7fUcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7bChJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsYyxlKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGsrKyksZys9VChkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEMoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFcoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/WChhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1OKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gWChhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGUsZCk7VihhLGFhLGIpO1MoYil9dmFyIFk9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gWigpe3ZhciBhPVkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihDKDMyMSkpO3JldHVybiBhfVxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XG5leHBvcnRzLkNvbXBvbmVudD1GO2V4cG9ydHMuRnJhZ21lbnQ9cjtleHBvcnRzLlByb2ZpbGVyPXU7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUg7ZXhwb3J0cy5TdHJpY3RNb2RlPXQ7ZXhwb3J0cy5TdXNwZW5zZT15O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9YmE7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQygyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilLLmNhbGwoYixoKSYmIUwuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbT0wO208aDttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xMy4xXCI7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9cblN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSx3PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHk9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7XG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xuZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O1xuZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1wfTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB1KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih1KDIyNykpO1xuZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIGRhPSExLGVhPW51bGwsZmE9ITEsaGE9bnVsbCxpYT17b25FcnJvcjpmdW5jdGlvbihhKXtkYT0hMDtlYT1hfX07ZnVuY3Rpb24gamEoYSxiLGMsZCxlLGYsZyxoLGspe2RhPSExO2VhPW51bGw7YmEuYXBwbHkoaWEsYXJndW1lbnRzKX1mdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7amEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGRhKXtpZihkYSl7dmFyIGw9ZWE7ZGE9ITE7ZWE9bnVsbH1lbHNlIHRocm93IEVycm9yKHUoMTk4KSk7ZmF8fChmYT0hMCxoYT1sKX19dmFyIGxhPW51bGwsbWE9bnVsbCxuYT1udWxsO1xuZnVuY3Rpb24gb2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PW5hKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9dmFyIHBhPW51bGwscWE9e307XG5mdW5jdGlvbiByYSgpe2lmKHBhKWZvcih2YXIgYSBpbiBxYSl7dmFyIGI9cWFbYV0sYz1wYS5pbmRleE9mKGEpO2lmKCEoLTE8YykpdGhyb3cgRXJyb3IodSg5NixhKSk7aWYoIXNhW2NdKXtpZighYi5leHRyYWN0RXZlbnRzKXRocm93IEVycm9yKHUoOTcsYSkpO3NhW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7aWYodGEuaGFzT3duUHJvcGVydHkoaCkpdGhyb3cgRXJyb3IodSg5OSxoKSk7dGFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmdWEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHVhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7aWYoIWUpdGhyb3cgRXJyb3IodSg5OCxkLGEpKTt9fX19XG5mdW5jdGlvbiB1YShhLGIsYyl7aWYodmFbYV0pdGhyb3cgRXJyb3IodSgxMDAsYSkpO3ZhW2FdPWI7d2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgc2E9W10sdGE9e30sdmE9e30sd2E9e307ZnVuY3Rpb24geGEoYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107aWYoIXFhLmhhc093blByb3BlcnR5KGMpfHxxYVtjXSE9PWQpe2lmKHFhW2NdKXRocm93IEVycm9yKHUoMTAyLGMpKTtxYVtjXT1kO2I9ITB9fWImJnJhKCl9dmFyIHlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSx6YT1udWxsLEFhPW51bGwsQmE9bnVsbDtcbmZ1bmN0aW9uIENhKGEpe2lmKGE9bWEoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB6YSl0aHJvdyBFcnJvcih1KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPWxhKGIpLHphKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIERhKGEpe0FhP0JhP0JhLnB1c2goYSk6QmE9W2FdOkFhPWF9ZnVuY3Rpb24gRWEoKXtpZihBYSl7dmFyIGE9QWEsYj1CYTtCYT1BYT1udWxsO0NhKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylDYShiW2FdKX19ZnVuY3Rpb24gRmEoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBHYShhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEhhKCl7fXZhciBJYT1GYSxKYT0hMSxLYT0hMTtmdW5jdGlvbiBMYSgpe2lmKG51bGwhPT1BYXx8bnVsbCE9PUJhKUhhKCksRWEoKX1cbmZ1bmN0aW9uIE1hKGEsYixjKXtpZihLYSlyZXR1cm4gYShiLGMpO0thPSEwO3RyeXtyZXR1cm4gSWEoYSxiLGMpfWZpbmFsbHl7S2E9ITEsTGEoKX19dmFyIE5hPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxPYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFBhPXt9LFFhPXt9O1xuZnVuY3Rpb24gUmEoYSl7aWYoT2EuY2FsbChRYSxhKSlyZXR1cm4hMDtpZihPYS5jYWxsKFBhLGEpKXJldHVybiExO2lmKE5hLnRlc3QoYSkpcmV0dXJuIFFhW2FdPSEwO1BhW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIFNhKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVGEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8U2EoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiB2KGEsYixjLGQsZSxmKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zn12YXIgQz17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDAsITEsYSxudWxsLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtDW2JdPW5ldyB2KGIsMSwhMSxhWzFdLG51bGwsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYSxudWxsLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITAsYSxudWxsLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDQsITEsYSxudWxsLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNiwhMSxhLG51bGwsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTt2YXIgVWE9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBWYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxcblZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLG51bGwsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbkMueGxpbmtIcmVmPW5ldyB2KFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCl9KTt2YXIgV2E9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyXCIpfHwoV2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcj17Y3VycmVudDpudWxsfSk7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZ1wiKXx8KFdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnPXtzdXNwZW5zZTpudWxsfSk7XG5mdW5jdGlvbiBYYShhLGIsYyxkKXt2YXIgZT1DLmhhc093blByb3BlcnR5KGIpP0NbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChUYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/UmEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbnZhciBZYT0vXiguKilbXFxcXFxcL10vLEU9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixaYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLCRhPUU/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixhYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxiYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxjYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxkYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxlYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGZiPUU/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxnYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixoYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxpYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOlxuNjAxMjAsamI9RT9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxrYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGxiPUU/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLG1iPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBuYihhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9bWImJmFbbWJdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24gb2IoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe2EuX3N0YXR1cz0wO3ZhciBiPWEuX2N0b3I7Yj1iKCk7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX19XG5mdW5jdGlvbiBwYihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGFiOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlICRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBjYjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBiYjpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIGhiOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIGliOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGViOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgZGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBnYjp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlxuXCJGb3J3YXJkUmVmXCIpO2Nhc2UgamI6cmV0dXJuIHBiKGEudHlwZSk7Y2FzZSBsYjpyZXR1cm4gcGIoYS5yZW5kZXIpO2Nhc2Uga2I6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBwYihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBxYihhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9cGIoYS50eXBlKTtjPW51bGw7ZCYmKGM9cGIoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShZYSxcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxuZnVuY3Rpb24gcmIoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIHNiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiB0YihhKXt2YXIgYj1zYihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24geGIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPXRiKGEpKX1mdW5jdGlvbiB5YihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9c2IoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiB6YihhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBBYihhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1yYihudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIEJiKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmWGEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIENiKGEsYil7QmIoYSxiKTt2YXIgYz1yYihiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9EYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZEYihhLGIudHlwZSxyYihiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEViKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBEYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gRmIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gR2IoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1GYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBIYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrcmIoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIEliKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih1KDkxKSk7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gSmIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IodSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHUoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpyYihjKX19XG5mdW5jdGlvbiBLYihhLGIpe3ZhciBjPXJiKGIudmFsdWUpLGQ9cmIoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBMYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBNYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBOYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIE9iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9OYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBQYixRYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1NYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtQYj1QYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtQYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1QYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBSYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifWZ1bmN0aW9uIFNiKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRiPXthbmltYXRpb25lbmQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYihcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFViPXt9LFZiPXt9O1xueWEmJihWYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYi5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYi50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdiKGEpe2lmKFViW2FdKXJldHVybiBVYlthXTtpZighVGJbYV0pcmV0dXJuIGE7dmFyIGI9VGJbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmIpcmV0dXJuIFViW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGI9V2IoXCJhbmltYXRpb25lbmRcIiksWWI9V2IoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmI9V2IoXCJhbmltYXRpb25zdGFydFwiKSwkYj1XYihcInRyYW5zaXRpb25lbmRcIiksYWM9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJjPW5ldyAoXCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXApO2Z1bmN0aW9uIGNjKGEpe3ZhciBiPWJjLmdldChhKTt2b2lkIDA9PT1iJiYoYj1uZXcgTWFwLGJjLnNldChhLGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGRjKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5lZmZlY3RUYWcmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIGVjKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gZmMoYSl7aWYoZGMoYSkhPT1hKXRocm93IEVycm9yKHUoMTg4KSk7fVxuZnVuY3Rpb24gZ2MoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9ZGMoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gZmMoZSksYTtpZihmPT09ZClyZXR1cm4gZmMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih1KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHUoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IodSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBoYyhhKXthPWdjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gaWMoYSxiKXtpZihudWxsPT1iKXRocm93IEVycm9yKHUoMzApKTtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19ZnVuY3Rpb24gamMoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIGtjPW51bGw7XG5mdW5jdGlvbiBsYyhhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspb2EoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmb2EoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fWZ1bmN0aW9uIG1jKGEpe251bGwhPT1hJiYoa2M9aWMoa2MsYSkpO2E9a2M7a2M9bnVsbDtpZihhKXtqYyhhLGxjKTtpZihrYyl0aHJvdyBFcnJvcih1KDk1KSk7aWYoZmEpdGhyb3cgYT1oYSxmYT0hMSxoYT1udWxsLGE7fX1cbmZ1bmN0aW9uIG5jKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBvYyhhKXtpZigheWEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9dmFyIHBjPVtdO2Z1bmN0aW9uIHFjKGEpe2EudG9wTGV2ZWxUeXBlPW51bGw7YS5uYXRpdmVFdmVudD1udWxsO2EudGFyZ2V0SW5zdD1udWxsO2EuYW5jZXN0b3JzLmxlbmd0aD0wOzEwPnBjLmxlbmd0aCYmcGMucHVzaChhKX1cbmZ1bmN0aW9uIHJjKGEsYixjLGQpe2lmKHBjLmxlbmd0aCl7dmFyIGU9cGMucG9wKCk7ZS50b3BMZXZlbFR5cGU9YTtlLmV2ZW50U3lzdGVtRmxhZ3M9ZDtlLm5hdGl2ZUV2ZW50PWI7ZS50YXJnZXRJbnN0PWM7cmV0dXJuIGV9cmV0dXJue3RvcExldmVsVHlwZTphLGV2ZW50U3lzdGVtRmxhZ3M6ZCxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119fVxuZnVuY3Rpb24gc2MoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZD1jO2lmKDM9PT1kLnRhZylkPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZWxzZXtmb3IoO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mb31pZighZClicmVhaztiPWMudGFnOzUhPT1iJiY2IT09Ynx8YS5hbmNlc3RvcnMucHVzaChjKTtjPXRjKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPW5jKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7dmFyIGY9YS5uYXRpdmVFdmVudCxnPWEuZXZlbnRTeXN0ZW1GbGFnczswPT09YyYmKGd8PTY0KTtmb3IodmFyIGg9bnVsbCxrPTA7azxzYS5sZW5ndGg7aysrKXt2YXIgbD1zYVtrXTtsJiYobD1sLmV4dHJhY3RFdmVudHMoZCxiLGYsZSxnKSkmJihoPVxuaWMoaCxsKSl9bWMoaCl9fWZ1bmN0aW9uIHVjKGEsYixjKXtpZighYy5oYXMoYSkpe3N3aXRjaChhKXtjYXNlIFwic2Nyb2xsXCI6dmMoYixcInNjcm9sbFwiLCEwKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOnZjKGIsXCJmb2N1c1wiLCEwKTt2YyhiLFwiYmx1clwiLCEwKTtjLnNldChcImJsdXJcIixudWxsKTtjLnNldChcImZvY3VzXCIsbnVsbCk7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOm9jKGEpJiZ2YyhiLGEsITApO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1hYy5pbmRleE9mKGEpJiZGKGEsYil9Yy5zZXQoYSxudWxsKX19XG52YXIgd2MseGMseWMsemM9ITEsQWM9W10sQmM9bnVsbCxDYz1udWxsLERjPW51bGwsRWM9bmV3IE1hcCxGYz1uZXcgTWFwLEdjPVtdLEhjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY2xvc2UgY2FuY2VsIGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIiksSWM9XCJmb2N1cyBibHVyIGRyYWdlbnRlciBkcmFnbGVhdmUgbW91c2VvdmVyIG1vdXNlb3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJvdXQgZ290cG9pbnRlcmNhcHR1cmUgbG9zdHBvaW50ZXJjYXB0dXJlXCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gSmMoYSxiKXt2YXIgYz1jYyhiKTtIYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pO0ljLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSl9ZnVuY3Rpb24gS2MoYSxiLGMsZCxlKXtyZXR1cm57YmxvY2tlZE9uOmEsdG9wTGV2ZWxUeXBlOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDMyLG5hdGl2ZUV2ZW50OmUsY29udGFpbmVyOmR9fVxuZnVuY3Rpb24gTGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpCYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Q2M9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6RGM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOkVjLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOkZjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fWZ1bmN0aW9uIE1jKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9S2MoYixjLGQsZSxmKSxudWxsIT09YiYmKGI9TmMoYiksbnVsbCE9PWImJnhjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIE9jKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c1wiOnJldHVybiBCYz1NYyhCYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gQ2M9TWMoQ2MsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIERjPU1jKERjLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7RWMuc2V0KGYsTWMoRWMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLEZjLnNldChmLE1jKEZjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIFBjKGEpe3ZhciBiPXRjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9ZGMoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9ZWMoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe3ljKGMpfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1mdW5jdGlvbiBRYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1iKXt2YXIgYz1OYyhiKTtudWxsIT09YyYmeGMoYyk7YS5ibG9ja2VkT249YjtyZXR1cm4hMX1yZXR1cm4hMH1cbmZ1bmN0aW9uIFNjKGEsYixjKXtRYyhhKSYmYy5kZWxldGUoYil9ZnVuY3Rpb24gVGMoKXtmb3IoemM9ITE7MDxBYy5sZW5ndGg7KXt2YXIgYT1BY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9TmMoYS5ibG9ja2VkT24pO251bGwhPT1hJiZ3YyhhKTticmVha312YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7bnVsbCE9PWI/YS5ibG9ja2VkT249YjpBYy5zaGlmdCgpfW51bGwhPT1CYyYmUWMoQmMpJiYoQmM9bnVsbCk7bnVsbCE9PUNjJiZRYyhDYykmJihDYz1udWxsKTtudWxsIT09RGMmJlFjKERjKSYmKERjPW51bGwpO0VjLmZvckVhY2goU2MpO0ZjLmZvckVhY2goU2MpfWZ1bmN0aW9uIFVjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCx6Y3x8KHpjPSEwLHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFRjKSkpfVxuZnVuY3Rpb24gVmMoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gVWMoYixhKX1pZigwPEFjLmxlbmd0aCl7VWMoQWNbMF0sYSk7Zm9yKHZhciBjPTE7YzxBYy5sZW5ndGg7YysrKXt2YXIgZD1BY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PUJjJiZVYyhCYyxhKTtudWxsIT09Q2MmJlVjKENjLGEpO251bGwhPT1EYyYmVWMoRGMsYSk7RWMuZm9yRWFjaChiKTtGYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxHYy5sZW5ndGg7YysrKWQ9R2NbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPEdjLmxlbmd0aCYmKGM9R2NbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspUGMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZHYy5zaGlmdCgpfVxudmFyIFdjPXt9LFljPW5ldyBNYXAsWmM9bmV3IE1hcCwkYz1bXCJhYm9ydFwiLFwiYWJvcnRcIixYYixcImFuaW1hdGlvbkVuZFwiLFliLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsWmIsXCJhbmltYXRpb25TdGFydFwiLFwiY2FucGxheVwiLFwiY2FuUGxheVwiLFwiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIixcImVtcHRpZWRcIixcImVtcHRpZWRcIixcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmRlZFwiLFwiZW5kZWRcIixcImVycm9yXCIsXCJlcnJvclwiLFwiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsXCJsb2FkXCIsXCJsb2FkXCIsXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIixcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXG5cInNlZWtpbmdcIixcInN0YWxsZWRcIixcInN0YWxsZWRcIixcInN1c3BlbmRcIixcInN1c3BlbmRcIixcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIiwkYixcInRyYW5zaXRpb25FbmRcIixcIndhaXRpbmdcIixcIndhaXRpbmdcIl07ZnVuY3Rpb24gYWQoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrPTIpe3ZhciBkPWFbY10sZT1hW2MrMV0sZj1cIm9uXCIrKGVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpKTtmPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpmLGNhcHR1cmVkOmYrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbZF0sZXZlbnRQcmlvcml0eTpifTtaYy5zZXQoZCxiKTtZYy5zZXQoZCxmKTtXY1tlXT1mfX1cbmFkKFwiYmx1ciBibHVyIGNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzIGZvY3VzIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksMCk7XG5hZChcImRyYWcgZHJhZyBkcmFnZW50ZXIgZHJhZ0VudGVyIGRyYWdleGl0IGRyYWdFeGl0IGRyYWdsZWF2ZSBkcmFnTGVhdmUgZHJhZ292ZXIgZHJhZ092ZXIgbW91c2Vtb3ZlIG1vdXNlTW92ZSBtb3VzZW91dCBtb3VzZU91dCBtb3VzZW92ZXIgbW91c2VPdmVyIHBvaW50ZXJtb3ZlIHBvaW50ZXJNb3ZlIHBvaW50ZXJvdXQgcG9pbnRlck91dCBwb2ludGVyb3ZlciBwb2ludGVyT3ZlciBzY3JvbGwgc2Nyb2xsIHRvZ2dsZSB0b2dnbGUgdG91Y2htb3ZlIHRvdWNoTW92ZSB3aGVlbCB3aGVlbFwiLnNwbGl0KFwiIFwiKSwxKTthZCgkYywyKTtmb3IodmFyIGJkPVwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSxjZD0wO2NkPGJkLmxlbmd0aDtjZCsrKVpjLnNldChiZFtjZF0sMCk7XG52YXIgZGQ9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlZD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxmZD0hMDtmdW5jdGlvbiBGKGEsYil7dmMoYixhLCExKX1mdW5jdGlvbiB2YyhhLGIsYyl7dmFyIGQ9WmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1kPzI6ZCl7Y2FzZSAwOmQ9Z2QuYmluZChudWxsLGIsMSxhKTticmVhaztjYXNlIDE6ZD1oZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2RlZmF1bHQ6ZD1pZC5iaW5kKG51bGwsYiwxLGEpfWM/YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMCk6YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMSl9ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7SmF8fEhhKCk7dmFyIGU9aWQsZj1KYTtKYT0hMDt0cnl7R2EoZSxhLGIsYyxkKX1maW5hbGx5eyhKYT1mKXx8TGEoKX19ZnVuY3Rpb24gaGQoYSxiLGMsZCl7ZWQoZGQsaWQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGlkKGEsYixjLGQpe2lmKGZkKWlmKDA8QWMubGVuZ3RoJiYtMTxIYy5pbmRleE9mKGEpKWE9S2MobnVsbCxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2V7dmFyIGU9UmMoYSxiLGMsZCk7aWYobnVsbD09PWUpTGMoYSxkKTtlbHNlIGlmKC0xPEhjLmluZGV4T2YoYSkpYT1LYyhlLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZSBpZighT2MoZSxhLGIsYyxkKSl7TGMoYSxkKTthPXJjKGEsZCxudWxsLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfX19fVxuZnVuY3Rpb24gUmMoYSxiLGMsZCl7Yz1uYyhkKTtjPXRjKGMpO2lmKG51bGwhPT1jKXt2YXIgZT1kYyhjKTtpZihudWxsPT09ZSljPW51bGw7ZWxzZXt2YXIgZj1lLnRhZztpZigxMz09PWYpe2M9ZWMoZSk7aWYobnVsbCE9PWMpcmV0dXJuIGM7Yz1udWxsfWVsc2UgaWYoMz09PWYpe2lmKGUuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1lLnRhZz9lLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7Yz1udWxsfWVsc2UgZSE9PWMmJihjPW51bGwpfX1hPXJjKGEsZCxjLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfXJldHVybiBudWxsfVxudmFyIGpkPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LGtkPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhqZCkuZm9yRWFjaChmdW5jdGlvbihhKXtrZC5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO2pkW2JdPWpkW2FdfSl9KTtmdW5jdGlvbiBsZChhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8amQuaGFzT3duUHJvcGVydHkoYSkmJmpkW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIG1kKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPWxkKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIG5kPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBvZChhLGIpe2lmKGIpe2lmKG5kW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSgxMzcsYSxcIlwiKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih1KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih1KDYyLFwiXCIpKTt9fVxuZnVuY3Rpb24gcGQoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciBxZD1NYi5odG1sO2Z1bmN0aW9uIHJkKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPWNjKGEpO2I9d2FbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspdWMoYltkXSxhLGMpfWZ1bmN0aW9uIHNkKCl7fVxuZnVuY3Rpb24gdGQoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIHVkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1mdW5jdGlvbiB2ZChhLGIpe3ZhciBjPXVkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPXVkKGMpfX1cbmZ1bmN0aW9uIHdkKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/d2QoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfWZ1bmN0aW9uIHhkKCl7Zm9yKHZhciBhPXdpbmRvdyxiPXRkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPXRkKGEuZG9jdW1lbnQpfXJldHVybiBifVxuZnVuY3Rpb24geWQoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX12YXIgemQ9XCIkXCIsQWQ9XCIvJFwiLEJkPVwiJD9cIixDZD1cIiQhXCIsRGQ9bnVsbCxFZD1udWxsO2Z1bmN0aW9uIEZkKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIEdkKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgSGQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsSWQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIEpkKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfVxuZnVuY3Rpb24gS2QoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09emR8fGM9PT1DZHx8Yz09PUJkKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZSBjPT09QWQmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciBMZD1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxNZD1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0xkLE5kPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrTGQsT2Q9XCJfX3JlYWN0Q29udGFpbmVyZSRcIitMZDtcbmZ1bmN0aW9uIHRjKGEpe3ZhciBiPWFbTWRdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW09kXXx8Y1tNZF0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1LZChhKTtudWxsIT09YTspe2lmKGM9YVtNZF0pcmV0dXJuIGM7YT1LZChhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTmMoYSl7YT1hW01kXXx8YVtPZF07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIFBkKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih1KDMzKSk7fWZ1bmN0aW9uIFFkKGEpe3JldHVybiBhW05kXXx8bnVsbH1cbmZ1bmN0aW9uIFJkKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiBTZChhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPWxhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl0aHJvdyBFcnJvcih1KDIzMSxcbmIsdHlwZW9mIGMpKTtyZXR1cm4gY31mdW5jdGlvbiBUZChhLGIsYyl7aWYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfWZ1bmN0aW9uIFVkKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9UmQoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KVRkKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspVGQoY1tiXSxcImJ1YmJsZWRcIixhKX19XG5mdW5jdGlvbiBWZChhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFdkKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmVmQoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfWZ1bmN0aW9uIFhkKGEpe2pjKGEsVWQpfXZhciBZZD1udWxsLFpkPW51bGwsJGQ9bnVsbDtcbmZ1bmN0aW9uIGFlKCl7aWYoJGQpcmV0dXJuICRkO3ZhciBhLGI9WmQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gJGQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBiZSgpe3JldHVybiEwfWZ1bmN0aW9uIGNlKCl7cmV0dXJuITF9XG5mdW5jdGlvbiBHKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9iZTpjZTt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWNlO3JldHVybiB0aGlzfVxubihHLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWJlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWJlKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PWJlfSxpc1BlcnNpc3RlbnQ6Y2UsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Y2U7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTtHLkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbkcuZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7ZGUoYyk7cmV0dXJuIGN9O2RlKEcpO2Z1bmN0aW9uIGVlKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfVxuZnVuY3Rpb24gZmUoYSl7aWYoIShhIGluc3RhbmNlb2YgdGhpcykpdGhyb3cgRXJyb3IodSgyNzkpKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9ZnVuY3Rpb24gZGUoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9ZWU7YS5yZWxlYXNlPWZlfXZhciBnZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaGU9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGllPVs5LDEzLDI3LDMyXSxqZT15YSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csa2U9bnVsbDt5YSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoa2U9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBsZT15YSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWtlLG1lPXlhJiYoIWplfHxrZSYmODxrZSYmMTE+PWtlKSxuZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxvZT17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSxwZT0hMTtcbmZ1bmN0aW9uIHFlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09aWUuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiByZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBzZT0hMTtmdW5jdGlvbiB0ZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gcmUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3BlPSEwO3JldHVybiBuZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1uZSYmcGU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gdWUoYSxiKXtpZihzZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhamUmJnFlKGEsYik/KGE9YWUoKSwkZD1aZD1ZZD1udWxsLHNlPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBtZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgdmU9e2V2ZW50VHlwZXM6b2UsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZTtpZihqZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgZj1vZS5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6Zj1vZS5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmY9b2UuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1mPXZvaWQgMH1lbHNlIHNlP3FlKGEsYykmJihmPW9lLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGY9b2UuY29tcG9zaXRpb25TdGFydCk7Zj8obWUmJlwia29cIiE9PWMubG9jYWxlJiYoc2V8fGYhPT1vZS5jb21wb3NpdGlvblN0YXJ0P2Y9PT1vZS5jb21wb3NpdGlvbkVuZCYmc2UmJihlPWFlKCkpOihZZD1kLFpkPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LHNlPSEwKSksZj1nZS5nZXRQb29sZWQoZixcbmIsYyxkKSxlP2YuZGF0YT1lOihlPXJlKGMpLG51bGwhPT1lJiYoZi5kYXRhPWUpKSxYZChmKSxlPWYpOmU9bnVsbDsoYT1sZT90ZShhLGMpOnVlKGEsYykpPyhiPWhlLmdldFBvb2xlZChvZS5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsWGQoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWU/YjpudWxsPT09Yj9lOltlLGJdfX0sd2U9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24geGUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISF3ZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG52YXIgeWU9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gemUoYSxiLGMpe2E9Ry5nZXRQb29sZWQoeWUuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtEYShjKTtYZChhKTtyZXR1cm4gYX12YXIgQWU9bnVsbCxCZT1udWxsO2Z1bmN0aW9uIENlKGEpe21jKGEpfWZ1bmN0aW9uIERlKGEpe3ZhciBiPVBkKGEpO2lmKHliKGIpKXJldHVybiBhfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIEZlPSExO3lhJiYoRmU9b2MoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7XG5mdW5jdGlvbiBHZSgpe0FlJiYoQWUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpLEJlPUFlPW51bGwpfWZ1bmN0aW9uIEhlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZEZShCZSkpaWYoYT16ZShCZSxhLG5jKGEpKSxKYSltYyhhKTtlbHNle0phPSEwO3RyeXtGYShDZSxhKX1maW5hbGx5e0phPSExLExhKCl9fX1mdW5jdGlvbiBJZShhLGIsYyl7XCJmb2N1c1wiPT09YT8oR2UoKSxBZT1iLEJlPWMsQWUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpKTpcImJsdXJcIj09PWEmJkdlKCl9ZnVuY3Rpb24gSmUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gRGUoQmUpfWZ1bmN0aW9uIEtlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gRGUoYil9ZnVuY3Rpb24gTGUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gRGUoYil9XG52YXIgTWU9e2V2ZW50VHlwZXM6eWUsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpGZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/UGQoYik6d2luZG93LGY9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1mfHxcImlucHV0XCI9PT1mJiZcImZpbGVcIj09PWUudHlwZSl2YXIgZz1FZTtlbHNlIGlmKHhlKGUpKWlmKEZlKWc9TGU7ZWxzZXtnPUplO3ZhciBoPUllfWVsc2UoZj1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09Zi50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZz1LZSk7aWYoZyYmKGc9ZyhhLGIpKSlyZXR1cm4gemUoZyxjLGQpO2gmJmgoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZEYihlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxOZT1HLmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksXG5PZT17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGUoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZVthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFFlKCl7cmV0dXJuIFBlfVxudmFyIFJlPTAsU2U9MCxUZT0hMSxVZT0hMSxWZT1OZS5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9UmU7UmU9YS5zY3JlZW5YO3JldHVybiBUZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFRlPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9U2U7U2U9YS5zY3JlZW5ZO3JldHVybiBVZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFVlPSEwLDApfX0pLFdlPVZlLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSxYZT17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sWWU9e2V2ZW50VHlwZXM6WGUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGc9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGYmJjA9PT0oZSYzMikmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZyYmIWYpcmV0dXJuIG51bGw7Zj1kLndpbmRvdz09PWQ/ZDooZj1kLm93bmVyRG9jdW1lbnQpP2YuZGVmYXVsdFZpZXd8fGYucGFyZW50V2luZG93OndpbmRvdztpZihnKXtpZihnPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT90YyhiKTpudWxsLG51bGwhPT1iKXt2YXIgaD1kYyhiKTtpZihiIT09aHx8NSE9PWIudGFnJiY2IT09Yi50YWcpYj1udWxsfX1lbHNlIGc9bnVsbDtpZihnPT09YilyZXR1cm4gbnVsbDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09XG5hKXt2YXIgaz1WZTt2YXIgbD1YZS5tb3VzZUxlYXZlO3ZhciBtPVhlLm1vdXNlRW50ZXI7dmFyIHA9XCJtb3VzZVwifWVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWs9V2UsbD1YZS5wb2ludGVyTGVhdmUsbT1YZS5wb2ludGVyRW50ZXIscD1cInBvaW50ZXJcIjthPW51bGw9PWc/ZjpQZChnKTtmPW51bGw9PWI/ZjpQZChiKTtsPWsuZ2V0UG9vbGVkKGwsZyxjLGQpO2wudHlwZT1wK1wibGVhdmVcIjtsLnRhcmdldD1hO2wucmVsYXRlZFRhcmdldD1mO2M9ay5nZXRQb29sZWQobSxiLGMsZCk7Yy50eXBlPXArXCJlbnRlclwiO2MudGFyZ2V0PWY7Yy5yZWxhdGVkVGFyZ2V0PWE7ZD1nO3A9YjtpZihkJiZwKWE6e2s9ZDttPXA7Zz0wO2ZvcihhPWs7YTthPVJkKGEpKWcrKzthPTA7Zm9yKGI9bTtiO2I9UmQoYikpYSsrO2Zvcig7MDxnLWE7KWs9UmQoayksZy0tO2Zvcig7MDxhLWc7KW09UmQobSksYS0tO2Zvcig7Zy0tOyl7aWYoaz09PW18fGs9PT1tLmFsdGVybmF0ZSlicmVhayBhO1xuaz1SZChrKTttPVJkKG0pfWs9bnVsbH1lbHNlIGs9bnVsbDttPWs7Zm9yKGs9W107ZCYmZCE9PW07KXtnPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztrLnB1c2goZCk7ZD1SZChkKX1mb3IoZD1bXTtwJiZwIT09bTspe2c9cC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2QucHVzaChwKTtwPVJkKHApfWZvcihwPTA7cDxrLmxlbmd0aDtwKyspVmQoa1twXSxcImJ1YmJsZWRcIixsKTtmb3IocD1kLmxlbmd0aDswPHAtLTspVmQoZFtwXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuIDA9PT0oZSY2NCk/W2xdOltsLGNdfX07ZnVuY3Rpb24gWmUoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciAkZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpaZSxhZj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gYmYoYSxiKXtpZigkZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWFmLmNhbGwoYixjW2RdKXx8ISRlKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9XG52YXIgY2Y9eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxkZj17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sZWY9bnVsbCxmZj1udWxsLGdmPW51bGwsaGY9ITE7XG5mdW5jdGlvbiBqZihhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKGhmfHxudWxsPT1lZnx8ZWYhPT10ZChjKSlyZXR1cm4gbnVsbDtjPWVmO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJnlkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIGdmJiZiZihnZixjKT9udWxsOihnZj1jLGE9Ry5nZXRQb29sZWQoZGYuc2VsZWN0LGZmLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9ZWYsWGQoYSksYSl9XG52YXIga2Y9e2V2ZW50VHlwZXM6ZGYsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUsZil7ZT1mfHwoZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQpO2lmKCEoZj0hZSkpe2E6e2U9Y2MoZSk7Zj13YS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKylpZighZS5oYXMoZltnXSkpe2U9ITE7YnJlYWsgYX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/UGQoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZih4ZShlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSllZj1lLGZmPWIsZ2Y9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOmdmPWZmPWVmPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOmhmPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gaGY9ITEsamYoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoY2YpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBqZihjLGQpfXJldHVybiBudWxsfX0sbGY9Ry5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLG1mPUcuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksbmY9TmUuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBvZihhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBwZj17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0scWY9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHJmPU5lLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1wZlthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZihhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/cWZbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29mKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29mKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksc2Y9VmUuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHRmPU5lLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlfSksdWY9Ry5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksdmY9VmUuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx3Zj17ZXZlbnRUeXBlczpXYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVljLmdldChhKTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9mKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1yZjticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9bmY7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1cblZlO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9c2Y7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT10ZjticmVhaztjYXNlIFhiOmNhc2UgWWI6Y2FzZSBaYjphPWxmO2JyZWFrO2Nhc2UgJGI6YT11ZjticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1OZTticmVhaztjYXNlIFwid2hlZWxcIjphPXZmO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9bWY7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1cbldlO2JyZWFrO2RlZmF1bHQ6YT1HfWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7WGQoYik7cmV0dXJuIGJ9fTtpZihwYSl0aHJvdyBFcnJvcih1KDEwMSkpO3BhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3JhKCk7dmFyIHhmPU5jO2xhPVFkO21hPXhmO25hPVBkO3hhKHtTaW1wbGVFdmVudFBsdWdpbjp3ZixFbnRlckxlYXZlRXZlbnRQbHVnaW46WWUsQ2hhbmdlRXZlbnRQbHVnaW46TWUsU2VsZWN0RXZlbnRQbHVnaW46a2YsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjp2ZX0pO3ZhciB5Zj1bXSx6Zj0tMTtmdW5jdGlvbiBIKGEpezA+emZ8fChhLmN1cnJlbnQ9eWZbemZdLHlmW3pmXT1udWxsLHpmLS0pfVxuZnVuY3Rpb24gSShhLGIpe3pmKys7eWZbemZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQWY9e30sSj17Y3VycmVudDpBZn0sSz17Y3VycmVudDohMX0sQmY9QWY7ZnVuY3Rpb24gQ2YoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBBZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBMKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9XG5mdW5jdGlvbiBEZigpe0goSyk7SChKKX1mdW5jdGlvbiBFZihhLGIsYyl7aWYoSi5jdXJyZW50IT09QWYpdGhyb3cgRXJyb3IodSgxNjgpKTtJKEosYik7SShLLGMpfWZ1bmN0aW9uIEZmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IodSgxMDgscGIoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbih7fSxjLHt9LGQpfWZ1bmN0aW9uIEdmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxBZjtCZj1KLmN1cnJlbnQ7SShKLGEpO0koSyxLLmN1cnJlbnQpO3JldHVybiEwfVxuZnVuY3Rpb24gSGYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHUoMTY5KSk7Yz8oYT1GZihhLGIsQmYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKEspLEgoSiksSShKLGEpKTpIKEspO0koSyxjKX1cbnZhciBJZj1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxKZj1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssS2Y9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxMZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxNZj1yLnVuc3RhYmxlX25vdyxOZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLE9mPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksUGY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxRZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFJmPXIudW5zdGFibGVfTG93UHJpb3JpdHksU2Y9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksVGY9e30sVWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxWZj12b2lkIDAhPT1MZj9MZjpmdW5jdGlvbigpe30sV2Y9bnVsbCxYZj1udWxsLFlmPSExLFpmPU1mKCksJGY9MUU0PlpmP01mOmZ1bmN0aW9uKCl7cmV0dXJuIE1mKCktWmZ9O1xuZnVuY3Rpb24gYWcoKXtzd2l0Y2goTmYoKSl7Y2FzZSBPZjpyZXR1cm4gOTk7Y2FzZSBQZjpyZXR1cm4gOTg7Y2FzZSBRZjpyZXR1cm4gOTc7Y2FzZSBSZjpyZXR1cm4gOTY7Y2FzZSBTZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gYmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIE9mO2Nhc2UgOTg6cmV0dXJuIFBmO2Nhc2UgOTc6cmV0dXJuIFFmO2Nhc2UgOTY6cmV0dXJuIFJmO2Nhc2UgOTU6cmV0dXJuIFNmO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGNnKGEsYil7YT1iZyhhKTtyZXR1cm4gSWYoYSxiKX1mdW5jdGlvbiBkZyhhLGIsYyl7YT1iZyhhKTtyZXR1cm4gSmYoYSxiLGMpfWZ1bmN0aW9uIGVnKGEpe251bGw9PT1XZj8oV2Y9W2FdLFhmPUpmKE9mLGZnKSk6V2YucHVzaChhKTtyZXR1cm4gVGZ9ZnVuY3Rpb24gZ2coKXtpZihudWxsIT09WGYpe3ZhciBhPVhmO1hmPW51bGw7S2YoYSl9ZmcoKX1cbmZ1bmN0aW9uIGZnKCl7aWYoIVlmJiZudWxsIT09V2Ype1lmPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPVdmO2NnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTtXZj1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1XZiYmKFdmPVdmLnNsaWNlKGErMSkpLEpmKE9mLGdnKSxjO31maW5hbGx5e1lmPSExfX19ZnVuY3Rpb24gaGcoYSxiLGMpe2MvPTEwO3JldHVybiAxMDczNzQxODIxLSgoKDEwNzM3NDE4MjEtYStiLzEwKS9jfDApKzEpKmN9ZnVuY3Rpb24gaWcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9dmFyIGpnPXtjdXJyZW50Om51bGx9LGtnPW51bGwsbGc9bnVsbCxtZz1udWxsO2Z1bmN0aW9uIG5nKCl7bWc9bGc9a2c9bnVsbH1cbmZ1bmN0aW9uIG9nKGEpe3ZhciBiPWpnLmN1cnJlbnQ7SChqZyk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBwZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZihhLmNoaWxkRXhwaXJhdGlvblRpbWU8YilhLmNoaWxkRXhwaXJhdGlvblRpbWU9YixudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7ZWxzZSBpZihudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYy5jaGlsZEV4cGlyYXRpb25UaW1lPWI7ZWxzZSBicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBxZyhhLGIpe2tnPWE7bWc9bGc9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJihhLmV4cGlyYXRpb25UaW1lPj1iJiYocmc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gc2coYSxiKXtpZihtZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpbWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PWxnKXtpZihudWxsPT09a2cpdGhyb3cgRXJyb3IodSgzMDgpKTtsZz1iO2tnLmRlcGVuZGVuY2llcz17ZXhwaXJhdGlvblRpbWU6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2UgbGc9bGcubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHRnPSExO2Z1bmN0aW9uIHVnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsYmFzZVF1ZXVlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGx9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiB2ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxiYXNlUXVldWU6YS5iYXNlUXVldWUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gd2coYSxiKXthPXtleHBpcmF0aW9uVGltZTphLHN1c3BlbnNlQ29uZmlnOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfTtyZXR1cm4gYS5uZXh0PWF9ZnVuY3Rpb24geGcoYSxiKXthPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWEpe2E9YS5zaGFyZWQ7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn19XG5mdW5jdGlvbiB5ZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZ2ZyhjLGEpO2E9YS51cGRhdGVRdWV1ZTtjPWEuYmFzZVF1ZXVlO251bGw9PT1jPyhhLmJhc2VRdWV1ZT1iLm5leHQ9YixiLm5leHQ9Yik6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpfVxuZnVuY3Rpb24gemcoYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt0Zz0hMTt2YXIgZj1lLmJhc2VRdWV1ZSxnPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWcpe2lmKG51bGwhPT1mKXt2YXIgaD1mLm5leHQ7Zi5uZXh0PWcubmV4dDtnLm5leHQ9aH1mPWc7ZS5zaGFyZWQucGVuZGluZz1udWxsO2g9YS5hbHRlcm5hdGU7bnVsbCE9PWgmJihoPWgudXBkYXRlUXVldWUsbnVsbCE9PWgmJihoLmJhc2VRdWV1ZT1nKSl9aWYobnVsbCE9PWYpe2g9Zi5uZXh0O3ZhciBrPWUuYmFzZVN0YXRlLGw9MCxtPW51bGwscD1udWxsLHg9bnVsbDtpZihudWxsIT09aCl7dmFyIHo9aDtkb3tnPXouZXhwaXJhdGlvblRpbWU7aWYoZzxkKXt2YXIgY2E9e2V4cGlyYXRpb25UaW1lOnouZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT14PyhwPXg9XG5jYSxtPWspOng9eC5uZXh0PWNhO2c+bCYmKGw9Zyl9ZWxzZXtudWxsIT09eCYmKHg9eC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfSk7QWcoZyx6LnN1c3BlbnNlQ29uZmlnKTthOnt2YXIgRD1hLHQ9ejtnPWI7Y2E9Yztzd2l0Y2godC50YWcpe2Nhc2UgMTpEPXQucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgRCl7az1ELmNhbGwoY2EsayxnKTticmVhayBhfWs9RDticmVhayBhO2Nhc2UgMzpELmVmZmVjdFRhZz1ELmVmZmVjdFRhZyYtNDA5N3w2NDtjYXNlIDA6RD10LnBheWxvYWQ7Zz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgRD9ELmNhbGwoY2EsayxnKTpEO2lmKG51bGw9PT1nfHx2b2lkIDA9PT1nKWJyZWFrIGE7az1uKHt9LGssZyk7YnJlYWsgYTtjYXNlIDI6dGc9ITB9fW51bGwhPT16LmNhbGxiYWNrJiZcbihhLmVmZmVjdFRhZ3w9MzIsZz1lLmVmZmVjdHMsbnVsbD09PWc/ZS5lZmZlY3RzPVt6XTpnLnB1c2goeikpfXo9ei5uZXh0O2lmKG51bGw9PT16fHx6PT09aClpZihnPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWcpYnJlYWs7ZWxzZSB6PWYubmV4dD1nLm5leHQsZy5uZXh0PWgsZS5iYXNlUXVldWU9Zj1nLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKX1udWxsPT09eD9tPWs6eC5uZXh0PXA7ZS5iYXNlU3RhdGU9bTtlLmJhc2VRdWV1ZT14O0JnKGwpO2EuZXhwaXJhdGlvblRpbWU9bDthLm1lbW9pemVkU3RhdGU9a319XG5mdW5jdGlvbiBDZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWU7ZT1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkKXRocm93IEVycm9yKHUoMTkxLGQpKTtkLmNhbGwoZSl9fX12YXIgRGc9V2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsRWc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7ZnVuY3Rpb24gRmcoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5leHBpcmF0aW9uVGltZSYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIEpnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT9kYyhhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UudGFnPTE7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9R2coKSxkPURnLnN1c3BlbnNlO1xuYz1IZyhjLGEsZCk7ZD13ZyhjLGQpO2QudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO3hnKGEsZCk7SWcoYSxjKX19O2Z1bmN0aW9uIEtnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWJmKGMsZCl8fCFiZihlLGYpOiEwfVxuZnVuY3Rpb24gTGcoYSxiLGMpe3ZhciBkPSExLGU9QWY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9c2coZik6KGU9TChiKT9CZjpKLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9DZihhLGUpOkFmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9Smc7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gTWcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gTmcoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1FZzt1ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXNnKGYpOihmPUwoYik/QmY6Si5jdXJyZW50LGUuY29udGV4dD1DZihhLGYpKTt6ZyhhLGMsZSxkKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoRmcoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8XG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksemcoYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciBPZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gUGcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHUoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PUVnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHUoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHUoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBRZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih1KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKSk7fVxuZnVuY3Rpb24gUmcoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9U2coYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9VGcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9UGcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVVnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVBnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9VmcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVdnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcChhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VGcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGM9VWcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UGcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlICRhOnJldHVybiBiPVZnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihPZyhiKXx8XG5uYihiKSlyZXR1cm4gYj1XZyhiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtRZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1hYj9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgJGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoT2coYyl8fG5iKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtRZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHooYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09YWI/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgJGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoT2coZCl8fG5iKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtRZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIGNhKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCxtPWcseT1nPTAsQT1udWxsO251bGwhPT1tJiZ5PGgubGVuZ3RoO3krKyl7bS5pbmRleD55PyhBPW0sbT1udWxsKTpBPW0uc2libGluZzt2YXIgcT14KGUsbSxoW3ldLGspO2lmKG51bGw9PT1xKXtudWxsPT09bSYmKG09QSk7YnJlYWt9YSYmXG5tJiZudWxsPT09cS5hbHRlcm5hdGUmJmIoZSxtKTtnPWYocSxnLHkpO251bGw9PT10P2w9cTp0LnNpYmxpbmc9cTt0PXE7bT1BfWlmKHk9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG0pLGw7aWYobnVsbD09PW0pe2Zvcig7eTxoLmxlbmd0aDt5KyspbT1wKGUsaFt5XSxrKSxudWxsIT09bSYmKGc9ZihtLGcseSksbnVsbD09PXQ/bD1tOnQuc2libGluZz1tLHQ9bSk7cmV0dXJuIGx9Zm9yKG09ZChlLG0pO3k8aC5sZW5ndGg7eSsrKUE9eihtLGUseSxoW3ldLGspLG51bGwhPT1BJiYoYSYmbnVsbCE9PUEuYWx0ZXJuYXRlJiZtLmRlbGV0ZShudWxsPT09QS5rZXk/eTpBLmtleSksZz1mKEEsZyx5KSxudWxsPT09dD9sPUE6dC5zaWJsaW5nPUEsdD1BKTthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIEQoZSxnLGgsbCl7dmFyIGs9bmIoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGspdGhyb3cgRXJyb3IodSgxNTApKTtoPWsuY2FsbChoKTtcbmlmKG51bGw9PWgpdGhyb3cgRXJyb3IodSgxNTEpKTtmb3IodmFyIG09az1udWxsLHQ9Zyx5PWc9MCxBPW51bGwscT1oLm5leHQoKTtudWxsIT09dCYmIXEuZG9uZTt5KysscT1oLm5leHQoKSl7dC5pbmRleD55PyhBPXQsdD1udWxsKTpBPXQuc2libGluZzt2YXIgRD14KGUsdCxxLnZhbHVlLGwpO2lmKG51bGw9PT1EKXtudWxsPT09dCYmKHQ9QSk7YnJlYWt9YSYmdCYmbnVsbD09PUQuYWx0ZXJuYXRlJiZiKGUsdCk7Zz1mKEQsZyx5KTtudWxsPT09bT9rPUQ6bS5zaWJsaW5nPUQ7bT1EO3Q9QX1pZihxLmRvbmUpcmV0dXJuIGMoZSx0KSxrO2lmKG51bGw9PT10KXtmb3IoOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT1wKGUscS52YWx1ZSxsKSxudWxsIT09cSYmKGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7cmV0dXJuIGt9Zm9yKHQ9ZChlLHQpOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT16KHQsZSx5LHEudmFsdWUsbCksbnVsbCE9PXEmJihhJiZudWxsIT09XG5xLmFsdGVybmF0ZSYmdC5kZWxldGUobnVsbD09PXEua2V5P3k6cS5rZXkpLGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7YSYmdC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4ga31yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09YWImJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgWmE6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT1hYil7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxcbmsuc2libGluZyk7ZD1lKGssZi5wcm9wcyk7ZC5yZWY9UGcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT1hYj8oZD1XZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VWcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UGcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlICRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPVxuZC5zaWJsaW5nfWQ9VmcoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VGcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoT2coZikpcmV0dXJuIGNhKGEsZCxmLGgpO2lmKG5iKGYpKXJldHVybiBEKGEsZCxmLGgpO2wmJlFnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6dGhyb3cgYT1hLnR5cGUsRXJyb3IodSgxNTIsYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBYZz1SZyghMCksWWc9UmcoITEpLFpnPXt9LCRnPXtjdXJyZW50OlpnfSxhaD17Y3VycmVudDpaZ30sYmg9e2N1cnJlbnQ6Wmd9O1xuZnVuY3Rpb24gY2goYSl7aWYoYT09PVpnKXRocm93IEVycm9yKHUoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZGgoYSxiKXtJKGJoLGIpO0koYWgsYSk7SSgkZyxaZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpPYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9T2IoYixhKX1IKCRnKTtJKCRnLGIpfWZ1bmN0aW9uIGVoKCl7SCgkZyk7SChhaCk7SChiaCl9ZnVuY3Rpb24gZmgoYSl7Y2goYmguY3VycmVudCk7dmFyIGI9Y2goJGcuY3VycmVudCk7dmFyIGM9T2IoYixhLnR5cGUpO2IhPT1jJiYoSShhaCxhKSxJKCRnLGMpKX1mdW5jdGlvbiBnaChhKXthaC5jdXJyZW50PT09YSYmKEgoJGcpLEgoYWgpKX12YXIgTT17Y3VycmVudDowfTtcbmZ1bmN0aW9uIGhoKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fGMuZGF0YT09PUJkfHxjLmRhdGE9PT1DZCkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH1mdW5jdGlvbiBpaChhLGIpe3JldHVybntyZXNwb25kZXI6YSxwcm9wczpifX1cbnZhciBqaD1XYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGtoPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLGxoPTAsTj1udWxsLE89bnVsbCxQPW51bGwsbWg9ITE7ZnVuY3Rpb24gUSgpe3Rocm93IEVycm9yKHUoMzIxKSk7fWZ1bmN0aW9uIG5oKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoISRlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBvaChhLGIsYyxkLGUsZil7bGg9ZjtOPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IuZXhwaXJhdGlvblRpbWU9MDtqaC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP3BoOnFoO2E9YyhkLGUpO2lmKGIuZXhwaXJhdGlvblRpbWU9PT1saCl7Zj0wO2Rve2IuZXhwaXJhdGlvblRpbWU9MDtpZighKDI1PmYpKXRocm93IEVycm9yKHUoMzAxKSk7Zis9MTtQPU89bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7amguY3VycmVudD1yaDthPWMoZCxlKX13aGlsZShiLmV4cGlyYXRpb25UaW1lPT09bGgpfWpoLmN1cnJlbnQ9c2g7Yj1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDtsaD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYoYil0aHJvdyBFcnJvcih1KDMwMCkpO3JldHVybiBhfVxuZnVuY3Rpb24gdGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWE7cmV0dXJuIFB9ZnVuY3Rpb24gdWgoKXtpZihudWxsPT09Tyl7dmFyIGE9Ti5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Ty5uZXh0O3ZhciBiPW51bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZTpQLm5leHQ7aWYobnVsbCE9PWIpUD1iLE89YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzEwKSk7Tz1hO2E9e21lbW9pemVkU3RhdGU6Ty5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpPLmJhc2VTdGF0ZSxiYXNlUXVldWU6Ty5iYXNlUXVldWUscXVldWU6Ty5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YX1yZXR1cm4gUH1cbmZ1bmN0aW9uIHZoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gd2goYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1PLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsuZXhwaXJhdGlvblRpbWU7aWYobDxsaCl7dmFyIG09e2V4cGlyYXRpb25UaW1lOmsuZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWg/KGc9aD1tLGY9ZCk6aD1oLm5leHQ9bTtsPk4uZXhwaXJhdGlvblRpbWUmJlxuKE4uZXhwaXJhdGlvblRpbWU9bCxCZyhsKSl9ZWxzZSBudWxsIT09aCYmKGg9aC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxBZyhsLGsuc3VzcGVuc2VDb25maWcpLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2s9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZSk7bnVsbD09PWg/Zj1kOmgubmV4dD1nOyRlKGQsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1mO2IuYmFzZVF1ZXVlPWg7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiB4aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7JGUoZixiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIHloKGEpe3ZhciBiPXRoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOnZoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfWZ1bmN0aW9uIEFoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPU4udXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sTi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEJoKCl7cmV0dXJuIHVoKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBDaChhLGIsYyxkKXt2YXIgZT10aCgpO04uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfWZ1bmN0aW9uIERoKGEsYixjLGQpe3ZhciBlPXVoKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU8pe3ZhciBnPU8ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmbmgoZCxnLmRlcHMpKXtBaChiLGMsZixkKTtyZXR1cm59fU4uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIEVoKGEsYil7cmV0dXJuIENoKDUxNiw0LGEsYil9ZnVuY3Rpb24gRmgoYSxiKXtyZXR1cm4gRGgoNTE2LDQsYSxiKX1mdW5jdGlvbiBHaChhLGIpe3JldHVybiBEaCg0LDIsYSxiKX1cbmZ1bmN0aW9uIEhoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gSWgoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBEaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gSmgoKXt9ZnVuY3Rpb24gS2goYSxiKXt0aCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfWZ1bmN0aW9uIExoKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gTWgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gTmgoYSxiLGMpe3ZhciBkPWFnKCk7Y2coOTg+ZD85ODpkLGZ1bmN0aW9uKCl7YSghMCl9KTtjZyg5NzxkPzk3OmQsZnVuY3Rpb24oKXt2YXIgZD1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7YSghMSksYygpfWZpbmFsbHl7a2guc3VzcGVuc2U9ZH19KX1cbmZ1bmN0aW9uIHpoKGEsYixjKXt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT17ZXhwaXJhdGlvblRpbWU6ZCxzdXNwZW5zZUNvbmZpZzplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O3ZhciBmPWIucGVuZGluZztudWxsPT09Zj9lLm5leHQ9ZTooZS5uZXh0PWYubmV4dCxmLm5leHQ9ZSk7Yi5wZW5kaW5nPWU7Zj1hLmFsdGVybmF0ZTtpZihhPT09Tnx8bnVsbCE9PWYmJmY9PT1OKW1oPSEwLGUuZXhwaXJhdGlvblRpbWU9bGgsTi5leHBpcmF0aW9uVGltZT1saDtlbHNle2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PWZ8fDA9PT1mLmV4cGlyYXRpb25UaW1lKSYmKGY9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1mKSl0cnl7dmFyIGc9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxoPWYoZyxjKTtlLmVhZ2VyUmVkdWNlcj1mO2UuZWFnZXJTdGF0ZT1oO2lmKCRlKGgsZykpcmV0dXJufWNhdGNoKGspe31maW5hbGx5e31JZyhhLFxuZCl9fVxudmFyIHNoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpRLHVzZUNvbnRleHQ6USx1c2VFZmZlY3Q6USx1c2VJbXBlcmF0aXZlSGFuZGxlOlEsdXNlTGF5b3V0RWZmZWN0OlEsdXNlTWVtbzpRLHVzZVJlZHVjZXI6USx1c2VSZWY6USx1c2VTdGF0ZTpRLHVzZURlYnVnVmFsdWU6USx1c2VSZXNwb25kZXI6USx1c2VEZWZlcnJlZFZhbHVlOlEsdXNlVHJhbnNpdGlvbjpRfSxwaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6S2gsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIENoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIENoKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxcbmJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj10aCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTp5aCx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eWgoYSksZD1jWzBdLGU9Y1sxXTtFaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9XG5jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXloKCExKSxjPWJbMF07Yj1iWzFdO3JldHVybltLaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxxaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOndoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB3aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz13aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj1cbndoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxyaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOnhoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB4aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz14aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj14aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLFxuYixhKSxbYixhXSksY119fSxPaD1udWxsLFBoPW51bGwsUWg9ITE7ZnVuY3Rpb24gUmgoYSxiKXt2YXIgYz1TaCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfVxuZnVuY3Rpb24gVGgoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFVoKGEpe2lmKFFoKXt2YXIgYj1QaDtpZihiKXt2YXIgYz1iO2lmKCFUaChhLGIpKXtiPUpkKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhVGgoYSxiKSl7YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MjtRaD0hMTtPaD1hO3JldHVybn1SaChPaCxjKX1PaD1hO1BoPUpkKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyLFFoPSExLE9oPWF9fWZ1bmN0aW9uIFZoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtPaD1hfVxuZnVuY3Rpb24gV2goYSl7aWYoYSE9PU9oKXJldHVybiExO2lmKCFRaClyZXR1cm4gVmgoYSksUWg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFHZChiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9UGg7YjspUmgoYSxiKSxiPUpkKGIubmV4dFNpYmxpbmcpO1ZoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IodSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09QWQpe2lmKDA9PT1iKXtQaD1KZChhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlIGMhPT16ZCYmYyE9PUNkJiZjIT09QmR8fGIrK31hPWEubmV4dFNpYmxpbmd9UGg9bnVsbH19ZWxzZSBQaD1PaD9KZChhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIFhoKCl7UGg9T2g9bnVsbDtRaD0hMX12YXIgWWg9V2EuUmVhY3RDdXJyZW50T3duZXIscmc9ITE7ZnVuY3Rpb24gUihhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1lnKGIsbnVsbCxjLGQpOlhnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIFpoKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtxZyhiLGUpO2Q9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGFpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhYmkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsY2koYSxiLGcsZCxlLGYpO2E9VWcoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpiZixjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiAkaChhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1TZyhnLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGNpKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJmJmKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHJnPSExLGU8Zik/KGIuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSwkaChhLGIsZikpOmRpKGEsYixjLGQsZil9ZnVuY3Rpb24gZWkoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBkaShhLGIsYyxkLGUpe3ZhciBmPUwoYyk/QmY6Si5jdXJyZW50O2Y9Q2YoYixmKTtxZyhiLGUpO2M9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGZpKGEsYixjLGQsZSl7aWYoTChjKSl7dmFyIGY9ITA7R2YoYil9ZWxzZSBmPSExO3FnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxMZyhiLGMsZCksTmcoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCk7dGc9ITE7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9eDt6ZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8eCE9PWt8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXRnfHxLZyhiLGMsaCxkLHgsayxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSx2ZyhhLGIpLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmlnKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywocD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCksdGc9ITEsaz1iLm1lbW9pemVkU3RhdGUsZy5zdGF0ZT1rLHpnKGIsZCxnLGUpLHg9Yi5tZW1vaXplZFN0YXRlLGghPT1kfHxrIT09eHx8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKG09dGd8fEtnKGIsYyxoLGQsayx4LGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxcbngsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGwpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1sLGQ9bSk6XG4oXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIGdpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIGdpKGEsYixjLGQsZSxmKXtlaShhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmSGYoYixjLCExKSwkaChhLGIsZik7ZD1iLnN0YXRlTm9kZTtZaC5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1YZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPVhnKGIsbnVsbCxoLGYpKTpSKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJkhmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gaGkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9FZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZFZihhLGIuY29udGV4dCwhMSk7ZGgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIGlpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlUaW1lOjB9O1xuZnVuY3Rpb24gamkoYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9TS5jdXJyZW50LGc9ITEsaDsoaD0wIT09KGIuZWZmZWN0VGFnJjY0KSl8fChoPTAhPT0oZiYyKSYmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlKSk7aD8oZz0hMCxiLmVmZmVjdFRhZyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZS5mYWxsYmFja3x8ITA9PT1lLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZnw9MSk7SShNLGYmMSk7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWUuZmFsbGJhY2smJlVoKGIpO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49XG5iO2Uuc2libGluZz1jO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9ZD1lLmNoaWxkcmVuO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVlnKGIsbnVsbCxkLGMpfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2E9YS5jaGlsZDtkPWEuc2libGluZztpZihnKXtlPWUuZmFsbGJhY2s7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtjLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpJiYoZz1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09YS5jaGlsZCkpZm9yKGMuY2hpbGQ9ZztudWxsIT09ZzspZy5yZXR1cm49YyxnPWcuc2libGluZztkPVNnKGQsZSk7ZC5yZXR1cm49YjtjLnNpYmxpbmc9ZDtjLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1jO3JldHVybiBkfWM9WGcoYixhLmNoaWxkLGUuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9XG5jfWE9YS5jaGlsZDtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2UuY2hpbGQ9YTtudWxsIT09YSYmKGEucmV0dXJuPWUpO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPWI7ZS5zaWJsaW5nPWM7Yy5lZmZlY3RUYWd8PTI7ZS5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31iLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1YZyhiLGEsZS5jaGlsZHJlbixjKX1cbmZ1bmN0aW9uIGtpKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTtwZyhhLnJldHVybixiKX1mdW5jdGlvbiBsaShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxFeHBpcmF0aW9uOjAsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbEV4cGlyYXRpb249MCxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtSKGEsYixkLmNoaWxkcmVuLGMpO2Q9TS5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZWZmZWN0VGFnfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJmtpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKWtpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoTSxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09aGgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTtsaShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1oaChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9bGkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOmxpKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiAkaChhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTswIT09ZCYmQmcoZCk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHUoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1TZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXZhciBuaSxvaSxwaSxxaTtcbm5pPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtvaT1mdW5jdGlvbigpe307XG5waT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7Y2goJGcuY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXpiKGcsZik7ZD16YihnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9R2IoZyxmKTtkPUdiKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9SWIoZyxmKTtkPUliKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9c2QpfW9kKGMsZCk7dmFyIGgsaztjPW51bGw7Zm9yKGggaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShoKSYmZi5oYXNPd25Qcm9wZXJ0eShoKSYmbnVsbCE9ZltoXSlpZihcInN0eWxlXCI9PT1cbmgpZm9yKGsgaW4gZz1mW2hdLGcpZy5oYXNPd25Qcm9wZXJ0eShrKSYmKGN8fChjPXt9KSxjW2tdPVwiXCIpO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1oJiZcImNoaWxkcmVuXCIhPT1oJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGgsbnVsbCkpO2ZvcihoIGluIGQpe3ZhciBsPWRbaF07Zz1udWxsIT1mP2ZbaF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoaCkmJmwhPT1nJiYobnVsbCE9bHx8bnVsbCE9ZykpaWYoXCJzdHlsZVwiPT09aClpZihnKXtmb3IoayBpbiBnKSFnLmhhc093blByb3BlcnR5KGspfHxsJiZsLmhhc093blByb3BlcnR5KGspfHwoY3x8KGM9e30pLGNba109XCJcIik7Zm9yKGsgaW4gbClsLmhhc093blByb3BlcnR5KGspJiZnW2tdIT09bFtrXSYmKGN8fChjPXt9KSxcbmNba109bFtrXSl9ZWxzZSBjfHwoYXx8KGE9W10pLGEucHVzaChoLGMpKSxjPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGw9bD9sLl9faHRtbDp2b2lkIDAsZz1nP2cuX19odG1sOnZvaWQgMCxudWxsIT1sJiZnIT09bCYmKGE9YXx8W10pLnB1c2goaCxsKSk6XCJjaGlsZHJlblwiPT09aD9nPT09bHx8XCJzdHJpbmdcIiE9PXR5cGVvZiBsJiZcIm51bWJlclwiIT09dHlwZW9mIGx8fChhPWF8fFtdKS5wdXNoKGgsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJih2YS5oYXNPd25Qcm9wZXJ0eShoKT8obnVsbCE9bCYmcmQoZSxoKSxhfHxnPT09bHx8KGE9W10pKTooYT1hfHxbXSkucHVzaChoLGwpKX1jJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsYyk7ZT1hO2lmKGIudXBkYXRlUXVldWU9ZSliLmVmZmVjdFRhZ3w9NH19O1xucWk9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmVmZmVjdFRhZ3w9NCl9O2Z1bmN0aW9uIHJpKGEsYil7c3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIHNpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAzOnJldHVybiBlaCgpLEgoSyksSChKKSxjPWIuc3RhdGVOb2RlLGMucGVuZGluZ0NvbnRleHQmJihjLmNvbnRleHQ9Yy5wZW5kaW5nQ29udGV4dCxjLnBlbmRpbmdDb250ZXh0PW51bGwpLG51bGwhPT1hJiZudWxsIT09YS5jaGlsZHx8IVdoKGIpfHwoYi5lZmZlY3RUYWd8PTQpLG9pKGIpLG51bGw7Y2FzZSA1OmdoKGIpO2M9Y2goYmguY3VycmVudCk7dmFyIGU9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlwaShhLGIsZSxkLGMpLGEucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KTtlbHNle2lmKCFkKXtpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbnJldHVybiBudWxsfWE9Y2goJGcuY3VycmVudCk7aWYoV2goYikpe2Q9Yi5zdGF0ZU5vZGU7ZT1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2RbTWRdPWI7ZFtOZF09Zjtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihhPTA7YTxhYy5sZW5ndGg7YSsrKUYoYWNbYV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGQpO0YoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixkKTtGKFwic3VibWl0XCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoZCxmKTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoZCxmKSxGKFwiaW52YWxpZFwiLGQpLHJkKGMsXCJvbkNoYW5nZVwiKX1vZChlLGYpO2E9bnVsbDtmb3IodmFyIGcgaW4gZilpZihmLmhhc093blByb3BlcnR5KGcpKXt2YXIgaD1mW2ddO1wiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBoP2QudGV4dENvbnRlbnQhPT1oJiYoYT1bXCJjaGlsZHJlblwiLGhdKTpcIm51bWJlclwiPT09dHlwZW9mIGgmJmQudGV4dENvbnRlbnQhPT1cIlwiK2gmJihhPVtcImNoaWxkcmVuXCIsXCJcIitoXSk6dmEuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWgmJnJkKGMsZyl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGQpO0ViKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoZCk7TGIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJlxuKGQub25jbGljaz1zZCl9Yz1hO2IudXBkYXRlUXVldWU9YztudWxsIT09YyYmKGIuZWZmZWN0VGFnfD00KX1lbHNle2c9OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7YT09PXFkJiYoYT1OYihlKSk7YT09PXFkP1wic2NyaXB0XCI9PT1lPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoZSx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsZSk7YVtNZF09YjthW05kXT1kO25pKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXBkKGUsZCk7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixcbmEpO2g9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWMubGVuZ3RoO2grKylGKGFjW2hdLGEpO2g9ZDticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGEpO0YoXCJsb2FkXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsYSk7RihcInN1Ym1pdFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoYSxkKTtoPXpiKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9R2IoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2g9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihhLFxuZCk7aD1JYihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1kfW9kKGUsaCk7dmFyIGs9aDtmb3IoZiBpbiBrKWlmKGsuaGFzT3duUHJvcGVydHkoZikpe3ZhciBsPWtbZl07XCJzdHlsZVwiPT09Zj9tZChhLGwpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmUWIoYSxsKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/KFwidGV4dGFyZWFcIiE9PWV8fFwiXCIhPT1sKSYmUmIoYSxsKTpcIm51bWJlclwiPT09dHlwZW9mIGwmJlJiKGEsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYodmEuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9bCYmcmQoYyxmKTpudWxsIT1sJiZYYShhLGYsbCxnKSl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGEpO0ViKGEsZCwhMSk7XG5icmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihhKTtMYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrcmIoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtjPWQudmFsdWU7bnVsbCE9Yz9IYihhLCEhZC5tdWx0aXBsZSxjLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmSGIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKGEub25jbGljaz1zZCl9RmQoZSxkKSYmKGIuZWZmZWN0VGFnfD00KX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5jPWNoKGJoLmN1cnJlbnQpO2NoKCRnLmN1cnJlbnQpO1doKGIpPyhjPWIuc3RhdGVOb2RlLGQ9Yi5tZW1vaXplZFByb3BzLGNbTWRdPWIsYy5ub2RlVmFsdWUhPT1kJiYoYi5lZmZlY3RUYWd8PTQpKTooYz0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGNbTWRdPWIsYi5zdGF0ZU5vZGU9Yyl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWMsYjtjPW51bGwhPT1kO2Q9ITE7bnVsbD09PWE/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZXaChiKTooZT1hLm1lbW9pemVkU3RhdGUsZD1udWxsIT09ZSxjfHxudWxsPT09ZXx8KGU9YS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoZj1iLmZpcnN0RWZmZWN0LG51bGwhPT1mPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWYpOihiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1cbmUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKSk7aWYoYyYmIWQmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1hJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShNLmN1cnJlbnQmMSkpUz09PXRpJiYoUz11aSk7ZWxzZXtpZihTPT09dGl8fFM9PT11aSlTPXZpOzAhPT13aSYmbnVsbCE9PVQmJih4aShULFUpLHlpKFQsd2kpKX1pZihjfHxkKWIuZWZmZWN0VGFnfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxvaShiKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAxOTpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2U9MCE9PShiLmVmZmVjdFRhZyY2NCk7Zj1kLnJlbmRlcmluZztpZihudWxsPT09ZilpZihlKXJpKGQsITEpO2Vsc2V7aWYoUyE9PXRpfHxudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyZcbjY0KSlmb3IoZj1iLmNoaWxkO251bGwhPT1mOyl7YT1oaChmKTtpZihudWxsIT09YSl7Yi5lZmZlY3RUYWd8PTY0O3JpKGQsITEpO2U9YS51cGRhdGVRdWV1ZTtudWxsIT09ZSYmKGIudXBkYXRlUXVldWU9ZSxiLmVmZmVjdFRhZ3w9NCk7bnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtmb3IoZD1iLmNoaWxkO251bGwhPT1kOyllPWQsZj1jLGUuZWZmZWN0VGFnJj0yLGUubmV4dEVmZmVjdD1udWxsLGUuZmlyc3RFZmZlY3Q9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCxhPWUuYWx0ZXJuYXRlLG51bGw9PT1hPyhlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxlLmV4cGlyYXRpb25UaW1lPWYsZS5jaGlsZD1udWxsLGUubWVtb2l6ZWRQcm9wcz1udWxsLGUubWVtb2l6ZWRTdGF0ZT1udWxsLGUudXBkYXRlUXVldWU9bnVsbCxlLmRlcGVuZGVuY2llcz1udWxsKTooZS5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZSxcbmUuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSxlLmNoaWxkPWEuY2hpbGQsZS5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcyxlLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlLGUudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxmPWEuZGVwZW5kZW5jaWVzLGUuZGVwZW5kZW5jaWVzPW51bGw9PT1mP251bGw6e2V4cGlyYXRpb25UaW1lOmYuZXhwaXJhdGlvblRpbWUsZmlyc3RDb250ZXh0OmYuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Zi5yZXNwb25kZXJzfSksZD1kLnNpYmxpbmc7SShNLE0uY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWY9Zi5zaWJsaW5nfX1lbHNle2lmKCFlKWlmKGE9aGgoZiksbnVsbCE9PWEpe2lmKGIuZWZmZWN0VGFnfD02NCxlPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmVmZmVjdFRhZ3w9NCkscmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFmLmFsdGVybmF0ZSlyZXR1cm4gYj1cbmIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqJGYoKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5kLnRhaWxFeHBpcmF0aW9uJiYxPGMmJihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxyaShkLCExKSxiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT1jLTEpO2QuaXNCYWNrd2FyZHM/KGYuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zik6KGM9ZC5sYXN0LG51bGwhPT1jP2Muc2libGluZz1mOmIuY2hpbGQ9ZixkLmxhc3Q9Zil9cmV0dXJuIG51bGwhPT1kLnRhaWw/KDA9PT1kLnRhaWxFeHBpcmF0aW9uJiYoZC50YWlsRXhwaXJhdGlvbj0kZigpKzUwMCksYz1kLnRhaWwsZC5yZW5kZXJpbmc9YyxkLnRhaWw9Yy5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9JGYoKSxjLnNpYmxpbmc9bnVsbCxiPU0uY3VycmVudCxJKE0sZT9iJjF8MjpiJjEpLGMpOm51bGx9dGhyb3cgRXJyb3IodSgxNTYsXG5iLnRhZykpO31mdW5jdGlvbiB6aShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpMKGEudHlwZSkmJkRmKCk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzplaCgpO0goSyk7SChKKTtiPWEuZWZmZWN0VGFnO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IodSgyODUpKTthLmVmZmVjdFRhZz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gZ2goYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKE0pLGI9YS5lZmZlY3RUYWcsYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gSChNKSxudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19ZnVuY3Rpb24gQWkoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpxYihiKX19XG52YXIgQmk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gQ2koYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1xYihjKSk7bnVsbCE9PWMmJnBiKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJnBiKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIERpKGEsYil7dHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChjKXtFaShhLGMpfX1mdW5jdGlvbiBGaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtFaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBHaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzppZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBIaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmRlc3Ryb3k7Yy5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1kJiZkKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1mdW5jdGlvbiBJaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmNyZWF0ZTtjLmRlc3Ryb3k9ZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19XG5mdW5jdGlvbiBKaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SWkoMyxjKTtyZXR1cm47Y2FzZSAxOmE9Yy5zdGF0ZU5vZGU7aWYoYy5lZmZlY3RUYWcmNClpZihudWxsPT09YilhLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczppZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKTthLmNvbXBvbmVudERpZFVwZGF0ZShkLGIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX1iPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJkNnKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9Yy5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9Q2coYyxiLGEpfXJldHVybjtcbmNhc2UgNTphPWMuc3RhdGVOb2RlO251bGw9PT1iJiZjLmVmZmVjdFRhZyY0JiZGZChjLnR5cGUsYy5tZW1vaXplZFByb3BzKSYmYS5mb2N1cygpO3JldHVybjtjYXNlIDY6cmV0dXJuO2Nhc2UgNDpyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsPT09Yy5tZW1vaXplZFN0YXRlJiYoYz1jLmFsdGVybmF0ZSxudWxsIT09YyYmKGM9Yy5tZW1vaXplZFN0YXRlLG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbCE9PWMmJlZjKGMpKSkpO3JldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEtpKGEsYixjKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgTGkmJkxpKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgZD1hLm5leHQ7Y2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGE9ZDtkb3t2YXIgYz1hLmRlc3Ryb3k7aWYodm9pZCAwIT09Yyl7dmFyIGc9Yjt0cnl7YygpfWNhdGNoKGgpe0VpKGcsaCl9fWE9YS5uZXh0fXdoaWxlKGEhPT1kKX0pfWJyZWFrO2Nhc2UgMTpGaShiKTtjPWIuc3RhdGVOb2RlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmNvbXBvbmVudFdpbGxVbm1vdW50JiZEaShiLGMpO2JyZWFrO2Nhc2UgNTpGaShiKTticmVhaztjYXNlIDQ6TWkoYSxiLGMpfX1cbmZ1bmN0aW9uIE5pKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2EucmV0dXJuPW51bGw7YS5jaGlsZD1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EudXBkYXRlUXVldWU9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuYWx0ZXJuYXRlPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDtudWxsIT09YiYmTmkoYil9ZnVuY3Rpb24gT2koYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBQaShhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihPaShiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dGhyb3cgRXJyb3IodSgxNjApKTt9Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYxKSk7fWMuZWZmZWN0VGFnJjE2JiYoUmIoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fE9pKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtcbmlmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19ZD9RaShhLGMsYik6UmkoYSxjLGIpfVxuZnVuY3Rpb24gUWkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPXNkKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFFpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUWkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gUmkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihSaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVJpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIE1pKGEsYixjKXtmb3IodmFyIGQ9YixlPSExLGYsZzs7KXtpZighZSl7ZT1kLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IodSgxNjApKTtmPWUuc3RhdGVOb2RlO3N3aXRjaChlLnRhZyl7Y2FzZSA1Omc9ITE7YnJlYWsgYTtjYXNlIDM6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhO2Nhc2UgNDpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGF9ZT1lLnJldHVybn1lPSEwfWlmKDU9PT1kLnRhZ3x8Nj09PWQudGFnKXthOmZvcih2YXIgaD1hLGs9ZCxsPWMsbT1rOzspaWYoS2koaCxtLGwpLG51bGwhPT1tLmNoaWxkJiY0IT09bS50YWcpbS5jaGlsZC5yZXR1cm49bSxtPW0uY2hpbGQ7ZWxzZXtpZihtPT09aylicmVhayBhO2Zvcig7bnVsbD09PW0uc2libGluZzspe2lmKG51bGw9PT1tLnJldHVybnx8bS5yZXR1cm49PT1rKWJyZWFrIGE7bT1tLnJldHVybn1tLnNpYmxpbmcucmV0dXJuPW0ucmV0dXJuO209bS5zaWJsaW5nfWc/KGg9XG5mLGs9ZC5zdGF0ZU5vZGUsOD09PWgubm9kZVR5cGU/aC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGspOmgucmVtb3ZlQ2hpbGQoaykpOmYucmVtb3ZlQ2hpbGQoZC5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWQudGFnKXtpZihudWxsIT09ZC5jaGlsZCl7Zj1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoS2koYSxkLGMpLG51bGwhPT1kLmNoaWxkKXtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX1pZihkPT09YilicmVhaztmb3IoO251bGw9PT1kLnNpYmxpbmc7KXtpZihudWxsPT09ZC5yZXR1cm58fGQucmV0dXJuPT09YilyZXR1cm47ZD1kLnJldHVybjs0PT09ZC50YWcmJihlPSExKX1kLnNpYmxpbmcucmV0dXJuPWQucmV0dXJuO2Q9ZC5zaWJsaW5nfX1cbmZ1bmN0aW9uIFNpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjpIaSgzLGIpO3JldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHMsZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1tOZF09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmQmIoYyxkKTtwZChhLGUpO2I9cGQoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9Mil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP21kKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9RYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/UmIoYyxoKTpYYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6Q2IoYyxkKTticmVhaztcbmNhc2UgXCJ0ZXh0YXJlYVwiOktiKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsYT1kLnZhbHVlLG51bGwhPWE/SGIoYywhIWQubXVsdGlwbGUsYSwhMSk6YiE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP0hiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpIYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmI9Yi5zdGF0ZU5vZGU7Yi5oeWRyYXRlJiYoYi5oeWRyYXRlPSExLFZjKGIuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOmM9YjtudWxsPT09Yi5tZW1vaXplZFN0YXRlP1xuZD0hMTooZD0hMCxjPWIuY2hpbGQsVGk9JGYoKSk7aWYobnVsbCE9PWMpYTpmb3IoYT1jOzspe2lmKDU9PT1hLnRhZylmPWEuc3RhdGVOb2RlLGQ/KGY9Zi5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGY9YS5zdGF0ZU5vZGUsZT1hLm1lbW9pemVkUHJvcHMuc3R5bGUsZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGwsZi5zdHlsZS5kaXNwbGF5PWxkKFwiZGlzcGxheVwiLGUpKTtlbHNlIGlmKDY9PT1hLnRhZylhLnN0YXRlTm9kZS5ub2RlVmFsdWU9ZD9cIlwiOmEubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09YS50YWcmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUmJm51bGw9PT1hLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7Zj1hLmNoaWxkLnNpYmxpbmc7Zi5yZXR1cm49YTthPVxuZjtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YylicmVhaztmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YylicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31VaShiKTtyZXR1cm47Y2FzZSAxOTpVaShiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9ZnVuY3Rpb24gVWkoYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgQmkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1WaS5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbnZhciBXaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBYaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1lpfHwoWWk9ITAsWmk9ZCk7Q2koYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiAkaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtDaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09YWo/YWo9bmV3IFNldChbdGhpc10pOmFqLmFkZCh0aGlzKSxDaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbnZhciBiaj1NYXRoLmNlaWwsY2o9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixkaj1XYS5SZWFjdEN1cnJlbnRPd25lcixWPTAsZWo9OCxmaj0xNixnaj0zMix0aT0wLGhqPTEsaWo9Mix1aT0zLHZpPTQsamo9NSxXPVYsVD1udWxsLFg9bnVsbCxVPTAsUz10aSxraj1udWxsLGxqPTEwNzM3NDE4MjMsbWo9MTA3Mzc0MTgyMyxuaj1udWxsLHdpPTAsb2o9ITEsVGk9MCxwaj01MDAsWT1udWxsLFlpPSExLFppPW51bGwsYWo9bnVsbCxxaj0hMSxyaj1udWxsLHNqPTkwLHRqPW51bGwsdWo9MCx2aj1udWxsLHdqPTA7ZnVuY3Rpb24gR2coKXtyZXR1cm4oVyYoZmp8Z2opKSE9PVY/MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKTowIT09d2o/d2o6d2o9MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKX1cbmZ1bmN0aW9uIEhnKGEsYixjKXtiPWIubW9kZTtpZigwPT09KGImMikpcmV0dXJuIDEwNzM3NDE4MjM7dmFyIGQ9YWcoKTtpZigwPT09KGImNCkpcmV0dXJuIDk5PT09ZD8xMDczNzQxODIzOjEwNzM3NDE4MjI7aWYoKFcmZmopIT09VilyZXR1cm4gVTtpZihudWxsIT09YylhPWhnKGEsYy50aW1lb3V0TXN8MHx8NUUzLDI1MCk7ZWxzZSBzd2l0Y2goZCl7Y2FzZSA5OTphPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA5ODphPWhnKGEsMTUwLDEwMCk7YnJlYWs7Y2FzZSA5NzpjYXNlIDk2OmE9aGcoYSw1RTMsMjUwKTticmVhaztjYXNlIDk1OmE9MjticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI2KSk7fW51bGwhPT1UJiZhPT09VSYmLS1hO3JldHVybiBhfVxuZnVuY3Rpb24gSWcoYSxiKXtpZig1MDx1ail0aHJvdyB1aj0wLHZqPW51bGwsRXJyb3IodSgxODUpKTthPXhqKGEsYik7aWYobnVsbCE9PWEpe3ZhciBjPWFnKCk7MTA3Mzc0MTgyMz09PWI/KFcmZWopIT09ViYmKFcmKGZqfGdqKSk9PT1WP3lqKGEpOihaKGEpLFc9PT1WJiZnZygpKTpaKGEpOyhXJjQpPT09Vnx8OTghPT1jJiY5OSE9PWN8fChudWxsPT09dGo/dGo9bmV3IE1hcChbW2EsYl1dKTooYz10ai5nZXQoYSksKHZvaWQgMD09PWN8fGM+YikmJnRqLnNldChhLGIpKSl9fVxuZnVuY3Rpb24geGooYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1udWxsIT09ZSYmKFQ9PT1lJiYoQmcoYiksUz09PXZpJiZ4aShlLFUpKSx5aShlLGIpKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIHpqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2lmKDAhPT1iKXJldHVybiBiO2I9YS5maXJzdFBlbmRpbmdUaW1lO2lmKCFBaihhLGIpKXJldHVybiBiO3ZhciBjPWEubGFzdFBpbmdlZFRpbWU7YT1hLm5leHRLbm93blBlbmRpbmdMZXZlbDthPWM+YT9jOmE7cmV0dXJuIDI+PWEmJmIhPT1hPzA6YX1cbmZ1bmN0aW9uIFooYSl7aWYoMCE9PWEubGFzdEV4cGlyZWRUaW1lKWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0xMDczNzQxODIzLGEuY2FsbGJhY2tQcmlvcml0eT05OSxhLmNhbGxiYWNrTm9kZT1lZyh5ai5iaW5kKG51bGwsYSkpO2Vsc2V7dmFyIGI9emooYSksYz1hLmNhbGxiYWNrTm9kZTtpZigwPT09YiludWxsIT09YyYmKGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTAsYS5jYWxsYmFja1ByaW9yaXR5PTkwKTtlbHNle3ZhciBkPUdnKCk7MTA3Mzc0MTgyMz09PWI/ZD05OToxPT09Ynx8Mj09PWI/ZD05NTooZD0xMCooMTA3Mzc0MTgyMS1iKS0xMCooMTA3Mzc0MTgyMS1kKSxkPTA+PWQ/OTk6MjUwPj1kPzk4OjUyNTA+PWQ/OTc6OTUpO2lmKG51bGwhPT1jKXt2YXIgZT1hLmNhbGxiYWNrUHJpb3JpdHk7aWYoYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPT09YiYmZT49ZClyZXR1cm47YyE9PVRmJiZLZihjKX1hLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9XG5iO2EuY2FsbGJhY2tQcmlvcml0eT1kO2I9MTA3Mzc0MTgyMz09PWI/ZWcoeWouYmluZChudWxsLGEpKTpkZyhkLEJqLmJpbmQobnVsbCxhKSx7dGltZW91dDoxMCooMTA3Mzc0MTgyMS1iKS0kZigpfSk7YS5jYWxsYmFja05vZGU9Yn19fVxuZnVuY3Rpb24gQmooYSxiKXt3aj0wO2lmKGIpcmV0dXJuIGI9R2coKSxDaihhLGIpLFooYSksbnVsbDt2YXIgYz16aihhKTtpZigwIT09Yyl7Yj1hLmNhbGxiYWNrTm9kZTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZjPT09VXx8RWooYSxjKTtpZihudWxsIT09WCl7dmFyIGQ9VztXfD1majt2YXIgZT1GaigpO2RvIHRyeXtHaigpO2JyZWFrfWNhdGNoKGgpe0hqKGEsaCl9d2hpbGUoMSk7bmcoKTtXPWQ7Y2ouY3VycmVudD1lO2lmKFM9PT1oail0aHJvdyBiPWtqLEVqKGEsYykseGkoYSxjKSxaKGEpLGI7aWYobnVsbD09PVgpc3dpdGNoKGU9YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZSxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YyxkPVMsVD1udWxsLGQpe2Nhc2UgdGk6Y2FzZSBoajp0aHJvdyBFcnJvcih1KDM0NSkpO2Nhc2UgaWo6Q2ooYSwyPGM/MjpjKTticmVhaztjYXNlIHVpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO1xuYz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYoMTA3Mzc0MTgyMz09PWxqJiYoZT1UaStwai0kZigpLDEwPGUpKXtpZihvail7dmFyIGY9YS5sYXN0UGluZ2VkVGltZTtpZigwPT09Znx8Zj49Yyl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9fWY9emooYSk7aWYoMCE9PWYmJmYhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1kO2JyZWFrfWEudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZSk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSB2aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtjPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZihvaiYmKGU9YS5sYXN0UGluZ2VkVGltZSwwPT09ZXx8ZT49Yykpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfWU9emooYSk7aWYoMCE9PWUmJmUhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1cbmQ7YnJlYWt9MTA3Mzc0MTgyMyE9PW1qP2Q9MTAqKDEwNzM3NDE4MjEtbWopLSRmKCk6MTA3Mzc0MTgyMz09PWxqP2Q9MDooZD0xMCooMTA3Mzc0MTgyMS1saiktNUUzLGU9JGYoKSxjPTEwKigxMDczNzQxODIxLWMpLWUsZD1lLWQsMD5kJiYoZD0wKSxkPSgxMjA+ZD8xMjA6NDgwPmQ/NDgwOjEwODA+ZD8xMDgwOjE5MjA+ZD8xOTIwOjNFMz5kPzNFMzo0MzIwPmQ/NDMyMDoxOTYwKmJqKGQvMTk2MCkpLWQsYzxkJiYoZD1jKSk7aWYoMTA8ZCl7YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha31KaihhKTticmVhaztjYXNlIGpqOmlmKDEwNzM3NDE4MjMhPT1saiYmbnVsbCE9PW5qKXtmPWxqO3ZhciBnPW5qO2Q9Zy5idXN5TWluRHVyYXRpb25Nc3wwOzA+PWQ/ZD0wOihlPWcuYnVzeURlbGF5TXN8MCxmPSRmKCktKDEwKigxMDczNzQxODIxLWYpLShnLnRpbWVvdXRNc3wwfHw1RTMpKSxkPWY8PWU/MDplK2QtZik7aWYoMTA8ZCl7eGkoYSxjKTthLnRpbWVvdXRIYW5kbGU9XG5IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9fUpqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjkpKTt9WihhKTtpZihhLmNhbGxiYWNrTm9kZT09PWIpcmV0dXJuIEJqLmJpbmQobnVsbCxhKX19cmV0dXJuIG51bGx9XG5mdW5jdGlvbiB5aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtiPTAhPT1iP2I6MTA3Mzc0MTgyMztpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZiPT09VXx8RWooYSxiKTtpZihudWxsIT09WCl7dmFyIGM9VztXfD1majt2YXIgZD1GaigpO2RvIHRyeXtLaigpO2JyZWFrfWNhdGNoKGUpe0hqKGEsZSl9d2hpbGUoMSk7bmcoKTtXPWM7Y2ouY3VycmVudD1kO2lmKFM9PT1oail0aHJvdyBjPWtqLEVqKGEsYikseGkoYSxiKSxaKGEpLGM7aWYobnVsbCE9PVgpdGhyb3cgRXJyb3IodSgyNjEpKTthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1iO1Q9bnVsbDtKaihhKTtaKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIExqKCl7aWYobnVsbCE9PXRqKXt2YXIgYT10ajt0aj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhLGMpe0NqKGMsYSk7WihjKX0pO2dnKCl9fVxuZnVuY3Rpb24gTWooYSxiKXt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1mdW5jdGlvbiBOaihhLGIpe3ZhciBjPVc7VyY9LTI7V3w9ZWo7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1cbmZ1bmN0aW9uIEVqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLElkKGMpKTtpZihudWxsIT09WClmb3IoYz1YLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkRmKCk7YnJlYWs7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2JyZWFrO2Nhc2UgNTpnaChkKTticmVhaztjYXNlIDQ6ZWgoKTticmVhaztjYXNlIDEzOkgoTSk7YnJlYWs7Y2FzZSAxOTpIKE0pO2JyZWFrO2Nhc2UgMTA6b2coZCl9Yz1jLnJldHVybn1UPWE7WD1TZyhhLmN1cnJlbnQsbnVsbCk7VT1iO1M9dGk7a2o9bnVsbDttaj1saj0xMDczNzQxODIzO25qPW51bGw7d2k9MDtvaj0hMX1cbmZ1bmN0aW9uIEhqKGEsYil7ZG97dHJ5e25nKCk7amguY3VycmVudD1zaDtpZihtaClmb3IodmFyIGM9Ti5tZW1vaXplZFN0YXRlO251bGwhPT1jOyl7dmFyIGQ9Yy5xdWV1ZTtudWxsIT09ZCYmKGQucGVuZGluZz1udWxsKTtjPWMubmV4dH1saD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYobnVsbD09PVh8fG51bGw9PT1YLnJldHVybilyZXR1cm4gUz1oaixraj1iLFg9bnVsbDthOnt2YXIgZT1hLGY9WC5yZXR1cm4sZz1YLGg9YjtiPVU7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5maXJzdEVmZmVjdD1nLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09aCYmXCJvYmplY3RcIj09PXR5cGVvZiBoJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC50aGVuKXt2YXIgaz1oO2lmKDA9PT0oZy5tb2RlJjIpKXt2YXIgbD1nLmFsdGVybmF0ZTtsPyhnLnVwZGF0ZVF1ZXVlPWwudXBkYXRlUXVldWUsZy5tZW1vaXplZFN0YXRlPWwubWVtb2l6ZWRTdGF0ZSxnLmV4cGlyYXRpb25UaW1lPWwuZXhwaXJhdGlvblRpbWUpOihnLnVwZGF0ZVF1ZXVlPVxubnVsbCxnLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIG09MCE9PShNLmN1cnJlbnQmMSkscD1mO2Rve3ZhciB4O2lmKHg9MTM9PT1wLnRhZyl7dmFyIHo9cC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT16KXg9bnVsbCE9PXouZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciBjYT1wLm1lbW9pemVkUHJvcHM7eD12b2lkIDA9PT1jYS5mYWxsYmFjaz8hMTohMCE9PWNhLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOm0/ITE6ITB9fWlmKHgpe3ZhciBEPXAudXBkYXRlUXVldWU7aWYobnVsbD09PUQpe3ZhciB0PW5ldyBTZXQ7dC5hZGQoayk7cC51cGRhdGVRdWV1ZT10fWVsc2UgRC5hZGQoayk7aWYoMD09PShwLm1vZGUmMikpe3AuZWZmZWN0VGFnfD02NDtnLmVmZmVjdFRhZyY9LTI5ODE7aWYoMT09PWcudGFnKWlmKG51bGw9PT1nLmFsdGVybmF0ZSlnLnRhZz0xNztlbHNle3ZhciB5PXdnKDEwNzM3NDE4MjMsbnVsbCk7eS50YWc9Mjt4ZyhnLHkpfWcuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztcbmJyZWFrIGF9aD12b2lkIDA7Zz1iO3ZhciBBPWUucGluZ0NhY2hlO251bGw9PT1BPyhBPWUucGluZ0NhY2hlPW5ldyBXaSxoPW5ldyBTZXQsQS5zZXQoayxoKSk6KGg9QS5nZXQoayksdm9pZCAwPT09aCYmKGg9bmV3IFNldCxBLnNldChrLGgpKSk7aWYoIWguaGFzKGcpKXtoLmFkZChnKTt2YXIgcT1Pai5iaW5kKG51bGwsZSxrLGcpO2sudGhlbihxLHEpfXAuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2g9RXJyb3IoKHBiKGcudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitxYihnKSl9UyE9PVxuamomJihTPWlqKTtoPUFpKGgsZyk7cD1mO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOms9aDtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIEI9WGkocCxrLGIpO3lnKHAsQik7YnJlYWsgYTtjYXNlIDE6az1oO3ZhciB3PXAudHlwZSx1Yj1wLnN0YXRlTm9kZTtpZigwPT09KHAuZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXViJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgdWIuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXModWIpKSkpe3AuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9Yjt2YXIgdmI9JGkocCxrLGIpO3lnKHAsdmIpO2JyZWFrIGF9fXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApfVg9UGooWCl9Y2F0Y2goWGMpe2I9WGM7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9XG5mdW5jdGlvbiBGaigpe3ZhciBhPWNqLmN1cnJlbnQ7Y2ouY3VycmVudD1zaDtyZXR1cm4gbnVsbD09PWE/c2g6YX1mdW5jdGlvbiBBZyhhLGIpe2E8bGomJjI8YSYmKGxqPWEpO251bGwhPT1iJiZhPG1qJiYyPGEmJihtaj1hLG5qPWIpfWZ1bmN0aW9uIEJnKGEpe2E+d2kmJih3aT1hKX1mdW5jdGlvbiBLaigpe2Zvcig7bnVsbCE9PVg7KVg9UWooWCl9ZnVuY3Rpb24gR2ooKXtmb3IoO251bGwhPT1YJiYhVWYoKTspWD1RaihYKX1mdW5jdGlvbiBRaihhKXt2YXIgYj1SaihhLmFsdGVybmF0ZSxhLFUpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9UGooYSkpO2RqLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIFBqKGEpe1g9YTtkb3t2YXIgYj1YLmFsdGVybmF0ZTthPVgucmV0dXJuO2lmKDA9PT0oWC5lZmZlY3RUYWcmMjA0OCkpe2I9c2koYixYLFUpO2lmKDE9PT1VfHwxIT09WC5jaGlsZEV4cGlyYXRpb25UaW1lKXtmb3IodmFyIGM9MCxkPVguY2hpbGQ7bnVsbCE9PWQ7KXt2YXIgZT1kLmV4cGlyYXRpb25UaW1lLGY9ZC5jaGlsZEV4cGlyYXRpb25UaW1lO2U+YyYmKGM9ZSk7Zj5jJiYoYz1mKTtkPWQuc2libGluZ31YLmNoaWxkRXhwaXJhdGlvblRpbWU9Y31pZihudWxsIT09YilyZXR1cm4gYjtudWxsIT09YSYmMD09PShhLmVmZmVjdFRhZyYyMDQ4KSYmKG51bGw9PT1hLmZpcnN0RWZmZWN0JiYoYS5maXJzdEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxudWxsIT09WC5sYXN0RWZmZWN0JiYobnVsbCE9PWEubGFzdEVmZmVjdCYmKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVguZmlyc3RFZmZlY3QpLGEubGFzdEVmZmVjdD1YLmxhc3RFZmZlY3QpLDE8WC5lZmZlY3RUYWcmJihudWxsIT09XG5hLmxhc3RFZmZlY3Q/YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WDphLmZpcnN0RWZmZWN0PVgsYS5sYXN0RWZmZWN0PVgpKX1lbHNle2I9emkoWCk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZWZmZWN0VGFnJj0yMDQ3LGI7bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZWZmZWN0VGFnfD0yMDQ4KX1iPVguc2libGluZztpZihudWxsIT09YilyZXR1cm4gYjtYPWF9d2hpbGUobnVsbCE9PVgpO1M9PT10aSYmKFM9amopO3JldHVybiBudWxsfWZ1bmN0aW9uIElqKGEpe3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7YT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7cmV0dXJuIGI+YT9iOmF9ZnVuY3Rpb24gSmooYSl7dmFyIGI9YWcoKTtjZyg5OSxTai5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBTaihhLGIpe2RvIERqKCk7d2hpbGUobnVsbCE9PXJqKTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTt2YXIgYz1hLmZpbmlzaGVkV29yayxkPWEuZmluaXNoZWRFeHBpcmF0aW9uVGltZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IodSgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO2EuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wO2EuY2FsbGJhY2tQcmlvcml0eT05MDthLm5leHRLbm93blBlbmRpbmdMZXZlbD0wO3ZhciBlPUlqKGMpO2EuZmlyc3RQZW5kaW5nVGltZT1lO2Q8PWEubGFzdFN1c3BlbmRlZFRpbWU/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmQ8PWEuZmlyc3RTdXNwZW5kZWRUaW1lJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9XG5kLTEpO2Q8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2Q8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCk7YT09PVQmJihYPVQ9bnVsbCxVPTApOzE8Yy5lZmZlY3RUYWc/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxlPWMuZmlyc3RFZmZlY3QpOmU9YzplPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWUpe3ZhciBmPVc7V3w9Z2o7ZGouY3VycmVudD1udWxsO0RkPWZkO3ZhciBnPXhkKCk7aWYoeWQoZykpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGcpdmFyIGg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2g9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBrPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpO2lmKGsmJjAhPT1rLnJhbmdlQ291bnQpe2g9ay5hbmNob3JOb2RlO3ZhciBsPWsuYW5jaG9yT2Zmc2V0LFxubT1rLmZvY3VzTm9kZTtrPWsuZm9jdXNPZmZzZXQ7dHJ5e2gubm9kZVR5cGUsbS5ub2RlVHlwZX1jYXRjaCh3Yil7aD1udWxsO2JyZWFrIGF9dmFyIHA9MCx4PS0xLHo9LTEsY2E9MCxEPTAsdD1nLHk9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciBBOzspe3QhPT1ofHwwIT09bCYmMyE9PXQubm9kZVR5cGV8fCh4PXArbCk7dCE9PW18fDAhPT1rJiYzIT09dC5ub2RlVHlwZXx8KHo9cCtrKTszPT09dC5ub2RlVHlwZSYmKHArPXQubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PShBPXQuZmlyc3RDaGlsZCkpYnJlYWs7eT10O3Q9QX1mb3IoOzspe2lmKHQ9PT1nKWJyZWFrIGI7eT09PWgmJisrY2E9PT1sJiYoeD1wKTt5PT09bSYmKytEPT09ayYmKHo9cCk7aWYobnVsbCE9PShBPXQubmV4dFNpYmxpbmcpKWJyZWFrO3Q9eTt5PXQucGFyZW50Tm9kZX10PUF9aD0tMT09PXh8fC0xPT09ej9udWxsOntzdGFydDp4LGVuZDp6fX1lbHNlIGg9bnVsbH1oPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9XG5udWxsO0VkPXthY3RpdmVFbGVtZW50RGV0YWNoZWQ6bnVsbCxmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO1k9ZTtkbyB0cnl7VGooKX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1lO2RvIHRyeXtmb3IoZz1hLGg9YjtudWxsIT09WTspe3ZhciBxPVkuZWZmZWN0VGFnO3EmMTYmJlJiKFkuc3RhdGVOb2RlLFwiXCIpO2lmKHEmMTI4KXt2YXIgQj1ZLmFsdGVybmF0ZTtpZihudWxsIT09Qil7dmFyIHc9Qi5yZWY7bnVsbCE9PXcmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdz93KG51bGwpOncuY3VycmVudD1udWxsKX19c3dpdGNoKHEmMTAzOCl7Y2FzZSAyOlBpKFkpO1kuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6UGkoWSk7WS5lZmZlY3RUYWcmPS0zO1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgMTAyNDpZLmVmZmVjdFRhZyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlkuZWZmZWN0VGFnJj1cbi0xMDI1O1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgNDpTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDg6bD1ZLE1pKGcsbCxoKSxOaShsKX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO3c9RWQ7Qj14ZCgpO3E9dy5mb2N1c2VkRWxlbTtoPXcuc2VsZWN0aW9uUmFuZ2U7aWYoQiE9PXEmJnEmJnEub3duZXJEb2N1bWVudCYmd2QocS5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxxKSl7bnVsbCE9PWgmJnlkKHEpJiYoQj1oLnN0YXJ0LHc9aC5lbmQsdm9pZCAwPT09dyYmKHc9QiksXCJzZWxlY3Rpb25TdGFydFwiaW4gcT8ocS5zZWxlY3Rpb25TdGFydD1CLHEuc2VsZWN0aW9uRW5kPU1hdGgubWluKHcscS52YWx1ZS5sZW5ndGgpKToodz0oQj1xLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmQi5kZWZhdWx0Vmlld3x8d2luZG93LHcuZ2V0U2VsZWN0aW9uJiZcbih3PXcuZ2V0U2VsZWN0aW9uKCksbD1xLnRleHRDb250ZW50Lmxlbmd0aCxnPU1hdGgubWluKGguc3RhcnQsbCksaD12b2lkIDA9PT1oLmVuZD9nOk1hdGgubWluKGguZW5kLGwpLCF3LmV4dGVuZCYmZz5oJiYobD1oLGg9ZyxnPWwpLGw9dmQocSxnKSxtPXZkKHEsaCksbCYmbSYmKDEhPT13LnJhbmdlQ291bnR8fHcuYW5jaG9yTm9kZSE9PWwubm9kZXx8dy5hbmNob3JPZmZzZXQhPT1sLm9mZnNldHx8dy5mb2N1c05vZGUhPT1tLm5vZGV8fHcuZm9jdXNPZmZzZXQhPT1tLm9mZnNldCkmJihCPUIuY3JlYXRlUmFuZ2UoKSxCLnNldFN0YXJ0KGwubm9kZSxsLm9mZnNldCksdy5yZW1vdmVBbGxSYW5nZXMoKSxnPmg/KHcuYWRkUmFuZ2UoQiksdy5leHRlbmQobS5ub2RlLG0ub2Zmc2V0KSk6KEIuc2V0RW5kKG0ubm9kZSxtLm9mZnNldCksdy5hZGRSYW5nZShCKSkpKSkpO0I9W107Zm9yKHc9cTt3PXcucGFyZW50Tm9kZTspMT09PXcubm9kZVR5cGUmJkIucHVzaCh7ZWxlbWVudDp3LGxlZnQ6dy5zY3JvbGxMZWZ0LFxudG9wOncuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHEuZm9jdXMmJnEuZm9jdXMoKTtmb3IocT0wO3E8Qi5sZW5ndGg7cSsrKXc9QltxXSx3LmVsZW1lbnQuc2Nyb2xsTGVmdD13LmxlZnQsdy5lbGVtZW50LnNjcm9sbFRvcD13LnRvcH1mZD0hIURkO0VkPURkPW51bGw7YS5jdXJyZW50PWM7WT1lO2RvIHRyeXtmb3IocT1hO251bGwhPT1ZOyl7dmFyIHViPVkuZWZmZWN0VGFnO3ViJjM2JiZKaShxLFkuYWx0ZXJuYXRlLFkpO2lmKHViJjEyOCl7Qj12b2lkIDA7dmFyIHZiPVkucmVmO2lmKG51bGwhPT12Yil7dmFyIFhjPVkuc3RhdGVOb2RlO3N3aXRjaChZLnRhZyl7Y2FzZSA1OkI9WGM7YnJlYWs7ZGVmYXVsdDpCPVhjfVwiZnVuY3Rpb25cIj09PXR5cGVvZiB2Yj92YihCKTp2Yi5jdXJyZW50PUJ9fVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1cbm51bGw7VmYoKTtXPWZ9ZWxzZSBhLmN1cnJlbnQ9YztpZihxailxaj0hMSxyaj1hLHNqPWI7ZWxzZSBmb3IoWT1lO251bGwhPT1ZOyliPVkubmV4dEVmZmVjdCxZLm5leHRFZmZlY3Q9bnVsbCxZPWI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7MD09PWImJihhaj1udWxsKTsxMDczNzQxODIzPT09Yj9hPT09dmo/dWorKzoodWo9MCx2aj1hKTp1aj0wO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBVaiYmVWooYy5zdGF0ZU5vZGUsZCk7WihhKTtpZihZaSl0aHJvdyBZaT0hMSxhPVppLFppPW51bGwsYTtpZigoVyZlaikhPT1WKXJldHVybiBudWxsO2dnKCk7cmV0dXJuIG51bGx9ZnVuY3Rpb24gVGooKXtmb3IoO251bGwhPT1ZOyl7dmFyIGE9WS5lZmZlY3RUYWc7MCE9PShhJjI1NikmJkdpKFkuYWx0ZXJuYXRlLFkpOzA9PT0oYSY1MTIpfHxxanx8KHFqPSEwLGRnKDk3LGZ1bmN0aW9uKCl7RGooKTtyZXR1cm4gbnVsbH0pKTtZPVkubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBEaigpe2lmKDkwIT09c2ope3ZhciBhPTk3PHNqPzk3OnNqO3NqPTkwO3JldHVybiBjZyhhLFZqKX19ZnVuY3Rpb24gVmooKXtpZihudWxsPT09cmopcmV0dXJuITE7dmFyIGE9cmo7cmo9bnVsbDtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMzEpKTt2YXIgYj1XO1d8PWdqO2ZvcihhPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09YTspe3RyeXt2YXIgYz1hO2lmKDAhPT0oYy5lZmZlY3RUYWcmNTEyKSlzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpIaSg1LGMpLElpKDUsYyl9fWNhdGNoKGQpe2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzMwKSk7RWkoYSxkKX1jPWEubmV4dEVmZmVjdDthLm5leHRFZmZlY3Q9bnVsbDthPWN9Vz1iO2dnKCk7cmV0dXJuITB9XG5mdW5jdGlvbiBXaihhLGIsYyl7Yj1BaShjLGIpO2I9WGkoYSxiLDEwNzM3NDE4MjMpO3hnKGEsYik7YT14aihhLDEwNzM3NDE4MjMpO251bGwhPT1hJiZaKGEpfWZ1bmN0aW9uIEVpKGEsYil7aWYoMz09PWEudGFnKVdqKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7V2ooYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXMoZCkpKXthPUFpKGIsYSk7YT0kaShjLGEsMTA3Mzc0MTgyMyk7eGcoYyxhKTtjPXhqKGMsMTA3Mzc0MTgyMyk7bnVsbCE9PWMmJlooYyk7YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gT2ooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtUPT09YSYmVT09PWM/Uz09PXZpfHxTPT09dWkmJjEwNzM3NDE4MjM9PT1saiYmJGYoKS1UaTxwaj9FaihhLFUpOm9qPSEwOkFqKGEsYykmJihiPWEubGFzdFBpbmdlZFRpbWUsMCE9PWImJmI8Y3x8KGEubGFzdFBpbmdlZFRpbWU9YyxaKGEpKSl9ZnVuY3Rpb24gVmkoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj0wOzA9PT1iJiYoYj1HZygpLGI9SGcoYixhLG51bGwpKTthPXhqKGEsYik7bnVsbCE9PWEmJlooYSl9dmFyIFJqO1xuUmo9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7aWYobnVsbCE9PWEpe3ZhciBlPWIucGVuZGluZ1Byb3BzO2lmKGEubWVtb2l6ZWRQcm9wcyE9PWV8fEsuY3VycmVudClyZz0hMDtlbHNle2lmKGQ8Yyl7cmc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6aGkoYik7WGgoKTticmVhaztjYXNlIDU6ZmgoYik7aWYoYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbilyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxudWxsO2JyZWFrO2Nhc2UgMTpMKGIudHlwZSkmJkdmKGIpO2JyZWFrO2Nhc2UgNDpkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7ZT1iLnR5cGUuX2NvbnRleHQ7SShqZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7XG5pZigwIT09ZCYmZD49YylyZXR1cm4gamkoYSxiLGMpO0koTSxNLmN1cnJlbnQmMSk7Yj0kaChhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfUkoTSxNLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPWIuY2hpbGRFeHBpcmF0aW9uVGltZT49YztpZigwIT09KGEuZWZmZWN0VGFnJjY0KSl7aWYoZClyZXR1cm4gbWkoYSxiLGMpO2IuZWZmZWN0VGFnfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwpO0koTSxNLmN1cnJlbnQpO2lmKCFkKXJldHVybiBudWxsfXJldHVybiAkaChhLGIsYyl9cmc9ITF9fWVsc2Ugcmc9ITE7Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9Q2YoYixKLmN1cnJlbnQpO3FnKGIsYyk7ZT1vaChudWxsLFxuYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEwoZCkpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3VnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZGZyhiLGQsZyxhKTtlLnVwZGF0ZXI9Smc7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9YjtOZyhiLGQsYSxjKTtiPWdpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLFIobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6YTp7ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9XG5udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7b2IoZSk7aWYoMSE9PWUuX3N0YXR1cyl0aHJvdyBlLl9yZXN1bHQ7ZT1lLl9yZXN1bHQ7Yi50eXBlPWU7Zj1iLnRhZz1YaihlKTthPWlnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWRpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1maShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPVpoKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9YWkobnVsbCxiLGUsaWcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih1KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGRpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGZpKGEsYixkLGUsYyk7XG5jYXNlIDM6aGkoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcih1KDI4MikpO2Q9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt2ZyhhLGIpO3pnKGIsZCxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpWGgoKSxiPSRoKGEsYixjKTtlbHNle2lmKGU9Yi5zdGF0ZU5vZGUuaHlkcmF0ZSlQaD1KZChiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLE9oPWIsZT1RaD0hMDtpZihlKWZvcihjPVlnKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmVmZmVjdFRhZz1jLmVmZmVjdFRhZyYtM3wxMDI0LGM9Yy5zaWJsaW5nO2Vsc2UgUihhLGIsZCxjKSxYaCgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIGZoKGIpLG51bGw9PT1hJiZVaChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOlxubnVsbCxnPWUuY2hpbGRyZW4sR2QoZCxlKT9nPW51bGw6bnVsbCE9PWYmJkdkKGQsZikmJihiLmVmZmVjdFRhZ3w9MTYpLGVpKGEsYiksYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihSKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZVaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGppKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGRoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVhnKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLFpoKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUihhLFxuYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShqZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPSRlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFLLmN1cnJlbnQpe2I9JGgoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PVxuayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9d2coYyxudWxsKSxsLnRhZz0yLHhnKGgsbCkpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9Yyk7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmbC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTtwZyhoLnJldHVybixjKTtrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPVxuZ31SKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHFnKGIsYyksZT1zZyhlLGYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5lZmZlY3RUYWd8PTEsUihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9aWcoZSxiLnBlbmRpbmdQcm9wcyksZj1pZyhlLnR5cGUsZiksYWkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIGNpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEwoZCk/KGE9ITAsR2YoYikpOmE9ITEscWcoYixjKSxMZyhiLGQsZSksTmcoYixkLGUsYyksZ2kobnVsbCxcbmIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIG1pKGEsYixjKX10aHJvdyBFcnJvcih1KDE1NixiLnRhZykpO307dmFyIFVqPW51bGwsTGk9bnVsbDtmdW5jdGlvbiBZaihhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtVaj1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyUm9vdChjLGEsdm9pZCAwLDY0PT09KGEuY3VycmVudC5lZmZlY3RUYWcmNjQpKX1jYXRjaChlKXt9fTtMaT1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfWNhdGNoKGUpe319fWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIFpqKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gU2goYSxiLGMsZCl7cmV0dXJuIG5ldyBaaihhLGIsYyxkKX1cbmZ1bmN0aW9uIGJpKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gWGooYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGJpKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1nYilyZXR1cm4gMTE7aWYoYT09PWpiKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFNnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9U2goYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Yi5leHBpcmF0aW9uVGltZSxcbmZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmIucmVzcG9uZGVyc307Yy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBVZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpYmkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgYWI6cmV0dXJuIFdnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgZmI6Zz04O2V8PTc7YnJlYWs7Y2FzZSBiYjpnPTg7ZXw9MTticmVhaztjYXNlIGNiOnJldHVybiBhPVNoKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9Y2IsYS50eXBlPWNiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaGI6cmV0dXJuIGE9U2goMTMsYyxiLGUpLGEudHlwZT1oYixhLmVsZW1lbnRUeXBlPWhiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaWI6cmV0dXJuIGE9U2goMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9aWIsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGRiOmc9XG4xMDticmVhayBhO2Nhc2UgZWI6Zz05O2JyZWFrIGE7Y2FzZSBnYjpnPTExO2JyZWFrIGE7Y2FzZSBqYjpnPTE0O2JyZWFrIGE7Y2FzZSBrYjpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgbGI6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHUoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9U2goZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBXZyhhLGIsYyxkKXthPVNoKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBUZyhhLGIsYyl7YT1TaCg2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBWZyhhLGIsYyl7Yj1TaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGFrKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY3VycmVudD1udWxsO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMucGluZ0NhY2hlPXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dGhpcy5maW5pc2hlZFdvcms9bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT05MDt0aGlzLmxhc3RFeHBpcmVkVGltZT10aGlzLmxhc3RQaW5nZWRUaW1lPXRoaXMubmV4dEtub3duUGVuZGluZ0xldmVsPXRoaXMubGFzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFBlbmRpbmdUaW1lPTB9XG5mdW5jdGlvbiBBaihhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lO2E9YS5sYXN0U3VzcGVuZGVkVGltZTtyZXR1cm4gMCE9PWMmJmM+PWImJmE8PWJ9ZnVuY3Rpb24geGkoYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZSxkPWEubGFzdFN1c3BlbmRlZFRpbWU7YzxiJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9Yik7aWYoZD5ifHwwPT09YylhLmxhc3RTdXNwZW5kZWRUaW1lPWI7Yjw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7Yjw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKX1cbmZ1bmN0aW9uIHlpKGEsYil7Yj5hLmZpcnN0UGVuZGluZ1RpbWUmJihhLmZpcnN0UGVuZGluZ1RpbWU9Yik7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7MCE9PWMmJihiPj1jP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpiPj1hLmxhc3RTdXNwZW5kZWRUaW1lJiYoYS5sYXN0U3VzcGVuZGVkVGltZT1iKzEpLGI+YS5uZXh0S25vd25QZW5kaW5nTGV2ZWwmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1iKSl9ZnVuY3Rpb24gQ2ooYSxiKXt2YXIgYz1hLmxhc3RFeHBpcmVkVGltZTtpZigwPT09Y3x8Yz5iKWEubGFzdEV4cGlyZWRUaW1lPWJ9XG5mdW5jdGlvbiBiayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1HZygpLGc9RGcuc3VzcGVuc2U7Zj1IZyhmLGUsZyk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOntpZihkYyhjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEwoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih1KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihMKGspKXtjPUZmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUFmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9d2coZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1cbmQ/bnVsbDpkO251bGwhPT1kJiYoYi5jYWxsYmFjaz1kKTt4ZyhlLGIpO0lnKGUsZik7cmV0dXJuIGZ9ZnVuY3Rpb24gY2soYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBkayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO251bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkJiZhLnJldHJ5VGltZTxiJiYoYS5yZXRyeVRpbWU9Yil9ZnVuY3Rpb24gZWsoYSxiKXtkayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmZGsoYSxiKX1cbmZ1bmN0aW9uIGZrKGEsYixjKXtjPW51bGwhPWMmJiEwPT09Yy5oeWRyYXRlO3ZhciBkPW5ldyBhayhhLGIsYyksZT1TaCgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7ZC5jdXJyZW50PWU7ZS5zdGF0ZU5vZGU9ZDt1ZyhlKTthW09kXT1kLmN1cnJlbnQ7YyYmMCE9PWImJkpjKGEsOT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQpO3RoaXMuX2ludGVybmFsUm9vdD1kfWZrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7YmsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07ZmsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87YmsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW09kXT1udWxsfSl9O1xuZnVuY3Rpb24gZ2soYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfWZ1bmN0aW9uIGhrKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgZmsoYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiBpayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWNrKGcpO2guY2FsbChhKX19YmsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1oayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtrLmNhbGwoYSl9fU5qKGZ1bmN0aW9uKCl7YmsoYixnLGEsZSl9KX1yZXR1cm4gY2soZyl9ZnVuY3Rpb24gamsoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjokYSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbndjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWhnKEdnKCksMTUwLDEwMCk7SWcoYSxiKTtlayhhLGIpfX07eGM9ZnVuY3Rpb24oYSl7MTM9PT1hLnRhZyYmKElnKGEsMyksZWsoYSwzKSl9O3ljPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUdnKCk7Yj1IZyhiLGEsbnVsbCk7SWcoYSxiKTtlayhhLGIpfX07XG56YT1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkNiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1RZChkKTtpZighZSl0aHJvdyBFcnJvcih1KDkwKSk7eWIoZCk7Q2IoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOktiKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZIYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0ZhPU1qO1xuR2E9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1XO1d8PTQ7dHJ5e3JldHVybiBjZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtXPWYsVz09PVYmJmdnKCl9fTtIYT1mdW5jdGlvbigpeyhXJigxfGZqfGdqKSk9PT1WJiYoTGooKSxEaigpKX07SWE9ZnVuY3Rpb24oYSxiKXt2YXIgYz1XO1d8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX07ZnVuY3Rpb24ga2soYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gamsoYSxiLG51bGwsYyl9dmFyIGxrPXtFdmVudHM6W05jLFBkLFFkLHhhLHRhLFhkLGZ1bmN0aW9uKGEpe2pjKGEsV2QpfSxEYSxFYSxpZCxtYyxEaix7Y3VycmVudDohMX1dfTtcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBZaihuKHt9LGEse292ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWhjKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9LGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6dGMsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4xMy4xXCIsXG5yZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPWxrO2V4cG9ydHMuY3JlYXRlUG9ydGFsPWtrO2V4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHUoMTg4KSk7dGhyb3cgRXJyb3IodSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1oYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O1xuZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgxODcpKTt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBjZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtXPWMsZ2coKX19O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCEwLGMpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCExLGMpfTtcbmV4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighZ2soYSkpdGhyb3cgRXJyb3IodSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KE5qKGZ1bmN0aW9uKCl7aWsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW09kXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9TWo7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4ga2soYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFnayhjKSl0aHJvdyBFcnJvcih1KDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcil0aHJvdyBFcnJvcih1KDM4KSk7cmV0dXJuIGlrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xMy4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjE5LjFcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgZixnLGgsayxsO1xuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHA9bnVsbCxxPW51bGwsdD1mdW5jdGlvbigpe2lmKG51bGwhPT1wKXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3AoITAsYSk7cD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodCwwKSxiO319LHU9RGF0ZS5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpLXV9O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXA/c2V0VGltZW91dChmLDAsYSk6KHA9YSxzZXRUaW1lb3V0KHQsMCkpfTtnPWZ1bmN0aW9uKGEsYil7cT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQocSl9O2s9ZnVuY3Rpb24oKXtyZXR1cm4hMX07bD1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB3PXdpbmRvdy5wZXJmb3JtYW5jZSx4PXdpbmRvdy5EYXRlLFxueT13aW5kb3cuc2V0VGltZW91dCx6PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgQT13aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKX1pZihcIm9iamVjdFwiPT09XG50eXBlb2YgdyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHcubm93KWV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHcubm93KCl9O2Vsc2V7dmFyIEI9eC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpLUJ9fXZhciBDPSExLEQ9bnVsbCxFPS0xLEY9NSxHPTA7az1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1HfTtsPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3QgdW5zdXBwb3J0ZWRcIik6Rj0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEg9bmV3IE1lc3NhZ2VDaGFubmVsLEk9SC5wb3J0MjtILnBvcnQxLm9ubWVzc2FnZT1cbmZ1bmN0aW9uKCl7aWYobnVsbCE9PUQpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7Rz1hK0Y7dHJ5e0QoITAsYSk/SS5wb3N0TWVzc2FnZShudWxsKTooQz0hMSxEPW51bGwpfWNhdGNoKGIpe3Rocm93IEkucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQz0hMX07Zj1mdW5jdGlvbihhKXtEPWE7Q3x8KEM9ITAsSS5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtFPXkoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3ooRSk7RT0tMX19ZnVuY3Rpb24gSihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxLKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBMKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBNKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPksobixjKSl2b2lkIDAhPT1yJiYwPksocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPksocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEsoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIE49W10sTz1bXSxQPTEsUT1udWxsLFI9MyxTPSExLFQ9ITEsVT0hMTtcbmZ1bmN0aW9uIFYoYSl7Zm9yKHZhciBiPUwoTyk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylNKE8pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpTShPKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEooTixiKTtlbHNlIGJyZWFrO2I9TChPKX19ZnVuY3Rpb24gVyhhKXtVPSExO1YoYSk7aWYoIVQpaWYobnVsbCE9PUwoTikpVD0hMCxmKFgpO2Vsc2V7dmFyIGI9TChPKTtudWxsIT09YiYmZyhXLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFgoYSxiKXtUPSExO1UmJihVPSExLGgoKSk7Uz0hMDt2YXIgYz1SO3RyeXtWKGIpO2ZvcihRPUwoTik7bnVsbCE9PVEmJighKFEuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFrKCkpOyl7dmFyIGQ9US5jYWxsYmFjaztpZihudWxsIT09ZCl7US5jYWxsYmFjaz1udWxsO1I9US5wcmlvcml0eUxldmVsO3ZhciBlPWQoUS5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP1EuY2FsbGJhY2s9ZTpRPT09TChOKSYmTShOKTtWKGIpfWVsc2UgTShOKTtRPUwoTil9aWYobnVsbCE9PVEpdmFyIG09ITA7ZWxzZXt2YXIgbj1MKE8pO251bGwhPT1uJiZnKFcsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e1E9bnVsbCxSPWMsUz0hMX19XG5mdW5jdGlvbiBZKGEpe3N3aXRjaChhKXtjYXNlIDE6cmV0dXJuLTE7Y2FzZSAyOnJldHVybiAyNTA7Y2FzZSA1OnJldHVybiAxMDczNzQxODIzO2Nhc2UgNDpyZXR1cm4gMUU0O2RlZmF1bHQ6cmV0dXJuIDVFM319dmFyIFo9bDtleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7VHx8U3x8KFQ9ITAsZihYKSl9O1xuZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBSfTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEwoTil9O2V4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUil7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9Un12YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1I9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVo7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1SO1I9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1I9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3ZhciBlPWMuZGVsYXk7ZT1cIm51bWJlclwiPT09dHlwZW9mIGUmJjA8ZT9kK2U6ZDtjPVwibnVtYmVyXCI9PT10eXBlb2YgYy50aW1lb3V0P2MudGltZW91dDpZKGEpfWVsc2UgYz1ZKGEpLGU9ZDtjPWUrYzthPXtpZDpQKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmUsZXhwaXJhdGlvblRpbWU6Yyxzb3J0SW5kZXg6LTF9O2U+ZD8oYS5zb3J0SW5kZXg9ZSxKKE8sYSksbnVsbD09PUwoTikmJmE9PT1MKE8pJiYoVT9oKCk6VT0hMCxnKFcsZS1kKSkpOihhLnNvcnRJbmRleD1jLEooTixhKSxUfHxTfHwoVD0hMCxmKFgpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7VihhKTt2YXIgYj1MKE4pO3JldHVybiBiIT09USYmbnVsbCE9PVEmJm51bGwhPT1iJiZudWxsIT09Yi5jYWxsYmFjayYmYi5zdGFydFRpbWU8PWEmJmIuZXhwaXJhdGlvblRpbWU8US5leHBpcmF0aW9uVGltZXx8aygpfTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1SO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtSPWN9fX07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vbGliL2F4aW9zJyk7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgQXhpb3MgPSByZXF1aXJlKCcuL2NvcmUvQXhpb3MnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vY29yZS9tZXJnZUNvbmZpZycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG52YXIgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRmFjdG9yeSBmb3IgY3JlYXRpbmcgbmV3IGluc3RhbmNlc1xuYXhpb3MuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gIHJldHVybiBjcmVhdGVJbnN0YW5jZShtZXJnZUNvbmZpZyhheGlvcy5kZWZhdWx0cywgaW5zdGFuY2VDb25maWcpKTtcbn07XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsJyk7XG5heGlvcy5DYW5jZWxUb2tlbiA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbFRva2VuJyk7XG5heGlvcy5pc0NhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL2lzQ2FuY2VsJyk7XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5heGlvcy5zcHJlYWQgPSByZXF1aXJlKCcuL2hlbHBlcnMvc3ByZWFkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgSW50ZXJjZXB0b3JNYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmNlcHRvck1hbmFnZXInKTtcbnZhciBkaXNwYXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2Rpc3BhdGNoUmVxdWVzdCcpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9tZXJnZUNvbmZpZycpO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBpbnN0YW5jZUNvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBBeGlvcyhpbnN0YW5jZUNvbmZpZykge1xuICB0aGlzLmRlZmF1bHRzID0gaW5zdGFuY2VDb25maWc7XG4gIHRoaXMuaW50ZXJjZXB0b3JzID0ge1xuICAgIHJlcXVlc3Q6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKSxcbiAgICByZXNwb25zZTogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpXG4gIH07XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHNwZWNpZmljIGZvciB0aGlzIHJlcXVlc3QgKG1lcmdlZCB3aXRoIHRoaXMuZGVmYXVsdHMpXG4gKi9cbkF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24gcmVxdWVzdChjb25maWcpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIC8vIEFsbG93IGZvciBheGlvcygnZXhhbXBsZS91cmwnWywgY29uZmlnXSkgYSBsYSBmZXRjaCBBUElcbiAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uZmlnID0gYXJndW1lbnRzWzFdIHx8IHt9O1xuICAgIGNvbmZpZy51cmwgPSBhcmd1bWVudHNbMF07XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICB9XG5cbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcblxuICAvLyBTZXQgY29uZmlnLm1ldGhvZFxuICBpZiAoY29uZmlnLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSBjb25maWcubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG4gIH0gZWxzZSBpZiAodGhpcy5kZWZhdWx0cy5tZXRob2QpIHtcbiAgICBjb25maWcubWV0aG9kID0gdGhpcy5kZWZhdWx0cy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcubWV0aG9kID0gJ2dldCc7XG4gIH1cblxuICAvLyBIb29rIHVwIGludGVyY2VwdG9ycyBtaWRkbGV3YXJlXG4gIHZhciBjaGFpbiA9IFtkaXNwYXRjaFJlcXVlc3QsIHVuZGVmaW5lZF07XG4gIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGNvbmZpZyk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVxdWVzdC5mb3JFYWNoKGZ1bmN0aW9uIHVuc2hpZnRSZXF1ZXN0SW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgY2hhaW4udW5zaGlmdChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UuZm9yRWFjaChmdW5jdGlvbiBwdXNoUmVzcG9uc2VJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICBjaGFpbi5wdXNoKGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB3aGlsZSAoY2hhaW4ubGVuZ3RoKSB7XG4gICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihjaGFpbi5zaGlmdCgpLCBjaGFpbi5zaGlmdCgpKTtcbiAgfVxuXG4gIHJldHVybiBwcm9taXNlO1xufTtcblxuQXhpb3MucHJvdG90eXBlLmdldFVyaSA9IGZ1bmN0aW9uIGdldFVyaShjb25maWcpIHtcbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcbiAgcmV0dXJuIGJ1aWxkVVJMKGNvbmZpZy51cmwsIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKS5yZXBsYWNlKC9eXFw/LywgJycpO1xufTtcblxuLy8gUHJvdmlkZSBhbGlhc2VzIGZvciBzdXBwb3J0ZWQgcmVxdWVzdCBtZXRob2RzXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ29wdGlvbnMnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QodXRpbHMubWVyZ2UoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24odXJsLCBkYXRhLCBjb25maWcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KHV0aWxzLm1lcmdlKGNvbmZpZyB8fCB7fSwge1xuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICB1cmw6IHVybCxcbiAgICAgIGRhdGE6IGRhdGFcbiAgICB9KSk7XG4gIH07XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBBeGlvcztcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKSB7XG4gIHRoaXMuaGFuZGxlcnMgPSBbXTtcbn1cblxuLyoqXG4gKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVsZmlsbGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHRoZW5gIGZvciBhIGBQcm9taXNlYFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IEFuIElEIHVzZWQgdG8gcmVtb3ZlIGludGVyY2VwdG9yIGxhdGVyXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpIHtcbiAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcbiAgICByZWplY3RlZDogcmVqZWN0ZWRcbiAgfSk7XG4gIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpbnRlcmNlcHRvciBmcm9tIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5lamVjdCA9IGZ1bmN0aW9uIGVqZWN0KGlkKSB7XG4gIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgIHRoaXMuaGFuZGxlcnNbaWRdID0gbnVsbDtcbiAgfVxufTtcblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICpcbiAqIFRoaXMgbWV0aG9kIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHNraXBwaW5nIG92ZXIgYW55XG4gKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBmb3IgZWFjaCBpbnRlcmNlcHRvclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGZuKSB7XG4gIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgIGlmIChoICE9PSBudWxsKSB7XG4gICAgICBmbihoKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbnRlcmNlcHRvck1hbmFnZXI7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciB0cmFuc2Zvcm1EYXRhID0gcmVxdWlyZSgnLi90cmFuc2Zvcm1EYXRhJyk7XG52YXIgaXNDYW5jZWwgPSByZXF1aXJlKCcuLi9jYW5jZWwvaXNDYW5jZWwnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1xuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBUcmFuc2Zvcm0gdGhlIGRhdGEgZm9yIGEgcmVxdWVzdCBvciBhIHJlc3BvbnNlXG4gKlxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSBkYXRhIFRoZSBkYXRhIHRvIGJlIHRyYW5zZm9ybWVkXG4gKiBAcGFyYW0ge0FycmF5fSBoZWFkZXJzIFRoZSBoZWFkZXJzIGZvciB0aGUgcmVxdWVzdCBvciByZXNwb25zZVxuICogQHBhcmFtIHtBcnJheXxGdW5jdGlvbn0gZm5zIEEgc2luZ2xlIGZ1bmN0aW9uIG9yIEFycmF5IG9mIGZ1bmN0aW9uc1xuICogQHJldHVybnMgeyp9IFRoZSByZXN1bHRpbmcgdHJhbnNmb3JtZWQgZGF0YVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHRyYW5zZm9ybURhdGEoZGF0YSwgaGVhZGVycywgZm5zKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICB1dGlscy5mb3JFYWNoKGZucywgZnVuY3Rpb24gdHJhbnNmb3JtKGZuKSB7XG4gICAgZGF0YSA9IGZuKGRhdGEsIGhlYWRlcnMpO1xuICB9KTtcblxuICByZXR1cm4gZGF0YTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCBub3JtYWxpemVkTmFtZSkge1xuICB1dGlscy5mb3JFYWNoKGhlYWRlcnMsIGZ1bmN0aW9uIHByb2Nlc3NIZWFkZXIodmFsdWUsIG5hbWUpIHtcbiAgICBpZiAobmFtZSAhPT0gbm9ybWFsaXplZE5hbWUgJiYgbmFtZS50b1VwcGVyQ2FzZSgpID09PSBub3JtYWxpemVkTmFtZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICBoZWFkZXJzW25vcm1hbGl6ZWROYW1lXSA9IHZhbHVlO1xuICAgICAgZGVsZXRlIGhlYWRlcnNbbmFtZV07XG4gICAgfVxuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4vY3JlYXRlRXJyb3InKTtcblxuLyoqXG4gKiBSZXNvbHZlIG9yIHJlamVjdCBhIFByb21pc2UgYmFzZWQgb24gcmVzcG9uc2Ugc3RhdHVzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlc29sdmUgQSBmdW5jdGlvbiB0aGF0IHJlc29sdmVzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0IEEgZnVuY3Rpb24gdGhhdCByZWplY3RzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtvYmplY3R9IHJlc3BvbnNlIFRoZSByZXNwb25zZS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCByZXNwb25zZSkge1xuICB2YXIgdmFsaWRhdGVTdGF0dXMgPSByZXNwb25zZS5jb25maWcudmFsaWRhdGVTdGF0dXM7XG4gIGlmICghdmFsaWRhdGVTdGF0dXMgfHwgdmFsaWRhdGVTdGF0dXMocmVzcG9uc2Uuc3RhdHVzKSkge1xuICAgIHJlc29sdmUocmVzcG9uc2UpO1xuICB9IGVsc2Uge1xuICAgIHJlamVjdChjcmVhdGVFcnJvcihcbiAgICAgICdSZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1cyBjb2RlICcgKyByZXNwb25zZS5zdGF0dXMsXG4gICAgICByZXNwb25zZS5jb25maWcsXG4gICAgICBudWxsLFxuICAgICAgcmVzcG9uc2UucmVxdWVzdCxcbiAgICAgIHJlc3BvbnNlXG4gICAgKSk7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXBkYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBjb25maWcsIGVycm9yIGNvZGUsIGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge0Vycm9yfSBlcnJvciBUaGUgZXJyb3IgdG8gdXBkYXRlLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVxdWVzdF0gVGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0ge09iamVjdH0gW3Jlc3BvbnNlXSBUaGUgcmVzcG9uc2UuXG4gKiBAcmV0dXJucyB7RXJyb3J9IFRoZSBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgZXJyb3IuY29uZmlnID0gY29uZmlnO1xuICBpZiAoY29kZSkge1xuICAgIGVycm9yLmNvZGUgPSBjb2RlO1xuICB9XG5cbiAgZXJyb3IucmVxdWVzdCA9IHJlcXVlc3Q7XG4gIGVycm9yLnJlc3BvbnNlID0gcmVzcG9uc2U7XG4gIGVycm9yLmlzQXhpb3NFcnJvciA9IHRydWU7XG5cbiAgZXJyb3IudG9KU09OID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC8vIFN0YW5kYXJkXG4gICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXG4gICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAvLyBNaWNyb3NvZnRcbiAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmRlc2NyaXB0aW9uLFxuICAgICAgbnVtYmVyOiB0aGlzLm51bWJlcixcbiAgICAgIC8vIE1vemlsbGFcbiAgICAgIGZpbGVOYW1lOiB0aGlzLmZpbGVOYW1lLFxuICAgICAgbGluZU51bWJlcjogdGhpcy5saW5lTnVtYmVyLFxuICAgICAgY29sdW1uTnVtYmVyOiB0aGlzLmNvbHVtbk51bWJlcixcbiAgICAgIHN0YWNrOiB0aGlzLnN0YWNrLFxuICAgICAgLy8gQXhpb3NcbiAgICAgIGNvbmZpZzogdGhpcy5jb25maWcsXG4gICAgICBjb2RlOiB0aGlzLmNvZGVcbiAgICB9O1xuICB9O1xuICByZXR1cm4gZXJyb3I7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNBYnNvbHV0ZVVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTCcpO1xudmFyIGNvbWJpbmVVUkxzID0gcmVxdWlyZSgnLi4vaGVscGVycy9jb21iaW5lVVJMcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgYmFzZVVSTCB3aXRoIHRoZSByZXF1ZXN0ZWRVUkwsXG4gKiBvbmx5IHdoZW4gdGhlIHJlcXVlc3RlZFVSTCBpcyBub3QgYWxyZWFkeSBhbiBhYnNvbHV0ZSBVUkwuXG4gKiBJZiB0aGUgcmVxdWVzdFVSTCBpcyBhYnNvbHV0ZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSByZXF1ZXN0ZWRVUkwgdW50b3VjaGVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlcXVlc3RlZFVSTCBBYnNvbHV0ZSBvciByZWxhdGl2ZSBVUkwgdG8gY29tYmluZVxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIGZ1bGwgcGF0aFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkRnVsbFBhdGgoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKSB7XG4gIGlmIChiYXNlVVJMICYmICFpc0Fic29sdXRlVVJMKHJlcXVlc3RlZFVSTCkpIHtcbiAgICByZXR1cm4gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKTtcbiAgfVxuICByZXR1cm4gcmVxdWVzdGVkVVJMO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBVUkwgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQWJzb2x1dGVVUkwodXJsKSB7XG4gIC8vIEEgVVJMIGlzIGNvbnNpZGVyZWQgYWJzb2x1dGUgaWYgaXQgYmVnaW5zIHdpdGggXCI8c2NoZW1lPjovL1wiIG9yIFwiLy9cIiAocHJvdG9jb2wtcmVsYXRpdmUgVVJMKS5cbiAgLy8gUkZDIDM5ODYgZGVmaW5lcyBzY2hlbWUgbmFtZSBhcyBhIHNlcXVlbmNlIG9mIGNoYXJhY3RlcnMgYmVnaW5uaW5nIHdpdGggYSBsZXR0ZXIgYW5kIGZvbGxvd2VkXG4gIC8vIGJ5IGFueSBjb21iaW5hdGlvbiBvZiBsZXR0ZXJzLCBkaWdpdHMsIHBsdXMsIHBlcmlvZCwgb3IgaHlwaGVuLlxuICByZXR1cm4gL14oW2Etel1bYS16XFxkXFwrXFwtXFwuXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgc3BlY2lmaWVkIFVSTHNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVVSTCBUaGUgYmFzZSBVUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSByZWxhdGl2ZVVSTCBUaGUgcmVsYXRpdmUgVVJMXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgVVJMXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVsYXRpdmVVUkwpIHtcbiAgcmV0dXJuIHJlbGF0aXZlVVJMXG4gICAgPyBiYXNlVVJMLnJlcGxhY2UoL1xcLyskLywgJycpICsgJy8nICsgcmVsYXRpdmVVUkwucmVwbGFjZSgvXlxcLysvLCAnJylcbiAgICA6IGJhc2VVUkw7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIGhhdmUgZnVsbCBzdXBwb3J0IG9mIHRoZSBBUElzIG5lZWRlZCB0byB0ZXN0XG4gIC8vIHdoZXRoZXIgdGhlIHJlcXVlc3QgVVJMIGlzIG9mIHRoZSBzYW1lIG9yaWdpbiBhcyBjdXJyZW50IGxvY2F0aW9uLlxuICAgIChmdW5jdGlvbiBzdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICB2YXIgbXNpZSA9IC8obXNpZXx0cmlkZW50KS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgICB2YXIgdXJsUGFyc2luZ05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgICB2YXIgb3JpZ2luVVJMO1xuXG4gICAgICAvKipcbiAgICAqIFBhcnNlIGEgVVJMIHRvIGRpc2NvdmVyIGl0J3MgY29tcG9uZW50c1xuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgVGhlIFVSTCB0byBiZSBwYXJzZWRcbiAgICAqIEByZXR1cm5zIHtPYmplY3R9XG4gICAgKi9cbiAgICAgIGZ1bmN0aW9uIHJlc29sdmVVUkwodXJsKSB7XG4gICAgICAgIHZhciBocmVmID0gdXJsO1xuXG4gICAgICAgIGlmIChtc2llKSB7XG4gICAgICAgIC8vIElFIG5lZWRzIGF0dHJpYnV0ZSBzZXQgdHdpY2UgdG8gbm9ybWFsaXplIHByb3BlcnRpZXNcbiAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcbiAgICAgICAgICBocmVmID0gdXJsUGFyc2luZ05vZGUuaHJlZjtcbiAgICAgICAgfVxuXG4gICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuXG4gICAgICAgIC8vIHVybFBhcnNpbmdOb2RlIHByb3ZpZGVzIHRoZSBVcmxVdGlscyBpbnRlcmZhY2UgLSBodHRwOi8vdXJsLnNwZWMud2hhdHdnLm9yZy8jdXJsdXRpbHNcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBocmVmOiB1cmxQYXJzaW5nTm9kZS5ocmVmLFxuICAgICAgICAgIHByb3RvY29sOiB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbCA/IHVybFBhcnNpbmdOb2RlLnByb3RvY29sLnJlcGxhY2UoLzokLywgJycpIDogJycsXG4gICAgICAgICAgaG9zdDogdXJsUGFyc2luZ05vZGUuaG9zdCxcbiAgICAgICAgICBzZWFyY2g6IHVybFBhcnNpbmdOb2RlLnNlYXJjaCA/IHVybFBhcnNpbmdOb2RlLnNlYXJjaC5yZXBsYWNlKC9eXFw/LywgJycpIDogJycsXG4gICAgICAgICAgaGFzaDogdXJsUGFyc2luZ05vZGUuaGFzaCA/IHVybFBhcnNpbmdOb2RlLmhhc2gucmVwbGFjZSgvXiMvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0bmFtZTogdXJsUGFyc2luZ05vZGUuaG9zdG5hbWUsXG4gICAgICAgICAgcG9ydDogdXJsUGFyc2luZ05vZGUucG9ydCxcbiAgICAgICAgICBwYXRobmFtZTogKHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nKSA/XG4gICAgICAgICAgICB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZSA6XG4gICAgICAgICAgICAnLycgKyB1cmxQYXJzaW5nTm9kZS5wYXRobmFtZVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBvcmlnaW5VUkwgPSByZXNvbHZlVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcblxuICAgICAgLyoqXG4gICAgKiBEZXRlcm1pbmUgaWYgYSBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiBhcyB0aGUgY3VycmVudCBsb2NhdGlvblxuICAgICpcbiAgICAqIEBwYXJhbSB7U3RyaW5nfSByZXF1ZXN0VVJMIFRoZSBVUkwgdG8gdGVzdFxuICAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4sIG90aGVyd2lzZSBmYWxzZVxuICAgICovXG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKHJlcXVlc3RVUkwpIHtcbiAgICAgICAgdmFyIHBhcnNlZCA9ICh1dGlscy5pc1N0cmluZyhyZXF1ZXN0VVJMKSkgPyByZXNvbHZlVVJMKHJlcXVlc3RVUkwpIDogcmVxdWVzdFVSTDtcbiAgICAgICAgcmV0dXJuIChwYXJzZWQucHJvdG9jb2wgPT09IG9yaWdpblVSTC5wcm90b2NvbCAmJlxuICAgICAgICAgICAgcGFyc2VkLmhvc3QgPT09IG9yaWdpblVSTC5ob3N0KTtcbiAgICAgIH07XG4gICAgfSkoKSA6XG5cbiAgLy8gTm9uIHN0YW5kYXJkIGJyb3dzZXIgZW52cyAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgICAoZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbigpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9O1xuICAgIH0pKClcbik7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBzdXBwb3J0IGRvY3VtZW50LmNvb2tpZVxuICAgIChmdW5jdGlvbiBzdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3cml0ZTogZnVuY3Rpb24gd3JpdGUobmFtZSwgdmFsdWUsIGV4cGlyZXMsIHBhdGgsIGRvbWFpbiwgc2VjdXJlKSB7XG4gICAgICAgICAgdmFyIGNvb2tpZSA9IFtdO1xuICAgICAgICAgIGNvb2tpZS5wdXNoKG5hbWUgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpKTtcblxuICAgICAgICAgIGlmICh1dGlscy5pc051bWJlcihleHBpcmVzKSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ2V4cGlyZXM9JyArIG5ldyBEYXRlKGV4cGlyZXMpLnRvR01UU3RyaW5nKCkpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhwYXRoKSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3BhdGg9JyArIHBhdGgpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhkb21haW4pKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZG9tYWluPScgKyBkb21haW4pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChzZWN1cmUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdzZWN1cmUnKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBkb2N1bWVudC5jb29raWUgPSBjb29raWUuam9pbignOyAnKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKG5hbWUpIHtcbiAgICAgICAgICB2YXIgbWF0Y2ggPSBkb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cCgnKF58O1xcXFxzKikoJyArIG5hbWUgKyAnKT0oW147XSopJykpO1xuICAgICAgICAgIHJldHVybiAobWF0Y2ggPyBkZWNvZGVVUklDb21wb25lbnQobWF0Y2hbM10pIDogbnVsbCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUobmFtZSkge1xuICAgICAgICAgIHRoaXMud3JpdGUobmFtZSwgJycsIERhdGUubm93KCkgLSA4NjQwMDAwMCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSkoKSA6XG5cbiAgLy8gTm9uIHN0YW5kYXJkIGJyb3dzZXIgZW52ICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAgIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3cml0ZTogZnVuY3Rpb24gd3JpdGUoKSB7fSxcbiAgICAgICAgcmVhZDogZnVuY3Rpb24gcmVhZCgpIHsgcmV0dXJuIG51bGw7IH0sXG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICAgIH07XG4gICAgfSkoKVxuKTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIENhbmNlbCA9IHJlcXVpcmUoJy4vQ2FuY2VsJyk7XG5cbi8qKlxuICogQSBgQ2FuY2VsVG9rZW5gIGlzIGFuIG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIHRvIHJlcXVlc3QgY2FuY2VsbGF0aW9uIG9mIGFuIG9wZXJhdGlvbi5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGV4ZWN1dG9yIFRoZSBleGVjdXRvciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsVG9rZW4oZXhlY3V0b3IpIHtcbiAgaWYgKHR5cGVvZiBleGVjdXRvciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2V4ZWN1dG9yIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIHZhciByZXNvbHZlUHJvbWlzZTtcbiAgdGhpcy5wcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gcHJvbWlzZUV4ZWN1dG9yKHJlc29sdmUpIHtcbiAgICByZXNvbHZlUHJvbWlzZSA9IHJlc29sdmU7XG4gIH0pO1xuXG4gIHZhciB0b2tlbiA9IHRoaXM7XG4gIGV4ZWN1dG9yKGZ1bmN0aW9uIGNhbmNlbChtZXNzYWdlKSB7XG4gICAgaWYgKHRva2VuLnJlYXNvbikge1xuICAgICAgLy8gQ2FuY2VsbGF0aW9uIGhhcyBhbHJlYWR5IGJlZW4gcmVxdWVzdGVkXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdG9rZW4ucmVhc29uID0gbmV3IENhbmNlbChtZXNzYWdlKTtcbiAgICByZXNvbHZlUHJvbWlzZSh0b2tlbi5yZWFzb24pO1xuICB9KTtcbn1cblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5DYW5jZWxUb2tlbi5wcm90b3R5cGUudGhyb3dJZlJlcXVlc3RlZCA9IGZ1bmN0aW9uIHRocm93SWZSZXF1ZXN0ZWQoKSB7XG4gIGlmICh0aGlzLnJlYXNvbikge1xuICAgIHRocm93IHRoaXMucmVhc29uO1xuICB9XG59O1xuXG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgY29udGFpbnMgYSBuZXcgYENhbmNlbFRva2VuYCBhbmQgYSBmdW5jdGlvbiB0aGF0LCB3aGVuIGNhbGxlZCxcbiAqIGNhbmNlbHMgdGhlIGBDYW5jZWxUb2tlbmAuXG4gKi9cbkNhbmNlbFRva2VuLnNvdXJjZSA9IGZ1bmN0aW9uIHNvdXJjZSgpIHtcbiAgdmFyIGNhbmNlbDtcbiAgdmFyIHRva2VuID0gbmV3IENhbmNlbFRva2VuKGZ1bmN0aW9uIGV4ZWN1dG9yKGMpIHtcbiAgICBjYW5jZWwgPSBjO1xuICB9KTtcbiAgcmV0dXJuIHtcbiAgICB0b2tlbjogdG9rZW4sXG4gICAgY2FuY2VsOiBjYW5jZWxcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsVG9rZW47XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNwcmVhZChjYWxsYmFjaykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcChhcnIpIHtcbiAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkobnVsbCwgYXJyKTtcbiAgfTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9